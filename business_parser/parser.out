Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    POINT

Grammar

Rule 0     S' -> Program
Rule 1     Program -> ListInst
Rule 2     ListInst -> Instruction END ListInst
Rule 3     ListInst -> Instruction END
Rule 4     Instruction -> instance
Rule 5     Instruction -> SAVE ID
Rule 6     Instruction -> loop_statements
Rule 7     Instruction -> return_inst
Rule 8     Instruction -> IfStatement
Rule 9     Instruction -> IfStatement ELSE OBRACE ListInst CBRACE
Rule 10    return_inst -> RETURN Assignable
Rule 11    return_inst -> RETURN
Rule 12    Instruction -> ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
Rule 13    Instruction -> ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
Rule 14    Instruction -> ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
Rule 15    Instruction -> ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
Rule 16    Instruction -> ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
Rule 17    Instruction -> ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
Rule 18    Instruction -> ID ADD ID
Rule 19    Instruction -> ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
Rule 20    Instruction -> ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE
Rule 21    Instruction -> ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
Rule 22    Instruction -> ID ADD BILL OBRACE operation COMMA NAME CBRACE
Rule 23    Instruction -> ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
Rule 24    Instruction -> ID ADD BILL OBRACE ID COMMA NAME CBRACE
Rule 25    Instruction -> ID ADD subType
Rule 26    Instruction -> ID DEL NAME
Rule 27    Instruction -> ID DEL ID
Rule 28    Instruction -> ID DISMISS NAME
Rule 29    Instruction -> ID DISMISS ID
Rule 30    Instruction -> PRINT DPOINT ID
Rule 31    Instruction -> funct_call
Rule 32    Instruction -> DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
Rule 33    Instruction -> DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
Rule 34    Params -> TYPE ID COMMA Params
Rule 35    Params -> TYPE ID
Rule 36    Params -> empty
Rule 37    loop_statements -> FOREACH ID IN ID OBRACE ListInst CBRACE
Rule 38    loop_statements -> WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
Rule 39    IfStatement -> IF OPAREN condition CPAREN OBRACE ListInst CBRACE
Rule 40    condition -> bool_expression
Rule 41    bool_expression -> NOT bool_expression
Rule 42    bool_expression -> bool_expression AND bool_expression
Rule 43    bool_expression -> bool_expression OR bool_expression
Rule 44    bool_expression -> ID EQUAL ID
Rule 45    bool_expression -> ID LEQ ID
Rule 46    bool_expression -> ID GEQ ID
Rule 47    bool_expression -> ID GREATER ID
Rule 48    bool_expression -> ID LESS ID
Rule 49    bool_expression -> OPAREN bool_expression CPAREN
Rule 50    bool_expression -> ID IN ID
Rule 51    instance -> TYPE ID
Rule 52    instance -> TYPE ID ASSIGN Assignable
Rule 53    instance -> ID ASSIGN Assignable
Rule 54    operation -> operation PLUS operation
Rule 55    operation -> operation MINUS operation
Rule 56    operation -> operation DIV operation
Rule 57    operation -> operation MULT operation
Rule 58    operation -> ID
Rule 59    operation -> NUMBER
Rule 60    operation -> OPAREN operation CPAREN
Rule 61    Assignable -> subType
Rule 62    Assignable -> collection
Rule 63    Assignable -> GET NAME FROM ID
Rule 64    Assignable -> ID GET METRICS DATE
Rule 65    Assignable -> LOAD NAME
Rule 66    Assignable -> operation
Rule 67    Assignable -> funct_call
Rule 68    funct_call -> ID OPAREN Argument CPAREN
Rule 69    Argument -> Assignable COMMA Argument
Rule 70    Argument -> Assignable
Rule 71    funct_call -> empty
Rule 72    Assignable -> GET STAFF FROM ID
Rule 73    Assignable -> GET CATALOG FROM ID
Rule 74    Assignable -> GET AMOUNT FROM ID
Rule 75    subType -> OBRACE bus CBRACE
Rule 76    subType -> OBRACE emp CBRACE
Rule 77    subType -> OBRACE prod CBRACE
Rule 78    collection -> OBR collection_body CBR
Rule 79    collection_body -> subType COMMA collection_body
Rule 80    collection_body -> subType
Rule 81    collection_body -> empty
Rule 82    collection_body -> ID COMMA collection_body
Rule 83    collection_body -> ID
Rule 84    bus -> NAME COMMA collection COMMA collection
Rule 85    bus -> NAME COMMA ID COMMA ID
Rule 86    emp -> NAME COMMA SALARY DPOINT operation
Rule 87    prod -> NAME
Rule 88    prod -> NAME COMMA AMOUNT DPOINT operation
Rule 89    empty -> <empty>

Terminals, with rules where they appear

ACTION               : 12 13 14 15 16 17
ADD                  : 18 19 20 21 22 23 24 25
AMOUNT               : 12 13 14 15 16 17 74 88
AND                  : 42
ASSIGN               : 52 53
BILL                 : 19 20 21 22 23 24
CATALOG              : 73
CBR                  : 78
CBRACE               : 9 19 20 21 22 23 24 32 33 37 38 39 75 76 77
COMMA                : 19 20 21 22 23 24 34 69 79 82 84 84 85 85 86 88
COST                 : 15 16 17
CPAREN               : 32 33 38 39 49 60 68
DATE                 : 64
DEF                  : 32 33
DEL                  : 26 27
DESCRIP              : 19 21 23
DISMISS              : 28 29
DIV                  : 56
DPOINT               : 12 12 13 13 14 14 15 15 16 16 17 17 30 86 88
ELSE                 : 9
END                  : 2 3
EQUAL                : 44
FOREACH              : 37
FROM                 : 63 72 73 74
GEQ                  : 46
GET                  : 63 64 72 73 74
GREATER              : 47
ID                   : 5 12 12 13 13 13 13 14 14 15 15 16 16 16 16 17 17 18 18 19 20 21 22 23 23 24 24 25 26 27 27 28 29 29 30 32 33 34 35 37 37 44 44 45 45 46 46 47 47 48 48 50 50 51 52 53 58 63 64 68 72 73 74 82 83 85 85
IF                   : 39
IN                   : 37 50
INVESTS              : 15 16 17
LEQ                  : 45
LESS                 : 48
LOAD                 : 65
METRICS              : 64
MINUS                : 55
MULT                 : 57
NAME                 : 20 22 24 26 28 63 65 84 85 86 87 88
NOT                  : 41
NUMBER               : 12 12 15 15 19 20 59
OBR                  : 78
OBRACE               : 9 19 20 21 22 23 24 32 33 37 38 39 75 76 77
OPAREN               : 32 33 38 39 49 60 68
OR                   : 43
PLUS                 : 54
POINT                : 
PRICE                : 12 13 14
PRINT                : 30
RETURN               : 10 11
SALARY               : 86
SALE                 : 12 13 14
SAVE                 : 5
STAFF                : 72
TYPE                 : 32 34 35 51 52
VOID                 : 33
WHILE                : 38
error                : 

Nonterminals, with rules where they appear

Argument             : 68 69
Assignable           : 10 52 53 69 70
IfStatement          : 8 9
Instruction          : 2 3
ListInst             : 1 2 9 32 33 37 38 39
Params               : 32 33 34
Program              : 0
bool_expression      : 40 41 42 42 43 43 49
bus                  : 75
collection           : 62 84 84
collection_body      : 78 79 82
condition            : 38 39
emp                  : 76
empty                : 36 71 81
funct_call           : 31 67
instance             : 4
loop_statements      : 6
operation            : 14 14 17 17 21 22 54 54 55 55 56 56 57 57 60 66 86 88
prod                 : 77
return_inst          : 7
subType              : 25 61 79 80

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . ListInst
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . loop_statements
    (7) Instruction -> . return_inst
    (8) Instruction -> . IfStatement
    (9) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (12) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (15) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (16) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (17) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (18) Instruction -> . ID ADD ID
    (19) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (20) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE
    (21) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (22) Instruction -> . ID ADD BILL OBRACE operation COMMA NAME CBRACE
    (23) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (24) Instruction -> . ID ADD BILL OBRACE ID COMMA NAME CBRACE
    (25) Instruction -> . ID ADD subType
    (26) Instruction -> . ID DEL NAME
    (27) Instruction -> . ID DEL ID
    (28) Instruction -> . ID DISMISS NAME
    (29) Instruction -> . ID DISMISS ID
    (30) Instruction -> . PRINT DPOINT ID
    (31) Instruction -> . funct_call
    (32) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (33) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (51) instance -> . TYPE ID
    (52) instance -> . TYPE ID ASSIGN Assignable
    (53) instance -> . ID ASSIGN Assignable
    (37) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (38) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (10) return_inst -> . RETURN Assignable
    (11) return_inst -> . RETURN
    (39) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (68) funct_call -> . ID OPAREN Argument CPAREN
    (71) funct_call -> . empty
    (89) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 10
    DEF             shift and go to state 12
    TYPE            shift and go to state 13
    FOREACH         shift and go to state 14
    WHILE           shift and go to state 15
    RETURN          shift and go to state 16
    IF              shift and go to state 17
    END             reduce using rule 89 (empty -> .)

    Program                        shift and go to state 1
    ListInst                       shift and go to state 2
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    return_inst                    shift and go to state 8
    IfStatement                    shift and go to state 9
    funct_call                     shift and go to state 11
    empty                          shift and go to state 18

state 1

    (0) S' -> Program .



state 2

    (1) Program -> ListInst .

    $end            reduce using rule 1 (Program -> ListInst .)


state 3

    (2) ListInst -> Instruction . END ListInst
    (3) ListInst -> Instruction . END

    END             shift and go to state 19


state 4

    (4) Instruction -> instance .

    END             reduce using rule 4 (Instruction -> instance .)


state 5

    (5) Instruction -> SAVE . ID

    ID              shift and go to state 20


state 6

    (12) Instruction -> ID . ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> ID . ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> ID . ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (15) Instruction -> ID . ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (16) Instruction -> ID . ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (17) Instruction -> ID . ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (18) Instruction -> ID . ADD ID
    (19) Instruction -> ID . ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (20) Instruction -> ID . ADD BILL OBRACE NUMBER COMMA NAME CBRACE
    (21) Instruction -> ID . ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (22) Instruction -> ID . ADD BILL OBRACE operation COMMA NAME CBRACE
    (23) Instruction -> ID . ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (24) Instruction -> ID . ADD BILL OBRACE ID COMMA NAME CBRACE
    (25) Instruction -> ID . ADD subType
    (26) Instruction -> ID . DEL NAME
    (27) Instruction -> ID . DEL ID
    (28) Instruction -> ID . DISMISS NAME
    (29) Instruction -> ID . DISMISS ID
    (53) instance -> ID . ASSIGN Assignable
    (68) funct_call -> ID . OPAREN Argument CPAREN

    ACTION          shift and go to state 21
    ADD             shift and go to state 22
    DEL             shift and go to state 23
    DISMISS         shift and go to state 24
    ASSIGN          shift and go to state 25
    OPAREN          shift and go to state 26


state 7

    (6) Instruction -> loop_statements .

    END             reduce using rule 6 (Instruction -> loop_statements .)


state 8

    (7) Instruction -> return_inst .

    END             reduce using rule 7 (Instruction -> return_inst .)


state 9

    (8) Instruction -> IfStatement .
    (9) Instruction -> IfStatement . ELSE OBRACE ListInst CBRACE

    END             reduce using rule 8 (Instruction -> IfStatement .)
    ELSE            shift and go to state 27


state 10

    (30) Instruction -> PRINT . DPOINT ID

    DPOINT          shift and go to state 28


state 11

    (31) Instruction -> funct_call .

    END             reduce using rule 31 (Instruction -> funct_call .)


state 12

    (32) Instruction -> DEF . TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (33) Instruction -> DEF . VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE

    TYPE            shift and go to state 29
    VOID            shift and go to state 30


state 13

    (51) instance -> TYPE . ID
    (52) instance -> TYPE . ID ASSIGN Assignable

    ID              shift and go to state 31


state 14

    (37) loop_statements -> FOREACH . ID IN ID OBRACE ListInst CBRACE

    ID              shift and go to state 32


state 15

    (38) loop_statements -> WHILE . OPAREN condition CPAREN OBRACE ListInst CBRACE

    OPAREN          shift and go to state 33


state 16

    (10) return_inst -> RETURN . Assignable
    (11) return_inst -> RETURN .
    (61) Assignable -> . subType
    (62) Assignable -> . collection
    (63) Assignable -> . GET NAME FROM ID
    (64) Assignable -> . ID GET METRICS DATE
    (65) Assignable -> . LOAD NAME
    (66) Assignable -> . operation
    (67) Assignable -> . funct_call
    (72) Assignable -> . GET STAFF FROM ID
    (73) Assignable -> . GET CATALOG FROM ID
    (74) Assignable -> . GET AMOUNT FROM ID
    (75) subType -> . OBRACE bus CBRACE
    (76) subType -> . OBRACE emp CBRACE
    (77) subType -> . OBRACE prod CBRACE
    (78) collection -> . OBR collection_body CBR
    (54) operation -> . operation PLUS operation
    (55) operation -> . operation MINUS operation
    (56) operation -> . operation DIV operation
    (57) operation -> . operation MULT operation
    (58) operation -> . ID
    (59) operation -> . NUMBER
    (60) operation -> . OPAREN operation CPAREN
    (68) funct_call -> . ID OPAREN Argument CPAREN
    (71) funct_call -> . empty
    (89) empty -> .

  ! reduce/reduce conflict for END resolved using rule 11 (return_inst -> RETURN .)
    END             reduce using rule 11 (return_inst -> RETURN .)
    GET             shift and go to state 37
    ID              shift and go to state 38
    LOAD            shift and go to state 39
    OBRACE          shift and go to state 42
    OBR             shift and go to state 43
    NUMBER          shift and go to state 44
    OPAREN          shift and go to state 45

  ! END             [ reduce using rule 89 (empty -> .) ]

    Assignable                     shift and go to state 34
    subType                        shift and go to state 35
    collection                     shift and go to state 36
    operation                      shift and go to state 40
    funct_call                     shift and go to state 41
    empty                          shift and go to state 18

state 17

    (39) IfStatement -> IF . OPAREN condition CPAREN OBRACE ListInst CBRACE

    OPAREN          shift and go to state 46


state 18

    (71) funct_call -> empty .

    END             reduce using rule 71 (funct_call -> empty .)
    COMMA           reduce using rule 71 (funct_call -> empty .)
    CPAREN          reduce using rule 71 (funct_call -> empty .)


state 19

    (2) ListInst -> Instruction END . ListInst
    (3) ListInst -> Instruction END .
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . loop_statements
    (7) Instruction -> . return_inst
    (8) Instruction -> . IfStatement
    (9) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (12) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (15) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (16) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (17) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (18) Instruction -> . ID ADD ID
    (19) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (20) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE
    (21) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (22) Instruction -> . ID ADD BILL OBRACE operation COMMA NAME CBRACE
    (23) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (24) Instruction -> . ID ADD BILL OBRACE ID COMMA NAME CBRACE
    (25) Instruction -> . ID ADD subType
    (26) Instruction -> . ID DEL NAME
    (27) Instruction -> . ID DEL ID
    (28) Instruction -> . ID DISMISS NAME
    (29) Instruction -> . ID DISMISS ID
    (30) Instruction -> . PRINT DPOINT ID
    (31) Instruction -> . funct_call
    (32) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (33) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (51) instance -> . TYPE ID
    (52) instance -> . TYPE ID ASSIGN Assignable
    (53) instance -> . ID ASSIGN Assignable
    (37) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (38) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (10) return_inst -> . RETURN Assignable
    (11) return_inst -> . RETURN
    (39) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (68) funct_call -> . ID OPAREN Argument CPAREN
    (71) funct_call -> . empty
    (89) empty -> .

    $end            reduce using rule 3 (ListInst -> Instruction END .)
    CBRACE          reduce using rule 3 (ListInst -> Instruction END .)
    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 10
    DEF             shift and go to state 12
    TYPE            shift and go to state 13
    FOREACH         shift and go to state 14
    WHILE           shift and go to state 15
    RETURN          shift and go to state 16
    IF              shift and go to state 17
    END             reduce using rule 89 (empty -> .)

    Instruction                    shift and go to state 3
    ListInst                       shift and go to state 47
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    return_inst                    shift and go to state 8
    IfStatement                    shift and go to state 9
    funct_call                     shift and go to state 11
    empty                          shift and go to state 18

state 20

    (5) Instruction -> SAVE ID .

    END             reduce using rule 5 (Instruction -> SAVE ID .)


state 21

    (12) Instruction -> ID ACTION . SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> ID ACTION . SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> ID ACTION . SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (15) Instruction -> ID ACTION . INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (16) Instruction -> ID ACTION . INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (17) Instruction -> ID ACTION . INVESTS ID COST DPOINT operation AMOUNT DPOINT operation

    SALE            shift and go to state 48
    INVESTS         shift and go to state 49


state 22

    (18) Instruction -> ID ADD . ID
    (19) Instruction -> ID ADD . BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (20) Instruction -> ID ADD . BILL OBRACE NUMBER COMMA NAME CBRACE
    (21) Instruction -> ID ADD . BILL OBRACE operation COMMA DESCRIP CBRACE
    (22) Instruction -> ID ADD . BILL OBRACE operation COMMA NAME CBRACE
    (23) Instruction -> ID ADD . BILL OBRACE ID COMMA DESCRIP CBRACE
    (24) Instruction -> ID ADD . BILL OBRACE ID COMMA NAME CBRACE
    (25) Instruction -> ID ADD . subType
    (75) subType -> . OBRACE bus CBRACE
    (76) subType -> . OBRACE emp CBRACE
    (77) subType -> . OBRACE prod CBRACE

    ID              shift and go to state 50
    BILL            shift and go to state 51
    OBRACE          shift and go to state 42

    subType                        shift and go to state 52

state 23

    (26) Instruction -> ID DEL . NAME
    (27) Instruction -> ID DEL . ID

    NAME            shift and go to state 54
    ID              shift and go to state 53


state 24

    (28) Instruction -> ID DISMISS . NAME
    (29) Instruction -> ID DISMISS . ID

    NAME            shift and go to state 56
    ID              shift and go to state 55


state 25

    (53) instance -> ID ASSIGN . Assignable
    (61) Assignable -> . subType
    (62) Assignable -> . collection
    (63) Assignable -> . GET NAME FROM ID
    (64) Assignable -> . ID GET METRICS DATE
    (65) Assignable -> . LOAD NAME
    (66) Assignable -> . operation
    (67) Assignable -> . funct_call
    (72) Assignable -> . GET STAFF FROM ID
    (73) Assignable -> . GET CATALOG FROM ID
    (74) Assignable -> . GET AMOUNT FROM ID
    (75) subType -> . OBRACE bus CBRACE
    (76) subType -> . OBRACE emp CBRACE
    (77) subType -> . OBRACE prod CBRACE
    (78) collection -> . OBR collection_body CBR
    (54) operation -> . operation PLUS operation
    (55) operation -> . operation MINUS operation
    (56) operation -> . operation DIV operation
    (57) operation -> . operation MULT operation
    (58) operation -> . ID
    (59) operation -> . NUMBER
    (60) operation -> . OPAREN operation CPAREN
    (68) funct_call -> . ID OPAREN Argument CPAREN
    (71) funct_call -> . empty
    (89) empty -> .

    GET             shift and go to state 37
    ID              shift and go to state 38
    LOAD            shift and go to state 39
    OBRACE          shift and go to state 42
    OBR             shift and go to state 43
    NUMBER          shift and go to state 44
    OPAREN          shift and go to state 45
    END             reduce using rule 89 (empty -> .)

    Assignable                     shift and go to state 57
    subType                        shift and go to state 35
    collection                     shift and go to state 36
    operation                      shift and go to state 40
    funct_call                     shift and go to state 41
    empty                          shift and go to state 18

state 26

    (68) funct_call -> ID OPAREN . Argument CPAREN
    (69) Argument -> . Assignable COMMA Argument
    (70) Argument -> . Assignable
    (61) Assignable -> . subType
    (62) Assignable -> . collection
    (63) Assignable -> . GET NAME FROM ID
    (64) Assignable -> . ID GET METRICS DATE
    (65) Assignable -> . LOAD NAME
    (66) Assignable -> . operation
    (67) Assignable -> . funct_call
    (72) Assignable -> . GET STAFF FROM ID
    (73) Assignable -> . GET CATALOG FROM ID
    (74) Assignable -> . GET AMOUNT FROM ID
    (75) subType -> . OBRACE bus CBRACE
    (76) subType -> . OBRACE emp CBRACE
    (77) subType -> . OBRACE prod CBRACE
    (78) collection -> . OBR collection_body CBR
    (54) operation -> . operation PLUS operation
    (55) operation -> . operation MINUS operation
    (56) operation -> . operation DIV operation
    (57) operation -> . operation MULT operation
    (58) operation -> . ID
    (59) operation -> . NUMBER
    (60) operation -> . OPAREN operation CPAREN
    (68) funct_call -> . ID OPAREN Argument CPAREN
    (71) funct_call -> . empty
    (89) empty -> .

    GET             shift and go to state 37
    ID              shift and go to state 38
    LOAD            shift and go to state 39
    OBRACE          shift and go to state 42
    OBR             shift and go to state 43
    NUMBER          shift and go to state 44
    OPAREN          shift and go to state 45
    COMMA           reduce using rule 89 (empty -> .)
    CPAREN          reduce using rule 89 (empty -> .)

    Argument                       shift and go to state 58
    Assignable                     shift and go to state 59
    subType                        shift and go to state 35
    collection                     shift and go to state 36
    operation                      shift and go to state 40
    funct_call                     shift and go to state 41
    empty                          shift and go to state 18

state 27

    (9) Instruction -> IfStatement ELSE . OBRACE ListInst CBRACE

    OBRACE          shift and go to state 60


state 28

    (30) Instruction -> PRINT DPOINT . ID

    ID              shift and go to state 61


state 29

    (32) Instruction -> DEF TYPE . ID OPAREN Params CPAREN OBRACE ListInst CBRACE

    ID              shift and go to state 62


state 30

    (33) Instruction -> DEF VOID . ID OPAREN Params CPAREN OBRACE ListInst CBRACE

    ID              shift and go to state 63


state 31

    (51) instance -> TYPE ID .
    (52) instance -> TYPE ID . ASSIGN Assignable

    END             reduce using rule 51 (instance -> TYPE ID .)
    ASSIGN          shift and go to state 64


state 32

    (37) loop_statements -> FOREACH ID . IN ID OBRACE ListInst CBRACE

    IN              shift and go to state 65


state 33

    (38) loop_statements -> WHILE OPAREN . condition CPAREN OBRACE ListInst CBRACE
    (40) condition -> . bool_expression
    (41) bool_expression -> . NOT bool_expression
    (42) bool_expression -> . bool_expression AND bool_expression
    (43) bool_expression -> . bool_expression OR bool_expression
    (44) bool_expression -> . ID EQUAL ID
    (45) bool_expression -> . ID LEQ ID
    (46) bool_expression -> . ID GEQ ID
    (47) bool_expression -> . ID GREATER ID
    (48) bool_expression -> . ID LESS ID
    (49) bool_expression -> . OPAREN bool_expression CPAREN
    (50) bool_expression -> . ID IN ID

    NOT             shift and go to state 69
    ID              shift and go to state 70
    OPAREN          shift and go to state 66

    condition                      shift and go to state 67
    bool_expression                shift and go to state 68

state 34

    (10) return_inst -> RETURN Assignable .

    END             reduce using rule 10 (return_inst -> RETURN Assignable .)


state 35

    (61) Assignable -> subType .

    END             reduce using rule 61 (Assignable -> subType .)
    COMMA           reduce using rule 61 (Assignable -> subType .)
    CPAREN          reduce using rule 61 (Assignable -> subType .)


state 36

    (62) Assignable -> collection .

    END             reduce using rule 62 (Assignable -> collection .)
    COMMA           reduce using rule 62 (Assignable -> collection .)
    CPAREN          reduce using rule 62 (Assignable -> collection .)


state 37

    (63) Assignable -> GET . NAME FROM ID
    (72) Assignable -> GET . STAFF FROM ID
    (73) Assignable -> GET . CATALOG FROM ID
    (74) Assignable -> GET . AMOUNT FROM ID

    NAME            shift and go to state 71
    STAFF           shift and go to state 72
    CATALOG         shift and go to state 73
    AMOUNT          shift and go to state 74


state 38

    (64) Assignable -> ID . GET METRICS DATE
    (58) operation -> ID .
    (68) funct_call -> ID . OPAREN Argument CPAREN

    GET             shift and go to state 75
    PLUS            reduce using rule 58 (operation -> ID .)
    MINUS           reduce using rule 58 (operation -> ID .)
    DIV             reduce using rule 58 (operation -> ID .)
    MULT            reduce using rule 58 (operation -> ID .)
    END             reduce using rule 58 (operation -> ID .)
    COMMA           reduce using rule 58 (operation -> ID .)
    CPAREN          reduce using rule 58 (operation -> ID .)
    OPAREN          shift and go to state 26


state 39

    (65) Assignable -> LOAD . NAME

    NAME            shift and go to state 76


state 40

    (66) Assignable -> operation .
    (54) operation -> operation . PLUS operation
    (55) operation -> operation . MINUS operation
    (56) operation -> operation . DIV operation
    (57) operation -> operation . MULT operation

    END             reduce using rule 66 (Assignable -> operation .)
    COMMA           reduce using rule 66 (Assignable -> operation .)
    CPAREN          reduce using rule 66 (Assignable -> operation .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    DIV             shift and go to state 79
    MULT            shift and go to state 80


state 41

    (67) Assignable -> funct_call .

    END             reduce using rule 67 (Assignable -> funct_call .)
    COMMA           reduce using rule 67 (Assignable -> funct_call .)
    CPAREN          reduce using rule 67 (Assignable -> funct_call .)


state 42

    (75) subType -> OBRACE . bus CBRACE
    (76) subType -> OBRACE . emp CBRACE
    (77) subType -> OBRACE . prod CBRACE
    (84) bus -> . NAME COMMA collection COMMA collection
    (85) bus -> . NAME COMMA ID COMMA ID
    (86) emp -> . NAME COMMA SALARY DPOINT operation
    (87) prod -> . NAME
    (88) prod -> . NAME COMMA AMOUNT DPOINT operation

    NAME            shift and go to state 84

    bus                            shift and go to state 81
    emp                            shift and go to state 82
    prod                           shift and go to state 83

state 43

    (78) collection -> OBR . collection_body CBR
    (79) collection_body -> . subType COMMA collection_body
    (80) collection_body -> . subType
    (81) collection_body -> . empty
    (82) collection_body -> . ID COMMA collection_body
    (83) collection_body -> . ID
    (75) subType -> . OBRACE bus CBRACE
    (76) subType -> . OBRACE emp CBRACE
    (77) subType -> . OBRACE prod CBRACE
    (89) empty -> .

    ID              shift and go to state 88
    OBRACE          shift and go to state 42
    CBR             reduce using rule 89 (empty -> .)

    collection_body                shift and go to state 85
    subType                        shift and go to state 86
    empty                          shift and go to state 87

state 44

    (59) operation -> NUMBER .

    PLUS            reduce using rule 59 (operation -> NUMBER .)
    MINUS           reduce using rule 59 (operation -> NUMBER .)
    DIV             reduce using rule 59 (operation -> NUMBER .)
    MULT            reduce using rule 59 (operation -> NUMBER .)
    END             reduce using rule 59 (operation -> NUMBER .)
    COMMA           reduce using rule 59 (operation -> NUMBER .)
    CPAREN          reduce using rule 59 (operation -> NUMBER .)
    AMOUNT          reduce using rule 59 (operation -> NUMBER .)
    CBRACE          reduce using rule 59 (operation -> NUMBER .)


state 45

    (60) operation -> OPAREN . operation CPAREN
    (54) operation -> . operation PLUS operation
    (55) operation -> . operation MINUS operation
    (56) operation -> . operation DIV operation
    (57) operation -> . operation MULT operation
    (58) operation -> . ID
    (59) operation -> . NUMBER
    (60) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 90
    NUMBER          shift and go to state 44
    OPAREN          shift and go to state 45

    operation                      shift and go to state 89

state 46

    (39) IfStatement -> IF OPAREN . condition CPAREN OBRACE ListInst CBRACE
    (40) condition -> . bool_expression
    (41) bool_expression -> . NOT bool_expression
    (42) bool_expression -> . bool_expression AND bool_expression
    (43) bool_expression -> . bool_expression OR bool_expression
    (44) bool_expression -> . ID EQUAL ID
    (45) bool_expression -> . ID LEQ ID
    (46) bool_expression -> . ID GEQ ID
    (47) bool_expression -> . ID GREATER ID
    (48) bool_expression -> . ID LESS ID
    (49) bool_expression -> . OPAREN bool_expression CPAREN
    (50) bool_expression -> . ID IN ID

    NOT             shift and go to state 69
    ID              shift and go to state 70
    OPAREN          shift and go to state 66

    condition                      shift and go to state 91
    bool_expression                shift and go to state 68

state 47

    (2) ListInst -> Instruction END ListInst .

    $end            reduce using rule 2 (ListInst -> Instruction END ListInst .)
    CBRACE          reduce using rule 2 (ListInst -> Instruction END ListInst .)


state 48

    (12) Instruction -> ID ACTION SALE . ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> ID ACTION SALE . ID PRICE DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> ID ACTION SALE . ID PRICE DPOINT operation AMOUNT DPOINT operation

    ID              shift and go to state 92


state 49

    (15) Instruction -> ID ACTION INVESTS . ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (16) Instruction -> ID ACTION INVESTS . ID COST DPOINT ID AMOUNT DPOINT ID
    (17) Instruction -> ID ACTION INVESTS . ID COST DPOINT operation AMOUNT DPOINT operation

    ID              shift and go to state 93


state 50

    (18) Instruction -> ID ADD ID .

    END             reduce using rule 18 (Instruction -> ID ADD ID .)


state 51

    (19) Instruction -> ID ADD BILL . OBRACE NUMBER COMMA DESCRIP CBRACE
    (20) Instruction -> ID ADD BILL . OBRACE NUMBER COMMA NAME CBRACE
    (21) Instruction -> ID ADD BILL . OBRACE operation COMMA DESCRIP CBRACE
    (22) Instruction -> ID ADD BILL . OBRACE operation COMMA NAME CBRACE
    (23) Instruction -> ID ADD BILL . OBRACE ID COMMA DESCRIP CBRACE
    (24) Instruction -> ID ADD BILL . OBRACE ID COMMA NAME CBRACE

    OBRACE          shift and go to state 94


state 52

    (25) Instruction -> ID ADD subType .

    END             reduce using rule 25 (Instruction -> ID ADD subType .)


state 53

    (27) Instruction -> ID DEL ID .

    END             reduce using rule 27 (Instruction -> ID DEL ID .)


state 54

    (26) Instruction -> ID DEL NAME .

    END             reduce using rule 26 (Instruction -> ID DEL NAME .)


state 55

    (29) Instruction -> ID DISMISS ID .

    END             reduce using rule 29 (Instruction -> ID DISMISS ID .)


state 56

    (28) Instruction -> ID DISMISS NAME .

    END             reduce using rule 28 (Instruction -> ID DISMISS NAME .)


state 57

    (53) instance -> ID ASSIGN Assignable .

    END             reduce using rule 53 (instance -> ID ASSIGN Assignable .)


state 58

    (68) funct_call -> ID OPAREN Argument . CPAREN

    CPAREN          shift and go to state 95


state 59

    (69) Argument -> Assignable . COMMA Argument
    (70) Argument -> Assignable .

    COMMA           shift and go to state 96
    CPAREN          reduce using rule 70 (Argument -> Assignable .)


state 60

    (9) Instruction -> IfStatement ELSE OBRACE . ListInst CBRACE
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . loop_statements
    (7) Instruction -> . return_inst
    (8) Instruction -> . IfStatement
    (9) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (12) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (15) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (16) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (17) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (18) Instruction -> . ID ADD ID
    (19) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (20) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE
    (21) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (22) Instruction -> . ID ADD BILL OBRACE operation COMMA NAME CBRACE
    (23) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (24) Instruction -> . ID ADD BILL OBRACE ID COMMA NAME CBRACE
    (25) Instruction -> . ID ADD subType
    (26) Instruction -> . ID DEL NAME
    (27) Instruction -> . ID DEL ID
    (28) Instruction -> . ID DISMISS NAME
    (29) Instruction -> . ID DISMISS ID
    (30) Instruction -> . PRINT DPOINT ID
    (31) Instruction -> . funct_call
    (32) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (33) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (51) instance -> . TYPE ID
    (52) instance -> . TYPE ID ASSIGN Assignable
    (53) instance -> . ID ASSIGN Assignable
    (37) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (38) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (10) return_inst -> . RETURN Assignable
    (11) return_inst -> . RETURN
    (39) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (68) funct_call -> . ID OPAREN Argument CPAREN
    (71) funct_call -> . empty
    (89) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 10
    DEF             shift and go to state 12
    TYPE            shift and go to state 13
    FOREACH         shift and go to state 14
    WHILE           shift and go to state 15
    RETURN          shift and go to state 16
    IF              shift and go to state 17
    END             reduce using rule 89 (empty -> .)

    IfStatement                    shift and go to state 9
    ListInst                       shift and go to state 97
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    return_inst                    shift and go to state 8
    funct_call                     shift and go to state 11
    empty                          shift and go to state 18

state 61

    (30) Instruction -> PRINT DPOINT ID .

    END             reduce using rule 30 (Instruction -> PRINT DPOINT ID .)


state 62

    (32) Instruction -> DEF TYPE ID . OPAREN Params CPAREN OBRACE ListInst CBRACE

    OPAREN          shift and go to state 98


state 63

    (33) Instruction -> DEF VOID ID . OPAREN Params CPAREN OBRACE ListInst CBRACE

    OPAREN          shift and go to state 99


state 64

    (52) instance -> TYPE ID ASSIGN . Assignable
    (61) Assignable -> . subType
    (62) Assignable -> . collection
    (63) Assignable -> . GET NAME FROM ID
    (64) Assignable -> . ID GET METRICS DATE
    (65) Assignable -> . LOAD NAME
    (66) Assignable -> . operation
    (67) Assignable -> . funct_call
    (72) Assignable -> . GET STAFF FROM ID
    (73) Assignable -> . GET CATALOG FROM ID
    (74) Assignable -> . GET AMOUNT FROM ID
    (75) subType -> . OBRACE bus CBRACE
    (76) subType -> . OBRACE emp CBRACE
    (77) subType -> . OBRACE prod CBRACE
    (78) collection -> . OBR collection_body CBR
    (54) operation -> . operation PLUS operation
    (55) operation -> . operation MINUS operation
    (56) operation -> . operation DIV operation
    (57) operation -> . operation MULT operation
    (58) operation -> . ID
    (59) operation -> . NUMBER
    (60) operation -> . OPAREN operation CPAREN
    (68) funct_call -> . ID OPAREN Argument CPAREN
    (71) funct_call -> . empty
    (89) empty -> .

    GET             shift and go to state 37
    ID              shift and go to state 38
    LOAD            shift and go to state 39
    OBRACE          shift and go to state 42
    OBR             shift and go to state 43
    NUMBER          shift and go to state 44
    OPAREN          shift and go to state 45
    END             reduce using rule 89 (empty -> .)

    Assignable                     shift and go to state 100
    subType                        shift and go to state 35
    collection                     shift and go to state 36
    operation                      shift and go to state 40
    funct_call                     shift and go to state 41
    empty                          shift and go to state 18

state 65

    (37) loop_statements -> FOREACH ID IN . ID OBRACE ListInst CBRACE

    ID              shift and go to state 101


state 66

    (49) bool_expression -> OPAREN . bool_expression CPAREN
    (41) bool_expression -> . NOT bool_expression
    (42) bool_expression -> . bool_expression AND bool_expression
    (43) bool_expression -> . bool_expression OR bool_expression
    (44) bool_expression -> . ID EQUAL ID
    (45) bool_expression -> . ID LEQ ID
    (46) bool_expression -> . ID GEQ ID
    (47) bool_expression -> . ID GREATER ID
    (48) bool_expression -> . ID LESS ID
    (49) bool_expression -> . OPAREN bool_expression CPAREN
    (50) bool_expression -> . ID IN ID

    NOT             shift and go to state 69
    ID              shift and go to state 70
    OPAREN          shift and go to state 66

    bool_expression                shift and go to state 102

state 67

    (38) loop_statements -> WHILE OPAREN condition . CPAREN OBRACE ListInst CBRACE

    CPAREN          shift and go to state 103


state 68

    (40) condition -> bool_expression .
    (42) bool_expression -> bool_expression . AND bool_expression
    (43) bool_expression -> bool_expression . OR bool_expression

    CPAREN          reduce using rule 40 (condition -> bool_expression .)
    AND             shift and go to state 104
    OR              shift and go to state 105


state 69

    (41) bool_expression -> NOT . bool_expression
    (41) bool_expression -> . NOT bool_expression
    (42) bool_expression -> . bool_expression AND bool_expression
    (43) bool_expression -> . bool_expression OR bool_expression
    (44) bool_expression -> . ID EQUAL ID
    (45) bool_expression -> . ID LEQ ID
    (46) bool_expression -> . ID GEQ ID
    (47) bool_expression -> . ID GREATER ID
    (48) bool_expression -> . ID LESS ID
    (49) bool_expression -> . OPAREN bool_expression CPAREN
    (50) bool_expression -> . ID IN ID

    NOT             shift and go to state 69
    ID              shift and go to state 70
    OPAREN          shift and go to state 66

    bool_expression                shift and go to state 106

state 70

    (44) bool_expression -> ID . EQUAL ID
    (45) bool_expression -> ID . LEQ ID
    (46) bool_expression -> ID . GEQ ID
    (47) bool_expression -> ID . GREATER ID
    (48) bool_expression -> ID . LESS ID
    (50) bool_expression -> ID . IN ID

    EQUAL           shift and go to state 107
    LEQ             shift and go to state 108
    GEQ             shift and go to state 109
    GREATER         shift and go to state 110
    LESS            shift and go to state 111
    IN              shift and go to state 112


state 71

    (63) Assignable -> GET NAME . FROM ID

    FROM            shift and go to state 113


state 72

    (72) Assignable -> GET STAFF . FROM ID

    FROM            shift and go to state 114


state 73

    (73) Assignable -> GET CATALOG . FROM ID

    FROM            shift and go to state 115


state 74

    (74) Assignable -> GET AMOUNT . FROM ID

    FROM            shift and go to state 116


state 75

    (64) Assignable -> ID GET . METRICS DATE

    METRICS         shift and go to state 117


state 76

    (65) Assignable -> LOAD NAME .

    END             reduce using rule 65 (Assignable -> LOAD NAME .)
    COMMA           reduce using rule 65 (Assignable -> LOAD NAME .)
    CPAREN          reduce using rule 65 (Assignable -> LOAD NAME .)


state 77

    (54) operation -> operation PLUS . operation
    (54) operation -> . operation PLUS operation
    (55) operation -> . operation MINUS operation
    (56) operation -> . operation DIV operation
    (57) operation -> . operation MULT operation
    (58) operation -> . ID
    (59) operation -> . NUMBER
    (60) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 90
    NUMBER          shift and go to state 44
    OPAREN          shift and go to state 45

    operation                      shift and go to state 118

state 78

    (55) operation -> operation MINUS . operation
    (54) operation -> . operation PLUS operation
    (55) operation -> . operation MINUS operation
    (56) operation -> . operation DIV operation
    (57) operation -> . operation MULT operation
    (58) operation -> . ID
    (59) operation -> . NUMBER
    (60) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 90
    NUMBER          shift and go to state 44
    OPAREN          shift and go to state 45

    operation                      shift and go to state 119

state 79

    (56) operation -> operation DIV . operation
    (54) operation -> . operation PLUS operation
    (55) operation -> . operation MINUS operation
    (56) operation -> . operation DIV operation
    (57) operation -> . operation MULT operation
    (58) operation -> . ID
    (59) operation -> . NUMBER
    (60) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 90
    NUMBER          shift and go to state 44
    OPAREN          shift and go to state 45

    operation                      shift and go to state 120

state 80

    (57) operation -> operation MULT . operation
    (54) operation -> . operation PLUS operation
    (55) operation -> . operation MINUS operation
    (56) operation -> . operation DIV operation
    (57) operation -> . operation MULT operation
    (58) operation -> . ID
    (59) operation -> . NUMBER
    (60) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 90
    NUMBER          shift and go to state 44
    OPAREN          shift and go to state 45

    operation                      shift and go to state 121

state 81

    (75) subType -> OBRACE bus . CBRACE

    CBRACE          shift and go to state 122


state 82

    (76) subType -> OBRACE emp . CBRACE

    CBRACE          shift and go to state 123


state 83

    (77) subType -> OBRACE prod . CBRACE

    CBRACE          shift and go to state 124


state 84

    (84) bus -> NAME . COMMA collection COMMA collection
    (85) bus -> NAME . COMMA ID COMMA ID
    (86) emp -> NAME . COMMA SALARY DPOINT operation
    (87) prod -> NAME .
    (88) prod -> NAME . COMMA AMOUNT DPOINT operation

    COMMA           shift and go to state 125
    CBRACE          reduce using rule 87 (prod -> NAME .)


state 85

    (78) collection -> OBR collection_body . CBR

    CBR             shift and go to state 126


state 86

    (79) collection_body -> subType . COMMA collection_body
    (80) collection_body -> subType .

    COMMA           shift and go to state 127
    CBR             reduce using rule 80 (collection_body -> subType .)


state 87

    (81) collection_body -> empty .

    CBR             reduce using rule 81 (collection_body -> empty .)


state 88

    (82) collection_body -> ID . COMMA collection_body
    (83) collection_body -> ID .

    COMMA           shift and go to state 128
    CBR             reduce using rule 83 (collection_body -> ID .)


state 89

    (60) operation -> OPAREN operation . CPAREN
    (54) operation -> operation . PLUS operation
    (55) operation -> operation . MINUS operation
    (56) operation -> operation . DIV operation
    (57) operation -> operation . MULT operation

    CPAREN          shift and go to state 129
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    DIV             shift and go to state 79
    MULT            shift and go to state 80


state 90

    (58) operation -> ID .

    CPAREN          reduce using rule 58 (operation -> ID .)
    PLUS            reduce using rule 58 (operation -> ID .)
    MINUS           reduce using rule 58 (operation -> ID .)
    DIV             reduce using rule 58 (operation -> ID .)
    MULT            reduce using rule 58 (operation -> ID .)
    END             reduce using rule 58 (operation -> ID .)
    COMMA           reduce using rule 58 (operation -> ID .)
    AMOUNT          reduce using rule 58 (operation -> ID .)
    CBRACE          reduce using rule 58 (operation -> ID .)


state 91

    (39) IfStatement -> IF OPAREN condition . CPAREN OBRACE ListInst CBRACE

    CPAREN          shift and go to state 130


state 92

    (12) Instruction -> ID ACTION SALE ID . PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> ID ACTION SALE ID . PRICE DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> ID ACTION SALE ID . PRICE DPOINT operation AMOUNT DPOINT operation

    PRICE           shift and go to state 131


state 93

    (15) Instruction -> ID ACTION INVESTS ID . COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (16) Instruction -> ID ACTION INVESTS ID . COST DPOINT ID AMOUNT DPOINT ID
    (17) Instruction -> ID ACTION INVESTS ID . COST DPOINT operation AMOUNT DPOINT operation

    COST            shift and go to state 132


state 94

    (19) Instruction -> ID ADD BILL OBRACE . NUMBER COMMA DESCRIP CBRACE
    (20) Instruction -> ID ADD BILL OBRACE . NUMBER COMMA NAME CBRACE
    (21) Instruction -> ID ADD BILL OBRACE . operation COMMA DESCRIP CBRACE
    (22) Instruction -> ID ADD BILL OBRACE . operation COMMA NAME CBRACE
    (23) Instruction -> ID ADD BILL OBRACE . ID COMMA DESCRIP CBRACE
    (24) Instruction -> ID ADD BILL OBRACE . ID COMMA NAME CBRACE
    (54) operation -> . operation PLUS operation
    (55) operation -> . operation MINUS operation
    (56) operation -> . operation DIV operation
    (57) operation -> . operation MULT operation
    (58) operation -> . ID
    (59) operation -> . NUMBER
    (60) operation -> . OPAREN operation CPAREN

    NUMBER          shift and go to state 134
    ID              shift and go to state 133
    OPAREN          shift and go to state 45

    operation                      shift and go to state 135

state 95

    (68) funct_call -> ID OPAREN Argument CPAREN .

    END             reduce using rule 68 (funct_call -> ID OPAREN Argument CPAREN .)
    COMMA           reduce using rule 68 (funct_call -> ID OPAREN Argument CPAREN .)
    CPAREN          reduce using rule 68 (funct_call -> ID OPAREN Argument CPAREN .)


state 96

    (69) Argument -> Assignable COMMA . Argument
    (69) Argument -> . Assignable COMMA Argument
    (70) Argument -> . Assignable
    (61) Assignable -> . subType
    (62) Assignable -> . collection
    (63) Assignable -> . GET NAME FROM ID
    (64) Assignable -> . ID GET METRICS DATE
    (65) Assignable -> . LOAD NAME
    (66) Assignable -> . operation
    (67) Assignable -> . funct_call
    (72) Assignable -> . GET STAFF FROM ID
    (73) Assignable -> . GET CATALOG FROM ID
    (74) Assignable -> . GET AMOUNT FROM ID
    (75) subType -> . OBRACE bus CBRACE
    (76) subType -> . OBRACE emp CBRACE
    (77) subType -> . OBRACE prod CBRACE
    (78) collection -> . OBR collection_body CBR
    (54) operation -> . operation PLUS operation
    (55) operation -> . operation MINUS operation
    (56) operation -> . operation DIV operation
    (57) operation -> . operation MULT operation
    (58) operation -> . ID
    (59) operation -> . NUMBER
    (60) operation -> . OPAREN operation CPAREN
    (68) funct_call -> . ID OPAREN Argument CPAREN
    (71) funct_call -> . empty
    (89) empty -> .

    GET             shift and go to state 37
    ID              shift and go to state 38
    LOAD            shift and go to state 39
    OBRACE          shift and go to state 42
    OBR             shift and go to state 43
    NUMBER          shift and go to state 44
    OPAREN          shift and go to state 45
    COMMA           reduce using rule 89 (empty -> .)
    CPAREN          reduce using rule 89 (empty -> .)

    Assignable                     shift and go to state 59
    Argument                       shift and go to state 136
    subType                        shift and go to state 35
    collection                     shift and go to state 36
    operation                      shift and go to state 40
    funct_call                     shift and go to state 41
    empty                          shift and go to state 18

state 97

    (9) Instruction -> IfStatement ELSE OBRACE ListInst . CBRACE

    CBRACE          shift and go to state 137


state 98

    (32) Instruction -> DEF TYPE ID OPAREN . Params CPAREN OBRACE ListInst CBRACE
    (34) Params -> . TYPE ID COMMA Params
    (35) Params -> . TYPE ID
    (36) Params -> . empty
    (89) empty -> .

    TYPE            shift and go to state 138
    CPAREN          reduce using rule 89 (empty -> .)

    Params                         shift and go to state 139
    empty                          shift and go to state 140

state 99

    (33) Instruction -> DEF VOID ID OPAREN . Params CPAREN OBRACE ListInst CBRACE
    (34) Params -> . TYPE ID COMMA Params
    (35) Params -> . TYPE ID
    (36) Params -> . empty
    (89) empty -> .

    TYPE            shift and go to state 138
    CPAREN          reduce using rule 89 (empty -> .)

    Params                         shift and go to state 141
    empty                          shift and go to state 140

state 100

    (52) instance -> TYPE ID ASSIGN Assignable .

    END             reduce using rule 52 (instance -> TYPE ID ASSIGN Assignable .)


state 101

    (37) loop_statements -> FOREACH ID IN ID . OBRACE ListInst CBRACE

    OBRACE          shift and go to state 142


state 102

    (49) bool_expression -> OPAREN bool_expression . CPAREN
    (42) bool_expression -> bool_expression . AND bool_expression
    (43) bool_expression -> bool_expression . OR bool_expression

    CPAREN          shift and go to state 143
    AND             shift and go to state 104
    OR              shift and go to state 105


state 103

    (38) loop_statements -> WHILE OPAREN condition CPAREN . OBRACE ListInst CBRACE

    OBRACE          shift and go to state 144


state 104

    (42) bool_expression -> bool_expression AND . bool_expression
    (41) bool_expression -> . NOT bool_expression
    (42) bool_expression -> . bool_expression AND bool_expression
    (43) bool_expression -> . bool_expression OR bool_expression
    (44) bool_expression -> . ID EQUAL ID
    (45) bool_expression -> . ID LEQ ID
    (46) bool_expression -> . ID GEQ ID
    (47) bool_expression -> . ID GREATER ID
    (48) bool_expression -> . ID LESS ID
    (49) bool_expression -> . OPAREN bool_expression CPAREN
    (50) bool_expression -> . ID IN ID

    NOT             shift and go to state 69
    ID              shift and go to state 70
    OPAREN          shift and go to state 66

    bool_expression                shift and go to state 145

state 105

    (43) bool_expression -> bool_expression OR . bool_expression
    (41) bool_expression -> . NOT bool_expression
    (42) bool_expression -> . bool_expression AND bool_expression
    (43) bool_expression -> . bool_expression OR bool_expression
    (44) bool_expression -> . ID EQUAL ID
    (45) bool_expression -> . ID LEQ ID
    (46) bool_expression -> . ID GEQ ID
    (47) bool_expression -> . ID GREATER ID
    (48) bool_expression -> . ID LESS ID
    (49) bool_expression -> . OPAREN bool_expression CPAREN
    (50) bool_expression -> . ID IN ID

    NOT             shift and go to state 69
    ID              shift and go to state 70
    OPAREN          shift and go to state 66

    bool_expression                shift and go to state 146

state 106

    (41) bool_expression -> NOT bool_expression .
    (42) bool_expression -> bool_expression . AND bool_expression
    (43) bool_expression -> bool_expression . OR bool_expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    CPAREN          reduce using rule 41 (bool_expression -> NOT bool_expression .)
    AND             shift and go to state 104
    OR              shift and go to state 105

  ! AND             [ reduce using rule 41 (bool_expression -> NOT bool_expression .) ]
  ! OR              [ reduce using rule 41 (bool_expression -> NOT bool_expression .) ]


state 107

    (44) bool_expression -> ID EQUAL . ID

    ID              shift and go to state 147


state 108

    (45) bool_expression -> ID LEQ . ID

    ID              shift and go to state 148


state 109

    (46) bool_expression -> ID GEQ . ID

    ID              shift and go to state 149


state 110

    (47) bool_expression -> ID GREATER . ID

    ID              shift and go to state 150


state 111

    (48) bool_expression -> ID LESS . ID

    ID              shift and go to state 151


state 112

    (50) bool_expression -> ID IN . ID

    ID              shift and go to state 152


state 113

    (63) Assignable -> GET NAME FROM . ID

    ID              shift and go to state 153


state 114

    (72) Assignable -> GET STAFF FROM . ID

    ID              shift and go to state 154


state 115

    (73) Assignable -> GET CATALOG FROM . ID

    ID              shift and go to state 155


state 116

    (74) Assignable -> GET AMOUNT FROM . ID

    ID              shift and go to state 156


state 117

    (64) Assignable -> ID GET METRICS . DATE

    DATE            shift and go to state 157


state 118

    (54) operation -> operation PLUS operation .
    (54) operation -> operation . PLUS operation
    (55) operation -> operation . MINUS operation
    (56) operation -> operation . DIV operation
    (57) operation -> operation . MULT operation

    PLUS            reduce using rule 54 (operation -> operation PLUS operation .)
    MINUS           reduce using rule 54 (operation -> operation PLUS operation .)
    END             reduce using rule 54 (operation -> operation PLUS operation .)
    COMMA           reduce using rule 54 (operation -> operation PLUS operation .)
    CPAREN          reduce using rule 54 (operation -> operation PLUS operation .)
    AMOUNT          reduce using rule 54 (operation -> operation PLUS operation .)
    CBRACE          reduce using rule 54 (operation -> operation PLUS operation .)
    DIV             shift and go to state 79
    MULT            shift and go to state 80

  ! DIV             [ reduce using rule 54 (operation -> operation PLUS operation .) ]
  ! MULT            [ reduce using rule 54 (operation -> operation PLUS operation .) ]
  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]


state 119

    (55) operation -> operation MINUS operation .
    (54) operation -> operation . PLUS operation
    (55) operation -> operation . MINUS operation
    (56) operation -> operation . DIV operation
    (57) operation -> operation . MULT operation

    PLUS            reduce using rule 55 (operation -> operation MINUS operation .)
    MINUS           reduce using rule 55 (operation -> operation MINUS operation .)
    END             reduce using rule 55 (operation -> operation MINUS operation .)
    COMMA           reduce using rule 55 (operation -> operation MINUS operation .)
    CPAREN          reduce using rule 55 (operation -> operation MINUS operation .)
    AMOUNT          reduce using rule 55 (operation -> operation MINUS operation .)
    CBRACE          reduce using rule 55 (operation -> operation MINUS operation .)
    DIV             shift and go to state 79
    MULT            shift and go to state 80

  ! DIV             [ reduce using rule 55 (operation -> operation MINUS operation .) ]
  ! MULT            [ reduce using rule 55 (operation -> operation MINUS operation .) ]
  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]


state 120

    (56) operation -> operation DIV operation .
    (54) operation -> operation . PLUS operation
    (55) operation -> operation . MINUS operation
    (56) operation -> operation . DIV operation
    (57) operation -> operation . MULT operation

    PLUS            reduce using rule 56 (operation -> operation DIV operation .)
    MINUS           reduce using rule 56 (operation -> operation DIV operation .)
    DIV             reduce using rule 56 (operation -> operation DIV operation .)
    MULT            reduce using rule 56 (operation -> operation DIV operation .)
    END             reduce using rule 56 (operation -> operation DIV operation .)
    COMMA           reduce using rule 56 (operation -> operation DIV operation .)
    CPAREN          reduce using rule 56 (operation -> operation DIV operation .)
    AMOUNT          reduce using rule 56 (operation -> operation DIV operation .)
    CBRACE          reduce using rule 56 (operation -> operation DIV operation .)

  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! DIV             [ shift and go to state 79 ]
  ! MULT            [ shift and go to state 80 ]


state 121

    (57) operation -> operation MULT operation .
    (54) operation -> operation . PLUS operation
    (55) operation -> operation . MINUS operation
    (56) operation -> operation . DIV operation
    (57) operation -> operation . MULT operation

    PLUS            reduce using rule 57 (operation -> operation MULT operation .)
    MINUS           reduce using rule 57 (operation -> operation MULT operation .)
    DIV             reduce using rule 57 (operation -> operation MULT operation .)
    MULT            reduce using rule 57 (operation -> operation MULT operation .)
    END             reduce using rule 57 (operation -> operation MULT operation .)
    COMMA           reduce using rule 57 (operation -> operation MULT operation .)
    CPAREN          reduce using rule 57 (operation -> operation MULT operation .)
    AMOUNT          reduce using rule 57 (operation -> operation MULT operation .)
    CBRACE          reduce using rule 57 (operation -> operation MULT operation .)

  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! DIV             [ shift and go to state 79 ]
  ! MULT            [ shift and go to state 80 ]


state 122

    (75) subType -> OBRACE bus CBRACE .

    END             reduce using rule 75 (subType -> OBRACE bus CBRACE .)
    COMMA           reduce using rule 75 (subType -> OBRACE bus CBRACE .)
    CPAREN          reduce using rule 75 (subType -> OBRACE bus CBRACE .)
    CBR             reduce using rule 75 (subType -> OBRACE bus CBRACE .)


state 123

    (76) subType -> OBRACE emp CBRACE .

    END             reduce using rule 76 (subType -> OBRACE emp CBRACE .)
    COMMA           reduce using rule 76 (subType -> OBRACE emp CBRACE .)
    CPAREN          reduce using rule 76 (subType -> OBRACE emp CBRACE .)
    CBR             reduce using rule 76 (subType -> OBRACE emp CBRACE .)


state 124

    (77) subType -> OBRACE prod CBRACE .

    END             reduce using rule 77 (subType -> OBRACE prod CBRACE .)
    COMMA           reduce using rule 77 (subType -> OBRACE prod CBRACE .)
    CPAREN          reduce using rule 77 (subType -> OBRACE prod CBRACE .)
    CBR             reduce using rule 77 (subType -> OBRACE prod CBRACE .)


state 125

    (84) bus -> NAME COMMA . collection COMMA collection
    (85) bus -> NAME COMMA . ID COMMA ID
    (86) emp -> NAME COMMA . SALARY DPOINT operation
    (88) prod -> NAME COMMA . AMOUNT DPOINT operation
    (78) collection -> . OBR collection_body CBR

    ID              shift and go to state 159
    SALARY          shift and go to state 160
    AMOUNT          shift and go to state 161
    OBR             shift and go to state 43

    collection                     shift and go to state 158

state 126

    (78) collection -> OBR collection_body CBR .

    END             reduce using rule 78 (collection -> OBR collection_body CBR .)
    COMMA           reduce using rule 78 (collection -> OBR collection_body CBR .)
    CPAREN          reduce using rule 78 (collection -> OBR collection_body CBR .)
    CBRACE          reduce using rule 78 (collection -> OBR collection_body CBR .)


state 127

    (79) collection_body -> subType COMMA . collection_body
    (79) collection_body -> . subType COMMA collection_body
    (80) collection_body -> . subType
    (81) collection_body -> . empty
    (82) collection_body -> . ID COMMA collection_body
    (83) collection_body -> . ID
    (75) subType -> . OBRACE bus CBRACE
    (76) subType -> . OBRACE emp CBRACE
    (77) subType -> . OBRACE prod CBRACE
    (89) empty -> .

    ID              shift and go to state 88
    OBRACE          shift and go to state 42
    CBR             reduce using rule 89 (empty -> .)

    subType                        shift and go to state 86
    collection_body                shift and go to state 162
    empty                          shift and go to state 87

state 128

    (82) collection_body -> ID COMMA . collection_body
    (79) collection_body -> . subType COMMA collection_body
    (80) collection_body -> . subType
    (81) collection_body -> . empty
    (82) collection_body -> . ID COMMA collection_body
    (83) collection_body -> . ID
    (75) subType -> . OBRACE bus CBRACE
    (76) subType -> . OBRACE emp CBRACE
    (77) subType -> . OBRACE prod CBRACE
    (89) empty -> .

    ID              shift and go to state 88
    OBRACE          shift and go to state 42
    CBR             reduce using rule 89 (empty -> .)

    collection_body                shift and go to state 163
    subType                        shift and go to state 86
    empty                          shift and go to state 87

state 129

    (60) operation -> OPAREN operation CPAREN .

    PLUS            reduce using rule 60 (operation -> OPAREN operation CPAREN .)
    MINUS           reduce using rule 60 (operation -> OPAREN operation CPAREN .)
    DIV             reduce using rule 60 (operation -> OPAREN operation CPAREN .)
    MULT            reduce using rule 60 (operation -> OPAREN operation CPAREN .)
    END             reduce using rule 60 (operation -> OPAREN operation CPAREN .)
    COMMA           reduce using rule 60 (operation -> OPAREN operation CPAREN .)
    CPAREN          reduce using rule 60 (operation -> OPAREN operation CPAREN .)
    AMOUNT          reduce using rule 60 (operation -> OPAREN operation CPAREN .)
    CBRACE          reduce using rule 60 (operation -> OPAREN operation CPAREN .)


state 130

    (39) IfStatement -> IF OPAREN condition CPAREN . OBRACE ListInst CBRACE

    OBRACE          shift and go to state 164


state 131

    (12) Instruction -> ID ACTION SALE ID PRICE . DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> ID ACTION SALE ID PRICE . DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> ID ACTION SALE ID PRICE . DPOINT operation AMOUNT DPOINT operation

    DPOINT          shift and go to state 165


state 132

    (15) Instruction -> ID ACTION INVESTS ID COST . DPOINT NUMBER AMOUNT DPOINT NUMBER
    (16) Instruction -> ID ACTION INVESTS ID COST . DPOINT ID AMOUNT DPOINT ID
    (17) Instruction -> ID ACTION INVESTS ID COST . DPOINT operation AMOUNT DPOINT operation

    DPOINT          shift and go to state 166


state 133

    (23) Instruction -> ID ADD BILL OBRACE ID . COMMA DESCRIP CBRACE
    (24) Instruction -> ID ADD BILL OBRACE ID . COMMA NAME CBRACE
    (58) operation -> ID .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 167
    PLUS            reduce using rule 58 (operation -> ID .)
    MINUS           reduce using rule 58 (operation -> ID .)
    DIV             reduce using rule 58 (operation -> ID .)
    MULT            reduce using rule 58 (operation -> ID .)

  ! COMMA           [ reduce using rule 58 (operation -> ID .) ]


state 134

    (19) Instruction -> ID ADD BILL OBRACE NUMBER . COMMA DESCRIP CBRACE
    (20) Instruction -> ID ADD BILL OBRACE NUMBER . COMMA NAME CBRACE
    (59) operation -> NUMBER .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 168
    PLUS            reduce using rule 59 (operation -> NUMBER .)
    MINUS           reduce using rule 59 (operation -> NUMBER .)
    DIV             reduce using rule 59 (operation -> NUMBER .)
    MULT            reduce using rule 59 (operation -> NUMBER .)

  ! COMMA           [ reduce using rule 59 (operation -> NUMBER .) ]


state 135

    (21) Instruction -> ID ADD BILL OBRACE operation . COMMA DESCRIP CBRACE
    (22) Instruction -> ID ADD BILL OBRACE operation . COMMA NAME CBRACE
    (54) operation -> operation . PLUS operation
    (55) operation -> operation . MINUS operation
    (56) operation -> operation . DIV operation
    (57) operation -> operation . MULT operation

    COMMA           shift and go to state 169
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    DIV             shift and go to state 79
    MULT            shift and go to state 80


state 136

    (69) Argument -> Assignable COMMA Argument .

    CPAREN          reduce using rule 69 (Argument -> Assignable COMMA Argument .)


state 137

    (9) Instruction -> IfStatement ELSE OBRACE ListInst CBRACE .

    END             reduce using rule 9 (Instruction -> IfStatement ELSE OBRACE ListInst CBRACE .)


state 138

    (34) Params -> TYPE . ID COMMA Params
    (35) Params -> TYPE . ID

    ID              shift and go to state 170


state 139

    (32) Instruction -> DEF TYPE ID OPAREN Params . CPAREN OBRACE ListInst CBRACE

    CPAREN          shift and go to state 171


state 140

    (36) Params -> empty .

    CPAREN          reduce using rule 36 (Params -> empty .)


state 141

    (33) Instruction -> DEF VOID ID OPAREN Params . CPAREN OBRACE ListInst CBRACE

    CPAREN          shift and go to state 172


state 142

    (37) loop_statements -> FOREACH ID IN ID OBRACE . ListInst CBRACE
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . loop_statements
    (7) Instruction -> . return_inst
    (8) Instruction -> . IfStatement
    (9) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (12) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (15) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (16) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (17) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (18) Instruction -> . ID ADD ID
    (19) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (20) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE
    (21) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (22) Instruction -> . ID ADD BILL OBRACE operation COMMA NAME CBRACE
    (23) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (24) Instruction -> . ID ADD BILL OBRACE ID COMMA NAME CBRACE
    (25) Instruction -> . ID ADD subType
    (26) Instruction -> . ID DEL NAME
    (27) Instruction -> . ID DEL ID
    (28) Instruction -> . ID DISMISS NAME
    (29) Instruction -> . ID DISMISS ID
    (30) Instruction -> . PRINT DPOINT ID
    (31) Instruction -> . funct_call
    (32) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (33) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (51) instance -> . TYPE ID
    (52) instance -> . TYPE ID ASSIGN Assignable
    (53) instance -> . ID ASSIGN Assignable
    (37) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (38) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (10) return_inst -> . RETURN Assignable
    (11) return_inst -> . RETURN
    (39) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (68) funct_call -> . ID OPAREN Argument CPAREN
    (71) funct_call -> . empty
    (89) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 10
    DEF             shift and go to state 12
    TYPE            shift and go to state 13
    FOREACH         shift and go to state 14
    WHILE           shift and go to state 15
    RETURN          shift and go to state 16
    IF              shift and go to state 17
    END             reduce using rule 89 (empty -> .)

    ListInst                       shift and go to state 173
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    return_inst                    shift and go to state 8
    IfStatement                    shift and go to state 9
    funct_call                     shift and go to state 11
    empty                          shift and go to state 18

state 143

    (49) bool_expression -> OPAREN bool_expression CPAREN .

    AND             reduce using rule 49 (bool_expression -> OPAREN bool_expression CPAREN .)
    OR              reduce using rule 49 (bool_expression -> OPAREN bool_expression CPAREN .)
    CPAREN          reduce using rule 49 (bool_expression -> OPAREN bool_expression CPAREN .)


state 144

    (38) loop_statements -> WHILE OPAREN condition CPAREN OBRACE . ListInst CBRACE
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . loop_statements
    (7) Instruction -> . return_inst
    (8) Instruction -> . IfStatement
    (9) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (12) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (15) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (16) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (17) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (18) Instruction -> . ID ADD ID
    (19) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (20) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE
    (21) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (22) Instruction -> . ID ADD BILL OBRACE operation COMMA NAME CBRACE
    (23) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (24) Instruction -> . ID ADD BILL OBRACE ID COMMA NAME CBRACE
    (25) Instruction -> . ID ADD subType
    (26) Instruction -> . ID DEL NAME
    (27) Instruction -> . ID DEL ID
    (28) Instruction -> . ID DISMISS NAME
    (29) Instruction -> . ID DISMISS ID
    (30) Instruction -> . PRINT DPOINT ID
    (31) Instruction -> . funct_call
    (32) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (33) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (51) instance -> . TYPE ID
    (52) instance -> . TYPE ID ASSIGN Assignable
    (53) instance -> . ID ASSIGN Assignable
    (37) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (38) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (10) return_inst -> . RETURN Assignable
    (11) return_inst -> . RETURN
    (39) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (68) funct_call -> . ID OPAREN Argument CPAREN
    (71) funct_call -> . empty
    (89) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 10
    DEF             shift and go to state 12
    TYPE            shift and go to state 13
    FOREACH         shift and go to state 14
    WHILE           shift and go to state 15
    RETURN          shift and go to state 16
    IF              shift and go to state 17
    END             reduce using rule 89 (empty -> .)

    ListInst                       shift and go to state 174
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    return_inst                    shift and go to state 8
    IfStatement                    shift and go to state 9
    funct_call                     shift and go to state 11
    empty                          shift and go to state 18

state 145

    (42) bool_expression -> bool_expression AND bool_expression .
    (42) bool_expression -> bool_expression . AND bool_expression
    (43) bool_expression -> bool_expression . OR bool_expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    CPAREN          reduce using rule 42 (bool_expression -> bool_expression AND bool_expression .)
    AND             shift and go to state 104
    OR              shift and go to state 105

  ! AND             [ reduce using rule 42 (bool_expression -> bool_expression AND bool_expression .) ]
  ! OR              [ reduce using rule 42 (bool_expression -> bool_expression AND bool_expression .) ]


state 146

    (43) bool_expression -> bool_expression OR bool_expression .
    (42) bool_expression -> bool_expression . AND bool_expression
    (43) bool_expression -> bool_expression . OR bool_expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    CPAREN          reduce using rule 43 (bool_expression -> bool_expression OR bool_expression .)
    AND             shift and go to state 104
    OR              shift and go to state 105

  ! AND             [ reduce using rule 43 (bool_expression -> bool_expression OR bool_expression .) ]
  ! OR              [ reduce using rule 43 (bool_expression -> bool_expression OR bool_expression .) ]


state 147

    (44) bool_expression -> ID EQUAL ID .

    AND             reduce using rule 44 (bool_expression -> ID EQUAL ID .)
    OR              reduce using rule 44 (bool_expression -> ID EQUAL ID .)
    CPAREN          reduce using rule 44 (bool_expression -> ID EQUAL ID .)


state 148

    (45) bool_expression -> ID LEQ ID .

    AND             reduce using rule 45 (bool_expression -> ID LEQ ID .)
    OR              reduce using rule 45 (bool_expression -> ID LEQ ID .)
    CPAREN          reduce using rule 45 (bool_expression -> ID LEQ ID .)


state 149

    (46) bool_expression -> ID GEQ ID .

    AND             reduce using rule 46 (bool_expression -> ID GEQ ID .)
    OR              reduce using rule 46 (bool_expression -> ID GEQ ID .)
    CPAREN          reduce using rule 46 (bool_expression -> ID GEQ ID .)


state 150

    (47) bool_expression -> ID GREATER ID .

    AND             reduce using rule 47 (bool_expression -> ID GREATER ID .)
    OR              reduce using rule 47 (bool_expression -> ID GREATER ID .)
    CPAREN          reduce using rule 47 (bool_expression -> ID GREATER ID .)


state 151

    (48) bool_expression -> ID LESS ID .

    AND             reduce using rule 48 (bool_expression -> ID LESS ID .)
    OR              reduce using rule 48 (bool_expression -> ID LESS ID .)
    CPAREN          reduce using rule 48 (bool_expression -> ID LESS ID .)


state 152

    (50) bool_expression -> ID IN ID .

    AND             reduce using rule 50 (bool_expression -> ID IN ID .)
    OR              reduce using rule 50 (bool_expression -> ID IN ID .)
    CPAREN          reduce using rule 50 (bool_expression -> ID IN ID .)


state 153

    (63) Assignable -> GET NAME FROM ID .

    END             reduce using rule 63 (Assignable -> GET NAME FROM ID .)
    COMMA           reduce using rule 63 (Assignable -> GET NAME FROM ID .)
    CPAREN          reduce using rule 63 (Assignable -> GET NAME FROM ID .)


state 154

    (72) Assignable -> GET STAFF FROM ID .

    END             reduce using rule 72 (Assignable -> GET STAFF FROM ID .)
    COMMA           reduce using rule 72 (Assignable -> GET STAFF FROM ID .)
    CPAREN          reduce using rule 72 (Assignable -> GET STAFF FROM ID .)


state 155

    (73) Assignable -> GET CATALOG FROM ID .

    END             reduce using rule 73 (Assignable -> GET CATALOG FROM ID .)
    COMMA           reduce using rule 73 (Assignable -> GET CATALOG FROM ID .)
    CPAREN          reduce using rule 73 (Assignable -> GET CATALOG FROM ID .)


state 156

    (74) Assignable -> GET AMOUNT FROM ID .

    END             reduce using rule 74 (Assignable -> GET AMOUNT FROM ID .)
    COMMA           reduce using rule 74 (Assignable -> GET AMOUNT FROM ID .)
    CPAREN          reduce using rule 74 (Assignable -> GET AMOUNT FROM ID .)


state 157

    (64) Assignable -> ID GET METRICS DATE .

    END             reduce using rule 64 (Assignable -> ID GET METRICS DATE .)
    COMMA           reduce using rule 64 (Assignable -> ID GET METRICS DATE .)
    CPAREN          reduce using rule 64 (Assignable -> ID GET METRICS DATE .)


state 158

    (84) bus -> NAME COMMA collection . COMMA collection

    COMMA           shift and go to state 175


state 159

    (85) bus -> NAME COMMA ID . COMMA ID

    COMMA           shift and go to state 176


state 160

    (86) emp -> NAME COMMA SALARY . DPOINT operation

    DPOINT          shift and go to state 177


state 161

    (88) prod -> NAME COMMA AMOUNT . DPOINT operation

    DPOINT          shift and go to state 178


state 162

    (79) collection_body -> subType COMMA collection_body .

    CBR             reduce using rule 79 (collection_body -> subType COMMA collection_body .)


state 163

    (82) collection_body -> ID COMMA collection_body .

    CBR             reduce using rule 82 (collection_body -> ID COMMA collection_body .)


state 164

    (39) IfStatement -> IF OPAREN condition CPAREN OBRACE . ListInst CBRACE
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . loop_statements
    (7) Instruction -> . return_inst
    (8) Instruction -> . IfStatement
    (9) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (12) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (15) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (16) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (17) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (18) Instruction -> . ID ADD ID
    (19) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (20) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE
    (21) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (22) Instruction -> . ID ADD BILL OBRACE operation COMMA NAME CBRACE
    (23) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (24) Instruction -> . ID ADD BILL OBRACE ID COMMA NAME CBRACE
    (25) Instruction -> . ID ADD subType
    (26) Instruction -> . ID DEL NAME
    (27) Instruction -> . ID DEL ID
    (28) Instruction -> . ID DISMISS NAME
    (29) Instruction -> . ID DISMISS ID
    (30) Instruction -> . PRINT DPOINT ID
    (31) Instruction -> . funct_call
    (32) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (33) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (51) instance -> . TYPE ID
    (52) instance -> . TYPE ID ASSIGN Assignable
    (53) instance -> . ID ASSIGN Assignable
    (37) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (38) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (10) return_inst -> . RETURN Assignable
    (11) return_inst -> . RETURN
    (39) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (68) funct_call -> . ID OPAREN Argument CPAREN
    (71) funct_call -> . empty
    (89) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 10
    DEF             shift and go to state 12
    TYPE            shift and go to state 13
    FOREACH         shift and go to state 14
    WHILE           shift and go to state 15
    RETURN          shift and go to state 16
    IF              shift and go to state 17
    END             reduce using rule 89 (empty -> .)

    ListInst                       shift and go to state 179
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    return_inst                    shift and go to state 8
    IfStatement                    shift and go to state 9
    funct_call                     shift and go to state 11
    empty                          shift and go to state 18

state 165

    (12) Instruction -> ID ACTION SALE ID PRICE DPOINT . NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> ID ACTION SALE ID PRICE DPOINT . ID AMOUNT DPOINT ID
    (14) Instruction -> ID ACTION SALE ID PRICE DPOINT . operation AMOUNT DPOINT operation
    (54) operation -> . operation PLUS operation
    (55) operation -> . operation MINUS operation
    (56) operation -> . operation DIV operation
    (57) operation -> . operation MULT operation
    (58) operation -> . ID
    (59) operation -> . NUMBER
    (60) operation -> . OPAREN operation CPAREN

    NUMBER          shift and go to state 181
    ID              shift and go to state 180
    OPAREN          shift and go to state 45

    operation                      shift and go to state 182

state 166

    (15) Instruction -> ID ACTION INVESTS ID COST DPOINT . NUMBER AMOUNT DPOINT NUMBER
    (16) Instruction -> ID ACTION INVESTS ID COST DPOINT . ID AMOUNT DPOINT ID
    (17) Instruction -> ID ACTION INVESTS ID COST DPOINT . operation AMOUNT DPOINT operation
    (54) operation -> . operation PLUS operation
    (55) operation -> . operation MINUS operation
    (56) operation -> . operation DIV operation
    (57) operation -> . operation MULT operation
    (58) operation -> . ID
    (59) operation -> . NUMBER
    (60) operation -> . OPAREN operation CPAREN

    NUMBER          shift and go to state 184
    ID              shift and go to state 183
    OPAREN          shift and go to state 45

    operation                      shift and go to state 185

state 167

    (23) Instruction -> ID ADD BILL OBRACE ID COMMA . DESCRIP CBRACE
    (24) Instruction -> ID ADD BILL OBRACE ID COMMA . NAME CBRACE

    DESCRIP         shift and go to state 186
    NAME            shift and go to state 187


state 168

    (19) Instruction -> ID ADD BILL OBRACE NUMBER COMMA . DESCRIP CBRACE
    (20) Instruction -> ID ADD BILL OBRACE NUMBER COMMA . NAME CBRACE

    DESCRIP         shift and go to state 188
    NAME            shift and go to state 189


state 169

    (21) Instruction -> ID ADD BILL OBRACE operation COMMA . DESCRIP CBRACE
    (22) Instruction -> ID ADD BILL OBRACE operation COMMA . NAME CBRACE

    DESCRIP         shift and go to state 190
    NAME            shift and go to state 191


state 170

    (34) Params -> TYPE ID . COMMA Params
    (35) Params -> TYPE ID .

    COMMA           shift and go to state 192
    CPAREN          reduce using rule 35 (Params -> TYPE ID .)


state 171

    (32) Instruction -> DEF TYPE ID OPAREN Params CPAREN . OBRACE ListInst CBRACE

    OBRACE          shift and go to state 193


state 172

    (33) Instruction -> DEF VOID ID OPAREN Params CPAREN . OBRACE ListInst CBRACE

    OBRACE          shift and go to state 194


state 173

    (37) loop_statements -> FOREACH ID IN ID OBRACE ListInst . CBRACE

    CBRACE          shift and go to state 195


state 174

    (38) loop_statements -> WHILE OPAREN condition CPAREN OBRACE ListInst . CBRACE

    CBRACE          shift and go to state 196


state 175

    (84) bus -> NAME COMMA collection COMMA . collection
    (78) collection -> . OBR collection_body CBR

    OBR             shift and go to state 43

    collection                     shift and go to state 197

state 176

    (85) bus -> NAME COMMA ID COMMA . ID

    ID              shift and go to state 198


state 177

    (86) emp -> NAME COMMA SALARY DPOINT . operation
    (54) operation -> . operation PLUS operation
    (55) operation -> . operation MINUS operation
    (56) operation -> . operation DIV operation
    (57) operation -> . operation MULT operation
    (58) operation -> . ID
    (59) operation -> . NUMBER
    (60) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 90
    NUMBER          shift and go to state 44
    OPAREN          shift and go to state 45

    operation                      shift and go to state 199

state 178

    (88) prod -> NAME COMMA AMOUNT DPOINT . operation
    (54) operation -> . operation PLUS operation
    (55) operation -> . operation MINUS operation
    (56) operation -> . operation DIV operation
    (57) operation -> . operation MULT operation
    (58) operation -> . ID
    (59) operation -> . NUMBER
    (60) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 90
    NUMBER          shift and go to state 44
    OPAREN          shift and go to state 45

    operation                      shift and go to state 200

state 179

    (39) IfStatement -> IF OPAREN condition CPAREN OBRACE ListInst . CBRACE

    CBRACE          shift and go to state 201


state 180

    (13) Instruction -> ID ACTION SALE ID PRICE DPOINT ID . AMOUNT DPOINT ID
    (58) operation -> ID .

  ! shift/reduce conflict for AMOUNT resolved as shift
    AMOUNT          shift and go to state 202
    PLUS            reduce using rule 58 (operation -> ID .)
    MINUS           reduce using rule 58 (operation -> ID .)
    DIV             reduce using rule 58 (operation -> ID .)
    MULT            reduce using rule 58 (operation -> ID .)

  ! AMOUNT          [ reduce using rule 58 (operation -> ID .) ]


state 181

    (12) Instruction -> ID ACTION SALE ID PRICE DPOINT NUMBER . AMOUNT DPOINT NUMBER
    (59) operation -> NUMBER .

  ! shift/reduce conflict for AMOUNT resolved as shift
    AMOUNT          shift and go to state 203
    PLUS            reduce using rule 59 (operation -> NUMBER .)
    MINUS           reduce using rule 59 (operation -> NUMBER .)
    DIV             reduce using rule 59 (operation -> NUMBER .)
    MULT            reduce using rule 59 (operation -> NUMBER .)

  ! AMOUNT          [ reduce using rule 59 (operation -> NUMBER .) ]


state 182

    (14) Instruction -> ID ACTION SALE ID PRICE DPOINT operation . AMOUNT DPOINT operation
    (54) operation -> operation . PLUS operation
    (55) operation -> operation . MINUS operation
    (56) operation -> operation . DIV operation
    (57) operation -> operation . MULT operation

    AMOUNT          shift and go to state 204
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    DIV             shift and go to state 79
    MULT            shift and go to state 80


state 183

    (16) Instruction -> ID ACTION INVESTS ID COST DPOINT ID . AMOUNT DPOINT ID
    (58) operation -> ID .

  ! shift/reduce conflict for AMOUNT resolved as shift
    AMOUNT          shift and go to state 205
    PLUS            reduce using rule 58 (operation -> ID .)
    MINUS           reduce using rule 58 (operation -> ID .)
    DIV             reduce using rule 58 (operation -> ID .)
    MULT            reduce using rule 58 (operation -> ID .)

  ! AMOUNT          [ reduce using rule 58 (operation -> ID .) ]


state 184

    (15) Instruction -> ID ACTION INVESTS ID COST DPOINT NUMBER . AMOUNT DPOINT NUMBER
    (59) operation -> NUMBER .

  ! shift/reduce conflict for AMOUNT resolved as shift
    AMOUNT          shift and go to state 206
    PLUS            reduce using rule 59 (operation -> NUMBER .)
    MINUS           reduce using rule 59 (operation -> NUMBER .)
    DIV             reduce using rule 59 (operation -> NUMBER .)
    MULT            reduce using rule 59 (operation -> NUMBER .)

  ! AMOUNT          [ reduce using rule 59 (operation -> NUMBER .) ]


state 185

    (17) Instruction -> ID ACTION INVESTS ID COST DPOINT operation . AMOUNT DPOINT operation
    (54) operation -> operation . PLUS operation
    (55) operation -> operation . MINUS operation
    (56) operation -> operation . DIV operation
    (57) operation -> operation . MULT operation

    AMOUNT          shift and go to state 207
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    DIV             shift and go to state 79
    MULT            shift and go to state 80


state 186

    (23) Instruction -> ID ADD BILL OBRACE ID COMMA DESCRIP . CBRACE

    CBRACE          shift and go to state 208


state 187

    (24) Instruction -> ID ADD BILL OBRACE ID COMMA NAME . CBRACE

    CBRACE          shift and go to state 209


state 188

    (19) Instruction -> ID ADD BILL OBRACE NUMBER COMMA DESCRIP . CBRACE

    CBRACE          shift and go to state 210


state 189

    (20) Instruction -> ID ADD BILL OBRACE NUMBER COMMA NAME . CBRACE

    CBRACE          shift and go to state 211


state 190

    (21) Instruction -> ID ADD BILL OBRACE operation COMMA DESCRIP . CBRACE

    CBRACE          shift and go to state 212


state 191

    (22) Instruction -> ID ADD BILL OBRACE operation COMMA NAME . CBRACE

    CBRACE          shift and go to state 213


state 192

    (34) Params -> TYPE ID COMMA . Params
    (34) Params -> . TYPE ID COMMA Params
    (35) Params -> . TYPE ID
    (36) Params -> . empty
    (89) empty -> .

    TYPE            shift and go to state 138
    CPAREN          reduce using rule 89 (empty -> .)

    Params                         shift and go to state 214
    empty                          shift and go to state 140

state 193

    (32) Instruction -> DEF TYPE ID OPAREN Params CPAREN OBRACE . ListInst CBRACE
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . loop_statements
    (7) Instruction -> . return_inst
    (8) Instruction -> . IfStatement
    (9) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (12) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (15) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (16) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (17) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (18) Instruction -> . ID ADD ID
    (19) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (20) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE
    (21) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (22) Instruction -> . ID ADD BILL OBRACE operation COMMA NAME CBRACE
    (23) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (24) Instruction -> . ID ADD BILL OBRACE ID COMMA NAME CBRACE
    (25) Instruction -> . ID ADD subType
    (26) Instruction -> . ID DEL NAME
    (27) Instruction -> . ID DEL ID
    (28) Instruction -> . ID DISMISS NAME
    (29) Instruction -> . ID DISMISS ID
    (30) Instruction -> . PRINT DPOINT ID
    (31) Instruction -> . funct_call
    (32) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (33) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (51) instance -> . TYPE ID
    (52) instance -> . TYPE ID ASSIGN Assignable
    (53) instance -> . ID ASSIGN Assignable
    (37) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (38) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (10) return_inst -> . RETURN Assignable
    (11) return_inst -> . RETURN
    (39) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (68) funct_call -> . ID OPAREN Argument CPAREN
    (71) funct_call -> . empty
    (89) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 10
    DEF             shift and go to state 12
    TYPE            shift and go to state 13
    FOREACH         shift and go to state 14
    WHILE           shift and go to state 15
    RETURN          shift and go to state 16
    IF              shift and go to state 17
    END             reduce using rule 89 (empty -> .)

    ListInst                       shift and go to state 215
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    return_inst                    shift and go to state 8
    IfStatement                    shift and go to state 9
    funct_call                     shift and go to state 11
    empty                          shift and go to state 18

state 194

    (33) Instruction -> DEF VOID ID OPAREN Params CPAREN OBRACE . ListInst CBRACE
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . loop_statements
    (7) Instruction -> . return_inst
    (8) Instruction -> . IfStatement
    (9) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (12) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (15) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (16) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (17) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (18) Instruction -> . ID ADD ID
    (19) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (20) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE
    (21) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (22) Instruction -> . ID ADD BILL OBRACE operation COMMA NAME CBRACE
    (23) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (24) Instruction -> . ID ADD BILL OBRACE ID COMMA NAME CBRACE
    (25) Instruction -> . ID ADD subType
    (26) Instruction -> . ID DEL NAME
    (27) Instruction -> . ID DEL ID
    (28) Instruction -> . ID DISMISS NAME
    (29) Instruction -> . ID DISMISS ID
    (30) Instruction -> . PRINT DPOINT ID
    (31) Instruction -> . funct_call
    (32) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (33) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (51) instance -> . TYPE ID
    (52) instance -> . TYPE ID ASSIGN Assignable
    (53) instance -> . ID ASSIGN Assignable
    (37) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (38) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (10) return_inst -> . RETURN Assignable
    (11) return_inst -> . RETURN
    (39) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (68) funct_call -> . ID OPAREN Argument CPAREN
    (71) funct_call -> . empty
    (89) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 10
    DEF             shift and go to state 12
    TYPE            shift and go to state 13
    FOREACH         shift and go to state 14
    WHILE           shift and go to state 15
    RETURN          shift and go to state 16
    IF              shift and go to state 17
    END             reduce using rule 89 (empty -> .)

    ListInst                       shift and go to state 216
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    return_inst                    shift and go to state 8
    IfStatement                    shift and go to state 9
    funct_call                     shift and go to state 11
    empty                          shift and go to state 18

state 195

    (37) loop_statements -> FOREACH ID IN ID OBRACE ListInst CBRACE .

    END             reduce using rule 37 (loop_statements -> FOREACH ID IN ID OBRACE ListInst CBRACE .)


state 196

    (38) loop_statements -> WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE .

    END             reduce using rule 38 (loop_statements -> WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE .)


state 197

    (84) bus -> NAME COMMA collection COMMA collection .

    CBRACE          reduce using rule 84 (bus -> NAME COMMA collection COMMA collection .)


state 198

    (85) bus -> NAME COMMA ID COMMA ID .

    CBRACE          reduce using rule 85 (bus -> NAME COMMA ID COMMA ID .)


state 199

    (86) emp -> NAME COMMA SALARY DPOINT operation .
    (54) operation -> operation . PLUS operation
    (55) operation -> operation . MINUS operation
    (56) operation -> operation . DIV operation
    (57) operation -> operation . MULT operation

    CBRACE          reduce using rule 86 (emp -> NAME COMMA SALARY DPOINT operation .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    DIV             shift and go to state 79
    MULT            shift and go to state 80


state 200

    (88) prod -> NAME COMMA AMOUNT DPOINT operation .
    (54) operation -> operation . PLUS operation
    (55) operation -> operation . MINUS operation
    (56) operation -> operation . DIV operation
    (57) operation -> operation . MULT operation

    CBRACE          reduce using rule 88 (prod -> NAME COMMA AMOUNT DPOINT operation .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    DIV             shift and go to state 79
    MULT            shift and go to state 80


state 201

    (39) IfStatement -> IF OPAREN condition CPAREN OBRACE ListInst CBRACE .

    ELSE            reduce using rule 39 (IfStatement -> IF OPAREN condition CPAREN OBRACE ListInst CBRACE .)
    END             reduce using rule 39 (IfStatement -> IF OPAREN condition CPAREN OBRACE ListInst CBRACE .)


state 202

    (13) Instruction -> ID ACTION SALE ID PRICE DPOINT ID AMOUNT . DPOINT ID

    DPOINT          shift and go to state 217


state 203

    (12) Instruction -> ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT . DPOINT NUMBER

    DPOINT          shift and go to state 218


state 204

    (14) Instruction -> ID ACTION SALE ID PRICE DPOINT operation AMOUNT . DPOINT operation

    DPOINT          shift and go to state 219


state 205

    (16) Instruction -> ID ACTION INVESTS ID COST DPOINT ID AMOUNT . DPOINT ID

    DPOINT          shift and go to state 220


state 206

    (15) Instruction -> ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT . DPOINT NUMBER

    DPOINT          shift and go to state 221


state 207

    (17) Instruction -> ID ACTION INVESTS ID COST DPOINT operation AMOUNT . DPOINT operation

    DPOINT          shift and go to state 222


state 208

    (23) Instruction -> ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE .

    END             reduce using rule 23 (Instruction -> ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE .)


state 209

    (24) Instruction -> ID ADD BILL OBRACE ID COMMA NAME CBRACE .

    END             reduce using rule 24 (Instruction -> ID ADD BILL OBRACE ID COMMA NAME CBRACE .)


state 210

    (19) Instruction -> ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE .

    END             reduce using rule 19 (Instruction -> ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE .)


state 211

    (20) Instruction -> ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE .

    END             reduce using rule 20 (Instruction -> ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE .)


state 212

    (21) Instruction -> ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE .

    END             reduce using rule 21 (Instruction -> ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE .)


state 213

    (22) Instruction -> ID ADD BILL OBRACE operation COMMA NAME CBRACE .

    END             reduce using rule 22 (Instruction -> ID ADD BILL OBRACE operation COMMA NAME CBRACE .)


state 214

    (34) Params -> TYPE ID COMMA Params .

    CPAREN          reduce using rule 34 (Params -> TYPE ID COMMA Params .)


state 215

    (32) Instruction -> DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst . CBRACE

    CBRACE          shift and go to state 223


state 216

    (33) Instruction -> DEF VOID ID OPAREN Params CPAREN OBRACE ListInst . CBRACE

    CBRACE          shift and go to state 224


state 217

    (13) Instruction -> ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT . ID

    ID              shift and go to state 225


state 218

    (12) Instruction -> ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT . NUMBER

    NUMBER          shift and go to state 226


state 219

    (14) Instruction -> ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT . operation
    (54) operation -> . operation PLUS operation
    (55) operation -> . operation MINUS operation
    (56) operation -> . operation DIV operation
    (57) operation -> . operation MULT operation
    (58) operation -> . ID
    (59) operation -> . NUMBER
    (60) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 90
    NUMBER          shift and go to state 44
    OPAREN          shift and go to state 45

    operation                      shift and go to state 227

state 220

    (16) Instruction -> ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT . ID

    ID              shift and go to state 228


state 221

    (15) Instruction -> ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT . NUMBER

    NUMBER          shift and go to state 229


state 222

    (17) Instruction -> ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT . operation
    (54) operation -> . operation PLUS operation
    (55) operation -> . operation MINUS operation
    (56) operation -> . operation DIV operation
    (57) operation -> . operation MULT operation
    (58) operation -> . ID
    (59) operation -> . NUMBER
    (60) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 90
    NUMBER          shift and go to state 44
    OPAREN          shift and go to state 45

    operation                      shift and go to state 230

state 223

    (32) Instruction -> DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE .

    END             reduce using rule 32 (Instruction -> DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE .)


state 224

    (33) Instruction -> DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE .

    END             reduce using rule 33 (Instruction -> DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE .)


state 225

    (13) Instruction -> ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID .

    END             reduce using rule 13 (Instruction -> ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID .)


state 226

    (12) Instruction -> ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER .

    END             reduce using rule 12 (Instruction -> ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER .)


state 227

    (14) Instruction -> ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation .
    (54) operation -> operation . PLUS operation
    (55) operation -> operation . MINUS operation
    (56) operation -> operation . DIV operation
    (57) operation -> operation . MULT operation

    END             reduce using rule 14 (Instruction -> ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    DIV             shift and go to state 79
    MULT            shift and go to state 80


state 228

    (16) Instruction -> ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID .

    END             reduce using rule 16 (Instruction -> ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID .)


state 229

    (15) Instruction -> ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER .

    END             reduce using rule 15 (Instruction -> ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER .)


state 230

    (17) Instruction -> ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation .
    (54) operation -> operation . PLUS operation
    (55) operation -> operation . MINUS operation
    (56) operation -> operation . DIV operation
    (57) operation -> operation . MULT operation

    END             reduce using rule 17 (Instruction -> ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    DIV             shift and go to state 79
    MULT            shift and go to state 80

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 106 resolved as shift
WARNING: shift/reduce conflict for OR in state 106 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 133 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 134 resolved as shift
WARNING: shift/reduce conflict for AND in state 145 resolved as shift
WARNING: shift/reduce conflict for OR in state 145 resolved as shift
WARNING: shift/reduce conflict for AND in state 146 resolved as shift
WARNING: shift/reduce conflict for OR in state 146 resolved as shift
WARNING: shift/reduce conflict for AMOUNT in state 180 resolved as shift
WARNING: shift/reduce conflict for AMOUNT in state 181 resolved as shift
WARNING: shift/reduce conflict for AMOUNT in state 183 resolved as shift
WARNING: shift/reduce conflict for AMOUNT in state 184 resolved as shift
WARNING: reduce/reduce conflict in state 16 resolved using rule (return_inst -> RETURN)
WARNING: rejected rule (empty -> <empty>) in state 16
