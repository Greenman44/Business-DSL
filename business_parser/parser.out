Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    POINT

Grammar

Rule 0     S' -> Program
Rule 1     Program -> ListInst
Rule 2     ListInst -> Instruction END ListInst
Rule 3     ListInst -> Instruction END
Rule 4     Instruction -> instance
Rule 5     Instruction -> SAVE ID
Rule 6     Instruction -> ID GET METRICS DATE
Rule 7     Instruction -> loop_statements
Rule 8     Instruction -> IfStatement
Rule 9     Instruction -> IfStatement ELSE OBRACE ListInst CBRACE
Rule 10    Instruction -> ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
Rule 11    Instruction -> ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
Rule 12    Instruction -> ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
Rule 13    Instruction -> ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
Rule 14    Instruction -> ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
Rule 15    Instruction -> ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
Rule 16    Instruction -> ID ADD ID
Rule 17    Instruction -> ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
Rule 18    Instruction -> ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
Rule 19    Instruction -> ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
Rule 20    Instruction -> ID ADD subType
Rule 21    Instruction -> ID DEL NAME
Rule 22    Instruction -> ID DEL ID
Rule 23    Instruction -> ID DISMISS NAME
Rule 24    Instruction -> ID DISMISS ID
Rule 25    Instruction -> PRINT DPOINT ID
Rule 26    Instruction -> funct_call
Rule 27    Instruction -> DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
Rule 28    Instruction -> DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
Rule 29    Params -> TYPE ID COMMA Params
Rule 30    Params -> TYPE ID
Rule 31    Params -> empty
Rule 32    loop_statements -> FOREACH ID IN ID OBRACE ListInst CBRACE
Rule 33    loop_statements -> WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
Rule 34    IfStatement -> IF OPAREN condition CPAREN OBRACE ListInst CBRACE
Rule 35    condition -> bool_expression
Rule 36    bool_expression -> NOT bool_expression
Rule 37    bool_expression -> bool_expression AND bool_expression
Rule 38    bool_expression -> bool_expression OR bool_expression
Rule 39    bool_expression -> ID EQUAL ID
Rule 40    bool_expression -> ID LEQ ID
Rule 41    bool_expression -> ID GEQ ID
Rule 42    bool_expression -> ID GREATER ID
Rule 43    bool_expression -> ID LESS ID
Rule 44    bool_expression -> OPAREN bool_expression CPAREN
Rule 45    bool_expression -> ID IN ID
Rule 46    instance -> TYPE ID
Rule 47    instance -> TYPE ID ASSIGN Assignable
Rule 48    instance -> ID ASSIGN Assignable
Rule 49    operation -> operation PLUS operation
Rule 50    operation -> operation MINUS operation
Rule 51    operation -> operation DIV operation
Rule 52    operation -> operation MULT operation
Rule 53    operation -> ID
Rule 54    operation -> NUMBER
Rule 55    operation -> OPAREN operation CPAREN
Rule 56    Assignable -> subType
Rule 57    Assignable -> collection
Rule 58    Assignable -> GET NAME FROM ID
Rule 59    Assignable -> LOAD NAME
Rule 60    Assignable -> operation
Rule 61    Assignable -> funct_call
Rule 62    funct_call -> ID OPAREN Argument CPAREN
Rule 63    Argument -> Assignable COMMA Argument
Rule 64    Argument -> Assignable
Rule 65    funct_call -> empty
Rule 66    Assignable -> GET STAFF FROM ID
Rule 67    Assignable -> GET CATALOG FROM ID
Rule 68    Assignable -> GET AMOUNT FROM ID
Rule 69    Assignable -> ID
Rule 70    subType -> OBRACE bus CBRACE
Rule 71    subType -> OBRACE emp CBRACE
Rule 72    subType -> OBRACE prod CBRACE
Rule 73    collection -> OBR collection_body CBR
Rule 74    collection_body -> subType COMMA collection_body
Rule 75    collection_body -> subType
Rule 76    collection_body -> empty
Rule 77    collection_body -> ID COMMA collection_body
Rule 78    collection_body -> ID
Rule 79    bus -> NAME COMMA collection COMMA collection
Rule 80    bus -> NAME COMMA ID COMMA ID
Rule 81    emp -> NAME COMMA SALARY DPOINT NUMBER
Rule 82    emp -> NAME COMMA SALARY DPOINT ID
Rule 83    emp -> NAME COMMA SALARY DPOINT operation
Rule 84    prod -> NAME COMMA AMOUNT DPOINT NUMBER
Rule 85    prod -> NAME
Rule 86    prod -> NAME COMMA AMOUNT DPOINT ID
Rule 87    prod -> NAME COMMA AMOUNT DPOINT operation
Rule 88    empty -> <empty>

Terminals, with rules where they appear

ACTION               : 10 11 12 13 14 15
ADD                  : 16 17 18 19 20
AMOUNT               : 10 11 12 13 14 15 68 84 86 87
AND                  : 37
ASSIGN               : 47 48
BILL                 : 17 18 19
CATALOG              : 67
CBR                  : 73
CBRACE               : 9 17 18 19 27 28 32 33 34 70 71 72
COMMA                : 17 18 19 29 63 74 77 79 79 80 80 81 82 83 84 86 87
COST                 : 13 14 15
CPAREN               : 27 28 33 34 44 55 62
DATE                 : 6
DEF                  : 27 28
DEL                  : 21 22
DESCRIP              : 17 18 19
DISMISS              : 23 24
DIV                  : 51
DPOINT               : 10 10 11 11 12 12 13 13 14 14 15 15 25 81 82 83 84 86 87
ELSE                 : 9
END                  : 2 3
EQUAL                : 39
FOREACH              : 32
FROM                 : 58 66 67 68
GEQ                  : 41
GET                  : 6 58 66 67 68
GREATER              : 42
ID                   : 5 6 10 10 11 11 11 11 12 12 13 13 14 14 14 14 15 15 16 16 17 18 19 19 20 21 22 22 23 24 24 25 27 28 29 30 32 32 39 39 40 40 41 41 42 42 43 43 45 45 46 47 48 53 58 62 66 67 68 69 77 78 80 80 82 86
IF                   : 34
IN                   : 32 45
INVESTS              : 13 14 15
LEQ                  : 40
LESS                 : 43
LOAD                 : 59
METRICS              : 6
MINUS                : 50
MULT                 : 52
NAME                 : 21 23 58 59 79 80 81 82 83 84 85 86 87
NOT                  : 36
NUMBER               : 10 10 13 13 17 54 81 84
OBR                  : 73
OBRACE               : 9 17 18 19 27 28 32 33 34 70 71 72
OPAREN               : 27 28 33 34 44 55 62
OR                   : 38
PLUS                 : 49
POINT                : 
PRICE                : 10 11 12
PRINT                : 25
SALARY               : 81 82 83
SALE                 : 10 11 12
SAVE                 : 5
STAFF                : 66
TYPE                 : 27 29 30 46 47
VOID                 : 28
WHILE                : 33
error                : 

Nonterminals, with rules where they appear

Argument             : 62 63
Assignable           : 47 48 63 64
IfStatement          : 8 9
Instruction          : 2 3
ListInst             : 1 2 9 27 28 32 33 34
Params               : 27 28 29
Program              : 0
bool_expression      : 35 36 37 37 38 38 44
bus                  : 70
collection           : 57 79 79
collection_body      : 73 74 77
condition            : 33 34
emp                  : 71
empty                : 31 65 76
funct_call           : 26 61
instance             : 4
loop_statements      : 7
operation            : 12 12 15 15 18 49 49 50 50 51 51 52 52 55 60 83 87
prod                 : 72
subType              : 20 56 74 75

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . ListInst
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . ID GET METRICS DATE
    (7) Instruction -> . loop_statements
    (8) Instruction -> . IfStatement
    (9) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (10) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (11) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (12) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (13) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (14) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (15) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (16) Instruction -> . ID ADD ID
    (17) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (18) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (20) Instruction -> . ID ADD subType
    (21) Instruction -> . ID DEL NAME
    (22) Instruction -> . ID DEL ID
    (23) Instruction -> . ID DISMISS NAME
    (24) Instruction -> . ID DISMISS ID
    (25) Instruction -> . PRINT DPOINT ID
    (26) Instruction -> . funct_call
    (27) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (28) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (46) instance -> . TYPE ID
    (47) instance -> . TYPE ID ASSIGN Assignable
    (48) instance -> . ID ASSIGN Assignable
    (32) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (33) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (34) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (62) funct_call -> . ID OPAREN Argument CPAREN
    (65) funct_call -> . empty
    (88) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 9
    DEF             shift and go to state 11
    TYPE            shift and go to state 12
    FOREACH         shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    END             reduce using rule 88 (empty -> .)

    Program                        shift and go to state 1
    ListInst                       shift and go to state 2
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    IfStatement                    shift and go to state 8
    funct_call                     shift and go to state 10
    empty                          shift and go to state 16

state 1

    (0) S' -> Program .



state 2

    (1) Program -> ListInst .

    $end            reduce using rule 1 (Program -> ListInst .)


state 3

    (2) ListInst -> Instruction . END ListInst
    (3) ListInst -> Instruction . END

    END             shift and go to state 17


state 4

    (4) Instruction -> instance .

    END             reduce using rule 4 (Instruction -> instance .)


state 5

    (5) Instruction -> SAVE . ID

    ID              shift and go to state 18


state 6

    (6) Instruction -> ID . GET METRICS DATE
    (10) Instruction -> ID . ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (11) Instruction -> ID . ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (12) Instruction -> ID . ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (13) Instruction -> ID . ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (14) Instruction -> ID . ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (15) Instruction -> ID . ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (16) Instruction -> ID . ADD ID
    (17) Instruction -> ID . ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (18) Instruction -> ID . ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> ID . ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (20) Instruction -> ID . ADD subType
    (21) Instruction -> ID . DEL NAME
    (22) Instruction -> ID . DEL ID
    (23) Instruction -> ID . DISMISS NAME
    (24) Instruction -> ID . DISMISS ID
    (48) instance -> ID . ASSIGN Assignable
    (62) funct_call -> ID . OPAREN Argument CPAREN

    GET             shift and go to state 19
    ACTION          shift and go to state 20
    ADD             shift and go to state 21
    DEL             shift and go to state 22
    DISMISS         shift and go to state 23
    ASSIGN          shift and go to state 24
    OPAREN          shift and go to state 25


state 7

    (7) Instruction -> loop_statements .

    END             reduce using rule 7 (Instruction -> loop_statements .)


state 8

    (8) Instruction -> IfStatement .
    (9) Instruction -> IfStatement . ELSE OBRACE ListInst CBRACE

    END             reduce using rule 8 (Instruction -> IfStatement .)
    ELSE            shift and go to state 26


state 9

    (25) Instruction -> PRINT . DPOINT ID

    DPOINT          shift and go to state 27


state 10

    (26) Instruction -> funct_call .

    END             reduce using rule 26 (Instruction -> funct_call .)


state 11

    (27) Instruction -> DEF . TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (28) Instruction -> DEF . VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE

    TYPE            shift and go to state 28
    VOID            shift and go to state 29


state 12

    (46) instance -> TYPE . ID
    (47) instance -> TYPE . ID ASSIGN Assignable

    ID              shift and go to state 30


state 13

    (32) loop_statements -> FOREACH . ID IN ID OBRACE ListInst CBRACE

    ID              shift and go to state 31


state 14

    (33) loop_statements -> WHILE . OPAREN condition CPAREN OBRACE ListInst CBRACE

    OPAREN          shift and go to state 32


state 15

    (34) IfStatement -> IF . OPAREN condition CPAREN OBRACE ListInst CBRACE

    OPAREN          shift and go to state 33


state 16

    (65) funct_call -> empty .

    END             reduce using rule 65 (funct_call -> empty .)
    COMMA           reduce using rule 65 (funct_call -> empty .)
    CPAREN          reduce using rule 65 (funct_call -> empty .)


state 17

    (2) ListInst -> Instruction END . ListInst
    (3) ListInst -> Instruction END .
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . ID GET METRICS DATE
    (7) Instruction -> . loop_statements
    (8) Instruction -> . IfStatement
    (9) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (10) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (11) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (12) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (13) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (14) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (15) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (16) Instruction -> . ID ADD ID
    (17) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (18) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (20) Instruction -> . ID ADD subType
    (21) Instruction -> . ID DEL NAME
    (22) Instruction -> . ID DEL ID
    (23) Instruction -> . ID DISMISS NAME
    (24) Instruction -> . ID DISMISS ID
    (25) Instruction -> . PRINT DPOINT ID
    (26) Instruction -> . funct_call
    (27) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (28) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (46) instance -> . TYPE ID
    (47) instance -> . TYPE ID ASSIGN Assignable
    (48) instance -> . ID ASSIGN Assignable
    (32) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (33) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (34) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (62) funct_call -> . ID OPAREN Argument CPAREN
    (65) funct_call -> . empty
    (88) empty -> .

    $end            reduce using rule 3 (ListInst -> Instruction END .)
    CBRACE          reduce using rule 3 (ListInst -> Instruction END .)
    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 9
    DEF             shift and go to state 11
    TYPE            shift and go to state 12
    FOREACH         shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    END             reduce using rule 88 (empty -> .)

    Instruction                    shift and go to state 3
    ListInst                       shift and go to state 34
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    IfStatement                    shift and go to state 8
    funct_call                     shift and go to state 10
    empty                          shift and go to state 16

state 18

    (5) Instruction -> SAVE ID .

    END             reduce using rule 5 (Instruction -> SAVE ID .)


state 19

    (6) Instruction -> ID GET . METRICS DATE

    METRICS         shift and go to state 35


state 20

    (10) Instruction -> ID ACTION . SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (11) Instruction -> ID ACTION . SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (12) Instruction -> ID ACTION . SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (13) Instruction -> ID ACTION . INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (14) Instruction -> ID ACTION . INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (15) Instruction -> ID ACTION . INVESTS ID COST DPOINT operation AMOUNT DPOINT operation

    SALE            shift and go to state 36
    INVESTS         shift and go to state 37


state 21

    (16) Instruction -> ID ADD . ID
    (17) Instruction -> ID ADD . BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (18) Instruction -> ID ADD . BILL OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> ID ADD . BILL OBRACE ID COMMA DESCRIP CBRACE
    (20) Instruction -> ID ADD . subType
    (70) subType -> . OBRACE bus CBRACE
    (71) subType -> . OBRACE emp CBRACE
    (72) subType -> . OBRACE prod CBRACE

    ID              shift and go to state 38
    BILL            shift and go to state 39
    OBRACE          shift and go to state 40

    subType                        shift and go to state 41

state 22

    (21) Instruction -> ID DEL . NAME
    (22) Instruction -> ID DEL . ID

    NAME            shift and go to state 43
    ID              shift and go to state 42


state 23

    (23) Instruction -> ID DISMISS . NAME
    (24) Instruction -> ID DISMISS . ID

    NAME            shift and go to state 45
    ID              shift and go to state 44


state 24

    (48) instance -> ID ASSIGN . Assignable
    (56) Assignable -> . subType
    (57) Assignable -> . collection
    (58) Assignable -> . GET NAME FROM ID
    (59) Assignable -> . LOAD NAME
    (60) Assignable -> . operation
    (61) Assignable -> . funct_call
    (66) Assignable -> . GET STAFF FROM ID
    (67) Assignable -> . GET CATALOG FROM ID
    (68) Assignable -> . GET AMOUNT FROM ID
    (69) Assignable -> . ID
    (70) subType -> . OBRACE bus CBRACE
    (71) subType -> . OBRACE emp CBRACE
    (72) subType -> . OBRACE prod CBRACE
    (73) collection -> . OBR collection_body CBR
    (49) operation -> . operation PLUS operation
    (50) operation -> . operation MINUS operation
    (51) operation -> . operation DIV operation
    (52) operation -> . operation MULT operation
    (53) operation -> . ID
    (54) operation -> . NUMBER
    (55) operation -> . OPAREN operation CPAREN
    (62) funct_call -> . ID OPAREN Argument CPAREN
    (65) funct_call -> . empty
    (88) empty -> .

    GET             shift and go to state 50
    LOAD            shift and go to state 51
    ID              shift and go to state 46
    OBRACE          shift and go to state 40
    OBR             shift and go to state 54
    NUMBER          shift and go to state 55
    OPAREN          shift and go to state 56
    END             reduce using rule 88 (empty -> .)

    Assignable                     shift and go to state 47
    subType                        shift and go to state 48
    collection                     shift and go to state 49
    operation                      shift and go to state 52
    funct_call                     shift and go to state 53
    empty                          shift and go to state 16

state 25

    (62) funct_call -> ID OPAREN . Argument CPAREN
    (63) Argument -> . Assignable COMMA Argument
    (64) Argument -> . Assignable
    (56) Assignable -> . subType
    (57) Assignable -> . collection
    (58) Assignable -> . GET NAME FROM ID
    (59) Assignable -> . LOAD NAME
    (60) Assignable -> . operation
    (61) Assignable -> . funct_call
    (66) Assignable -> . GET STAFF FROM ID
    (67) Assignable -> . GET CATALOG FROM ID
    (68) Assignable -> . GET AMOUNT FROM ID
    (69) Assignable -> . ID
    (70) subType -> . OBRACE bus CBRACE
    (71) subType -> . OBRACE emp CBRACE
    (72) subType -> . OBRACE prod CBRACE
    (73) collection -> . OBR collection_body CBR
    (49) operation -> . operation PLUS operation
    (50) operation -> . operation MINUS operation
    (51) operation -> . operation DIV operation
    (52) operation -> . operation MULT operation
    (53) operation -> . ID
    (54) operation -> . NUMBER
    (55) operation -> . OPAREN operation CPAREN
    (62) funct_call -> . ID OPAREN Argument CPAREN
    (65) funct_call -> . empty
    (88) empty -> .

    GET             shift and go to state 50
    LOAD            shift and go to state 51
    ID              shift and go to state 46
    OBRACE          shift and go to state 40
    OBR             shift and go to state 54
    NUMBER          shift and go to state 55
    OPAREN          shift and go to state 56
    COMMA           reduce using rule 88 (empty -> .)
    CPAREN          reduce using rule 88 (empty -> .)

    Argument                       shift and go to state 57
    Assignable                     shift and go to state 58
    subType                        shift and go to state 48
    collection                     shift and go to state 49
    operation                      shift and go to state 52
    funct_call                     shift and go to state 53
    empty                          shift and go to state 16

state 26

    (9) Instruction -> IfStatement ELSE . OBRACE ListInst CBRACE

    OBRACE          shift and go to state 59


state 27

    (25) Instruction -> PRINT DPOINT . ID

    ID              shift and go to state 60


state 28

    (27) Instruction -> DEF TYPE . ID OPAREN Params CPAREN OBRACE ListInst CBRACE

    ID              shift and go to state 61


state 29

    (28) Instruction -> DEF VOID . ID OPAREN Params CPAREN OBRACE ListInst CBRACE

    ID              shift and go to state 62


state 30

    (46) instance -> TYPE ID .
    (47) instance -> TYPE ID . ASSIGN Assignable

    END             reduce using rule 46 (instance -> TYPE ID .)
    ASSIGN          shift and go to state 63


state 31

    (32) loop_statements -> FOREACH ID . IN ID OBRACE ListInst CBRACE

    IN              shift and go to state 64


state 32

    (33) loop_statements -> WHILE OPAREN . condition CPAREN OBRACE ListInst CBRACE
    (35) condition -> . bool_expression
    (36) bool_expression -> . NOT bool_expression
    (37) bool_expression -> . bool_expression AND bool_expression
    (38) bool_expression -> . bool_expression OR bool_expression
    (39) bool_expression -> . ID EQUAL ID
    (40) bool_expression -> . ID LEQ ID
    (41) bool_expression -> . ID GEQ ID
    (42) bool_expression -> . ID GREATER ID
    (43) bool_expression -> . ID LESS ID
    (44) bool_expression -> . OPAREN bool_expression CPAREN
    (45) bool_expression -> . ID IN ID

    NOT             shift and go to state 68
    ID              shift and go to state 69
    OPAREN          shift and go to state 65

    condition                      shift and go to state 66
    bool_expression                shift and go to state 67

state 33

    (34) IfStatement -> IF OPAREN . condition CPAREN OBRACE ListInst CBRACE
    (35) condition -> . bool_expression
    (36) bool_expression -> . NOT bool_expression
    (37) bool_expression -> . bool_expression AND bool_expression
    (38) bool_expression -> . bool_expression OR bool_expression
    (39) bool_expression -> . ID EQUAL ID
    (40) bool_expression -> . ID LEQ ID
    (41) bool_expression -> . ID GEQ ID
    (42) bool_expression -> . ID GREATER ID
    (43) bool_expression -> . ID LESS ID
    (44) bool_expression -> . OPAREN bool_expression CPAREN
    (45) bool_expression -> . ID IN ID

    NOT             shift and go to state 68
    ID              shift and go to state 69
    OPAREN          shift and go to state 65

    condition                      shift and go to state 70
    bool_expression                shift and go to state 67

state 34

    (2) ListInst -> Instruction END ListInst .

    $end            reduce using rule 2 (ListInst -> Instruction END ListInst .)
    CBRACE          reduce using rule 2 (ListInst -> Instruction END ListInst .)


state 35

    (6) Instruction -> ID GET METRICS . DATE

    DATE            shift and go to state 71


state 36

    (10) Instruction -> ID ACTION SALE . ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (11) Instruction -> ID ACTION SALE . ID PRICE DPOINT ID AMOUNT DPOINT ID
    (12) Instruction -> ID ACTION SALE . ID PRICE DPOINT operation AMOUNT DPOINT operation

    ID              shift and go to state 72


state 37

    (13) Instruction -> ID ACTION INVESTS . ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (14) Instruction -> ID ACTION INVESTS . ID COST DPOINT ID AMOUNT DPOINT ID
    (15) Instruction -> ID ACTION INVESTS . ID COST DPOINT operation AMOUNT DPOINT operation

    ID              shift and go to state 73


state 38

    (16) Instruction -> ID ADD ID .

    END             reduce using rule 16 (Instruction -> ID ADD ID .)


state 39

    (17) Instruction -> ID ADD BILL . OBRACE NUMBER COMMA DESCRIP CBRACE
    (18) Instruction -> ID ADD BILL . OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> ID ADD BILL . OBRACE ID COMMA DESCRIP CBRACE

    OBRACE          shift and go to state 74


state 40

    (70) subType -> OBRACE . bus CBRACE
    (71) subType -> OBRACE . emp CBRACE
    (72) subType -> OBRACE . prod CBRACE
    (79) bus -> . NAME COMMA collection COMMA collection
    (80) bus -> . NAME COMMA ID COMMA ID
    (81) emp -> . NAME COMMA SALARY DPOINT NUMBER
    (82) emp -> . NAME COMMA SALARY DPOINT ID
    (83) emp -> . NAME COMMA SALARY DPOINT operation
    (84) prod -> . NAME COMMA AMOUNT DPOINT NUMBER
    (85) prod -> . NAME
    (86) prod -> . NAME COMMA AMOUNT DPOINT ID
    (87) prod -> . NAME COMMA AMOUNT DPOINT operation

    NAME            shift and go to state 78

    bus                            shift and go to state 75
    emp                            shift and go to state 76
    prod                           shift and go to state 77

state 41

    (20) Instruction -> ID ADD subType .

    END             reduce using rule 20 (Instruction -> ID ADD subType .)


state 42

    (22) Instruction -> ID DEL ID .

    END             reduce using rule 22 (Instruction -> ID DEL ID .)


state 43

    (21) Instruction -> ID DEL NAME .

    END             reduce using rule 21 (Instruction -> ID DEL NAME .)


state 44

    (24) Instruction -> ID DISMISS ID .

    END             reduce using rule 24 (Instruction -> ID DISMISS ID .)


state 45

    (23) Instruction -> ID DISMISS NAME .

    END             reduce using rule 23 (Instruction -> ID DISMISS NAME .)


state 46

    (69) Assignable -> ID .
    (53) operation -> ID .
    (62) funct_call -> ID . OPAREN Argument CPAREN

  ! reduce/reduce conflict for END resolved using rule 53 (operation -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 53 (operation -> ID .)
  ! reduce/reduce conflict for CPAREN resolved using rule 53 (operation -> ID .)
    PLUS            reduce using rule 53 (operation -> ID .)
    MINUS           reduce using rule 53 (operation -> ID .)
    DIV             reduce using rule 53 (operation -> ID .)
    MULT            reduce using rule 53 (operation -> ID .)
    END             reduce using rule 53 (operation -> ID .)
    COMMA           reduce using rule 53 (operation -> ID .)
    CPAREN          reduce using rule 53 (operation -> ID .)
    OPAREN          shift and go to state 25

  ! END             [ reduce using rule 69 (Assignable -> ID .) ]
  ! COMMA           [ reduce using rule 69 (Assignable -> ID .) ]
  ! CPAREN          [ reduce using rule 69 (Assignable -> ID .) ]


state 47

    (48) instance -> ID ASSIGN Assignable .

    END             reduce using rule 48 (instance -> ID ASSIGN Assignable .)


state 48

    (56) Assignable -> subType .

    END             reduce using rule 56 (Assignable -> subType .)
    COMMA           reduce using rule 56 (Assignable -> subType .)
    CPAREN          reduce using rule 56 (Assignable -> subType .)


state 49

    (57) Assignable -> collection .

    END             reduce using rule 57 (Assignable -> collection .)
    COMMA           reduce using rule 57 (Assignable -> collection .)
    CPAREN          reduce using rule 57 (Assignable -> collection .)


state 50

    (58) Assignable -> GET . NAME FROM ID
    (66) Assignable -> GET . STAFF FROM ID
    (67) Assignable -> GET . CATALOG FROM ID
    (68) Assignable -> GET . AMOUNT FROM ID

    NAME            shift and go to state 79
    STAFF           shift and go to state 80
    CATALOG         shift and go to state 81
    AMOUNT          shift and go to state 82


state 51

    (59) Assignable -> LOAD . NAME

    NAME            shift and go to state 83


state 52

    (60) Assignable -> operation .
    (49) operation -> operation . PLUS operation
    (50) operation -> operation . MINUS operation
    (51) operation -> operation . DIV operation
    (52) operation -> operation . MULT operation

    END             reduce using rule 60 (Assignable -> operation .)
    COMMA           reduce using rule 60 (Assignable -> operation .)
    CPAREN          reduce using rule 60 (Assignable -> operation .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    DIV             shift and go to state 86
    MULT            shift and go to state 87


state 53

    (61) Assignable -> funct_call .

    END             reduce using rule 61 (Assignable -> funct_call .)
    COMMA           reduce using rule 61 (Assignable -> funct_call .)
    CPAREN          reduce using rule 61 (Assignable -> funct_call .)


state 54

    (73) collection -> OBR . collection_body CBR
    (74) collection_body -> . subType COMMA collection_body
    (75) collection_body -> . subType
    (76) collection_body -> . empty
    (77) collection_body -> . ID COMMA collection_body
    (78) collection_body -> . ID
    (70) subType -> . OBRACE bus CBRACE
    (71) subType -> . OBRACE emp CBRACE
    (72) subType -> . OBRACE prod CBRACE
    (88) empty -> .

    ID              shift and go to state 91
    OBRACE          shift and go to state 40
    CBR             reduce using rule 88 (empty -> .)

    collection_body                shift and go to state 88
    subType                        shift and go to state 89
    empty                          shift and go to state 90

state 55

    (54) operation -> NUMBER .

    PLUS            reduce using rule 54 (operation -> NUMBER .)
    MINUS           reduce using rule 54 (operation -> NUMBER .)
    DIV             reduce using rule 54 (operation -> NUMBER .)
    MULT            reduce using rule 54 (operation -> NUMBER .)
    END             reduce using rule 54 (operation -> NUMBER .)
    COMMA           reduce using rule 54 (operation -> NUMBER .)
    CPAREN          reduce using rule 54 (operation -> NUMBER .)
    AMOUNT          reduce using rule 54 (operation -> NUMBER .)
    CBRACE          reduce using rule 54 (operation -> NUMBER .)


state 56

    (55) operation -> OPAREN . operation CPAREN
    (49) operation -> . operation PLUS operation
    (50) operation -> . operation MINUS operation
    (51) operation -> . operation DIV operation
    (52) operation -> . operation MULT operation
    (53) operation -> . ID
    (54) operation -> . NUMBER
    (55) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 93
    NUMBER          shift and go to state 55
    OPAREN          shift and go to state 56

    operation                      shift and go to state 92

state 57

    (62) funct_call -> ID OPAREN Argument . CPAREN

    CPAREN          shift and go to state 94


state 58

    (63) Argument -> Assignable . COMMA Argument
    (64) Argument -> Assignable .

    COMMA           shift and go to state 95
    CPAREN          reduce using rule 64 (Argument -> Assignable .)


state 59

    (9) Instruction -> IfStatement ELSE OBRACE . ListInst CBRACE
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . ID GET METRICS DATE
    (7) Instruction -> . loop_statements
    (8) Instruction -> . IfStatement
    (9) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (10) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (11) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (12) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (13) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (14) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (15) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (16) Instruction -> . ID ADD ID
    (17) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (18) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (20) Instruction -> . ID ADD subType
    (21) Instruction -> . ID DEL NAME
    (22) Instruction -> . ID DEL ID
    (23) Instruction -> . ID DISMISS NAME
    (24) Instruction -> . ID DISMISS ID
    (25) Instruction -> . PRINT DPOINT ID
    (26) Instruction -> . funct_call
    (27) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (28) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (46) instance -> . TYPE ID
    (47) instance -> . TYPE ID ASSIGN Assignable
    (48) instance -> . ID ASSIGN Assignable
    (32) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (33) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (34) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (62) funct_call -> . ID OPAREN Argument CPAREN
    (65) funct_call -> . empty
    (88) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 9
    DEF             shift and go to state 11
    TYPE            shift and go to state 12
    FOREACH         shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    END             reduce using rule 88 (empty -> .)

    IfStatement                    shift and go to state 8
    ListInst                       shift and go to state 96
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    funct_call                     shift and go to state 10
    empty                          shift and go to state 16

state 60

    (25) Instruction -> PRINT DPOINT ID .

    END             reduce using rule 25 (Instruction -> PRINT DPOINT ID .)


state 61

    (27) Instruction -> DEF TYPE ID . OPAREN Params CPAREN OBRACE ListInst CBRACE

    OPAREN          shift and go to state 97


state 62

    (28) Instruction -> DEF VOID ID . OPAREN Params CPAREN OBRACE ListInst CBRACE

    OPAREN          shift and go to state 98


state 63

    (47) instance -> TYPE ID ASSIGN . Assignable
    (56) Assignable -> . subType
    (57) Assignable -> . collection
    (58) Assignable -> . GET NAME FROM ID
    (59) Assignable -> . LOAD NAME
    (60) Assignable -> . operation
    (61) Assignable -> . funct_call
    (66) Assignable -> . GET STAFF FROM ID
    (67) Assignable -> . GET CATALOG FROM ID
    (68) Assignable -> . GET AMOUNT FROM ID
    (69) Assignable -> . ID
    (70) subType -> . OBRACE bus CBRACE
    (71) subType -> . OBRACE emp CBRACE
    (72) subType -> . OBRACE prod CBRACE
    (73) collection -> . OBR collection_body CBR
    (49) operation -> . operation PLUS operation
    (50) operation -> . operation MINUS operation
    (51) operation -> . operation DIV operation
    (52) operation -> . operation MULT operation
    (53) operation -> . ID
    (54) operation -> . NUMBER
    (55) operation -> . OPAREN operation CPAREN
    (62) funct_call -> . ID OPAREN Argument CPAREN
    (65) funct_call -> . empty
    (88) empty -> .

    GET             shift and go to state 50
    LOAD            shift and go to state 51
    ID              shift and go to state 46
    OBRACE          shift and go to state 40
    OBR             shift and go to state 54
    NUMBER          shift and go to state 55
    OPAREN          shift and go to state 56
    END             reduce using rule 88 (empty -> .)

    Assignable                     shift and go to state 99
    subType                        shift and go to state 48
    collection                     shift and go to state 49
    operation                      shift and go to state 52
    funct_call                     shift and go to state 53
    empty                          shift and go to state 16

state 64

    (32) loop_statements -> FOREACH ID IN . ID OBRACE ListInst CBRACE

    ID              shift and go to state 100


state 65

    (44) bool_expression -> OPAREN . bool_expression CPAREN
    (36) bool_expression -> . NOT bool_expression
    (37) bool_expression -> . bool_expression AND bool_expression
    (38) bool_expression -> . bool_expression OR bool_expression
    (39) bool_expression -> . ID EQUAL ID
    (40) bool_expression -> . ID LEQ ID
    (41) bool_expression -> . ID GEQ ID
    (42) bool_expression -> . ID GREATER ID
    (43) bool_expression -> . ID LESS ID
    (44) bool_expression -> . OPAREN bool_expression CPAREN
    (45) bool_expression -> . ID IN ID

    NOT             shift and go to state 68
    ID              shift and go to state 69
    OPAREN          shift and go to state 65

    bool_expression                shift and go to state 101

state 66

    (33) loop_statements -> WHILE OPAREN condition . CPAREN OBRACE ListInst CBRACE

    CPAREN          shift and go to state 102


state 67

    (35) condition -> bool_expression .
    (37) bool_expression -> bool_expression . AND bool_expression
    (38) bool_expression -> bool_expression . OR bool_expression

    CPAREN          reduce using rule 35 (condition -> bool_expression .)
    AND             shift and go to state 103
    OR              shift and go to state 104


state 68

    (36) bool_expression -> NOT . bool_expression
    (36) bool_expression -> . NOT bool_expression
    (37) bool_expression -> . bool_expression AND bool_expression
    (38) bool_expression -> . bool_expression OR bool_expression
    (39) bool_expression -> . ID EQUAL ID
    (40) bool_expression -> . ID LEQ ID
    (41) bool_expression -> . ID GEQ ID
    (42) bool_expression -> . ID GREATER ID
    (43) bool_expression -> . ID LESS ID
    (44) bool_expression -> . OPAREN bool_expression CPAREN
    (45) bool_expression -> . ID IN ID

    NOT             shift and go to state 68
    ID              shift and go to state 69
    OPAREN          shift and go to state 65

    bool_expression                shift and go to state 105

state 69

    (39) bool_expression -> ID . EQUAL ID
    (40) bool_expression -> ID . LEQ ID
    (41) bool_expression -> ID . GEQ ID
    (42) bool_expression -> ID . GREATER ID
    (43) bool_expression -> ID . LESS ID
    (45) bool_expression -> ID . IN ID

    EQUAL           shift and go to state 106
    LEQ             shift and go to state 107
    GEQ             shift and go to state 108
    GREATER         shift and go to state 109
    LESS            shift and go to state 110
    IN              shift and go to state 111


state 70

    (34) IfStatement -> IF OPAREN condition . CPAREN OBRACE ListInst CBRACE

    CPAREN          shift and go to state 112


state 71

    (6) Instruction -> ID GET METRICS DATE .

    END             reduce using rule 6 (Instruction -> ID GET METRICS DATE .)


state 72

    (10) Instruction -> ID ACTION SALE ID . PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (11) Instruction -> ID ACTION SALE ID . PRICE DPOINT ID AMOUNT DPOINT ID
    (12) Instruction -> ID ACTION SALE ID . PRICE DPOINT operation AMOUNT DPOINT operation

    PRICE           shift and go to state 113


state 73

    (13) Instruction -> ID ACTION INVESTS ID . COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (14) Instruction -> ID ACTION INVESTS ID . COST DPOINT ID AMOUNT DPOINT ID
    (15) Instruction -> ID ACTION INVESTS ID . COST DPOINT operation AMOUNT DPOINT operation

    COST            shift and go to state 114


state 74

    (17) Instruction -> ID ADD BILL OBRACE . NUMBER COMMA DESCRIP CBRACE
    (18) Instruction -> ID ADD BILL OBRACE . operation COMMA DESCRIP CBRACE
    (19) Instruction -> ID ADD BILL OBRACE . ID COMMA DESCRIP CBRACE
    (49) operation -> . operation PLUS operation
    (50) operation -> . operation MINUS operation
    (51) operation -> . operation DIV operation
    (52) operation -> . operation MULT operation
    (53) operation -> . ID
    (54) operation -> . NUMBER
    (55) operation -> . OPAREN operation CPAREN

    NUMBER          shift and go to state 116
    ID              shift and go to state 115
    OPAREN          shift and go to state 56

    operation                      shift and go to state 117

state 75

    (70) subType -> OBRACE bus . CBRACE

    CBRACE          shift and go to state 118


state 76

    (71) subType -> OBRACE emp . CBRACE

    CBRACE          shift and go to state 119


state 77

    (72) subType -> OBRACE prod . CBRACE

    CBRACE          shift and go to state 120


state 78

    (79) bus -> NAME . COMMA collection COMMA collection
    (80) bus -> NAME . COMMA ID COMMA ID
    (81) emp -> NAME . COMMA SALARY DPOINT NUMBER
    (82) emp -> NAME . COMMA SALARY DPOINT ID
    (83) emp -> NAME . COMMA SALARY DPOINT operation
    (84) prod -> NAME . COMMA AMOUNT DPOINT NUMBER
    (85) prod -> NAME .
    (86) prod -> NAME . COMMA AMOUNT DPOINT ID
    (87) prod -> NAME . COMMA AMOUNT DPOINT operation

    COMMA           shift and go to state 121
    CBRACE          reduce using rule 85 (prod -> NAME .)


state 79

    (58) Assignable -> GET NAME . FROM ID

    FROM            shift and go to state 122


state 80

    (66) Assignable -> GET STAFF . FROM ID

    FROM            shift and go to state 123


state 81

    (67) Assignable -> GET CATALOG . FROM ID

    FROM            shift and go to state 124


state 82

    (68) Assignable -> GET AMOUNT . FROM ID

    FROM            shift and go to state 125


state 83

    (59) Assignable -> LOAD NAME .

    END             reduce using rule 59 (Assignable -> LOAD NAME .)
    COMMA           reduce using rule 59 (Assignable -> LOAD NAME .)
    CPAREN          reduce using rule 59 (Assignable -> LOAD NAME .)


state 84

    (49) operation -> operation PLUS . operation
    (49) operation -> . operation PLUS operation
    (50) operation -> . operation MINUS operation
    (51) operation -> . operation DIV operation
    (52) operation -> . operation MULT operation
    (53) operation -> . ID
    (54) operation -> . NUMBER
    (55) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 93
    NUMBER          shift and go to state 55
    OPAREN          shift and go to state 56

    operation                      shift and go to state 126

state 85

    (50) operation -> operation MINUS . operation
    (49) operation -> . operation PLUS operation
    (50) operation -> . operation MINUS operation
    (51) operation -> . operation DIV operation
    (52) operation -> . operation MULT operation
    (53) operation -> . ID
    (54) operation -> . NUMBER
    (55) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 93
    NUMBER          shift and go to state 55
    OPAREN          shift and go to state 56

    operation                      shift and go to state 127

state 86

    (51) operation -> operation DIV . operation
    (49) operation -> . operation PLUS operation
    (50) operation -> . operation MINUS operation
    (51) operation -> . operation DIV operation
    (52) operation -> . operation MULT operation
    (53) operation -> . ID
    (54) operation -> . NUMBER
    (55) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 93
    NUMBER          shift and go to state 55
    OPAREN          shift and go to state 56

    operation                      shift and go to state 128

state 87

    (52) operation -> operation MULT . operation
    (49) operation -> . operation PLUS operation
    (50) operation -> . operation MINUS operation
    (51) operation -> . operation DIV operation
    (52) operation -> . operation MULT operation
    (53) operation -> . ID
    (54) operation -> . NUMBER
    (55) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 93
    NUMBER          shift and go to state 55
    OPAREN          shift and go to state 56

    operation                      shift and go to state 129

state 88

    (73) collection -> OBR collection_body . CBR

    CBR             shift and go to state 130


state 89

    (74) collection_body -> subType . COMMA collection_body
    (75) collection_body -> subType .

    COMMA           shift and go to state 131
    CBR             reduce using rule 75 (collection_body -> subType .)


state 90

    (76) collection_body -> empty .

    CBR             reduce using rule 76 (collection_body -> empty .)


state 91

    (77) collection_body -> ID . COMMA collection_body
    (78) collection_body -> ID .

    COMMA           shift and go to state 132
    CBR             reduce using rule 78 (collection_body -> ID .)


state 92

    (55) operation -> OPAREN operation . CPAREN
    (49) operation -> operation . PLUS operation
    (50) operation -> operation . MINUS operation
    (51) operation -> operation . DIV operation
    (52) operation -> operation . MULT operation

    CPAREN          shift and go to state 133
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    DIV             shift and go to state 86
    MULT            shift and go to state 87


state 93

    (53) operation -> ID .

    CPAREN          reduce using rule 53 (operation -> ID .)
    PLUS            reduce using rule 53 (operation -> ID .)
    MINUS           reduce using rule 53 (operation -> ID .)
    DIV             reduce using rule 53 (operation -> ID .)
    MULT            reduce using rule 53 (operation -> ID .)
    END             reduce using rule 53 (operation -> ID .)
    COMMA           reduce using rule 53 (operation -> ID .)
    AMOUNT          reduce using rule 53 (operation -> ID .)
    CBRACE          reduce using rule 53 (operation -> ID .)


state 94

    (62) funct_call -> ID OPAREN Argument CPAREN .

    END             reduce using rule 62 (funct_call -> ID OPAREN Argument CPAREN .)
    COMMA           reduce using rule 62 (funct_call -> ID OPAREN Argument CPAREN .)
    CPAREN          reduce using rule 62 (funct_call -> ID OPAREN Argument CPAREN .)


state 95

    (63) Argument -> Assignable COMMA . Argument
    (63) Argument -> . Assignable COMMA Argument
    (64) Argument -> . Assignable
    (56) Assignable -> . subType
    (57) Assignable -> . collection
    (58) Assignable -> . GET NAME FROM ID
    (59) Assignable -> . LOAD NAME
    (60) Assignable -> . operation
    (61) Assignable -> . funct_call
    (66) Assignable -> . GET STAFF FROM ID
    (67) Assignable -> . GET CATALOG FROM ID
    (68) Assignable -> . GET AMOUNT FROM ID
    (69) Assignable -> . ID
    (70) subType -> . OBRACE bus CBRACE
    (71) subType -> . OBRACE emp CBRACE
    (72) subType -> . OBRACE prod CBRACE
    (73) collection -> . OBR collection_body CBR
    (49) operation -> . operation PLUS operation
    (50) operation -> . operation MINUS operation
    (51) operation -> . operation DIV operation
    (52) operation -> . operation MULT operation
    (53) operation -> . ID
    (54) operation -> . NUMBER
    (55) operation -> . OPAREN operation CPAREN
    (62) funct_call -> . ID OPAREN Argument CPAREN
    (65) funct_call -> . empty
    (88) empty -> .

    GET             shift and go to state 50
    LOAD            shift and go to state 51
    ID              shift and go to state 46
    OBRACE          shift and go to state 40
    OBR             shift and go to state 54
    NUMBER          shift and go to state 55
    OPAREN          shift and go to state 56
    COMMA           reduce using rule 88 (empty -> .)
    CPAREN          reduce using rule 88 (empty -> .)

    Assignable                     shift and go to state 58
    Argument                       shift and go to state 134
    subType                        shift and go to state 48
    collection                     shift and go to state 49
    operation                      shift and go to state 52
    funct_call                     shift and go to state 53
    empty                          shift and go to state 16

state 96

    (9) Instruction -> IfStatement ELSE OBRACE ListInst . CBRACE

    CBRACE          shift and go to state 135


state 97

    (27) Instruction -> DEF TYPE ID OPAREN . Params CPAREN OBRACE ListInst CBRACE
    (29) Params -> . TYPE ID COMMA Params
    (30) Params -> . TYPE ID
    (31) Params -> . empty
    (88) empty -> .

    TYPE            shift and go to state 136
    CPAREN          reduce using rule 88 (empty -> .)

    Params                         shift and go to state 137
    empty                          shift and go to state 138

state 98

    (28) Instruction -> DEF VOID ID OPAREN . Params CPAREN OBRACE ListInst CBRACE
    (29) Params -> . TYPE ID COMMA Params
    (30) Params -> . TYPE ID
    (31) Params -> . empty
    (88) empty -> .

    TYPE            shift and go to state 136
    CPAREN          reduce using rule 88 (empty -> .)

    Params                         shift and go to state 139
    empty                          shift and go to state 138

state 99

    (47) instance -> TYPE ID ASSIGN Assignable .

    END             reduce using rule 47 (instance -> TYPE ID ASSIGN Assignable .)


state 100

    (32) loop_statements -> FOREACH ID IN ID . OBRACE ListInst CBRACE

    OBRACE          shift and go to state 140


state 101

    (44) bool_expression -> OPAREN bool_expression . CPAREN
    (37) bool_expression -> bool_expression . AND bool_expression
    (38) bool_expression -> bool_expression . OR bool_expression

    CPAREN          shift and go to state 141
    AND             shift and go to state 103
    OR              shift and go to state 104


state 102

    (33) loop_statements -> WHILE OPAREN condition CPAREN . OBRACE ListInst CBRACE

    OBRACE          shift and go to state 142


state 103

    (37) bool_expression -> bool_expression AND . bool_expression
    (36) bool_expression -> . NOT bool_expression
    (37) bool_expression -> . bool_expression AND bool_expression
    (38) bool_expression -> . bool_expression OR bool_expression
    (39) bool_expression -> . ID EQUAL ID
    (40) bool_expression -> . ID LEQ ID
    (41) bool_expression -> . ID GEQ ID
    (42) bool_expression -> . ID GREATER ID
    (43) bool_expression -> . ID LESS ID
    (44) bool_expression -> . OPAREN bool_expression CPAREN
    (45) bool_expression -> . ID IN ID

    NOT             shift and go to state 68
    ID              shift and go to state 69
    OPAREN          shift and go to state 65

    bool_expression                shift and go to state 143

state 104

    (38) bool_expression -> bool_expression OR . bool_expression
    (36) bool_expression -> . NOT bool_expression
    (37) bool_expression -> . bool_expression AND bool_expression
    (38) bool_expression -> . bool_expression OR bool_expression
    (39) bool_expression -> . ID EQUAL ID
    (40) bool_expression -> . ID LEQ ID
    (41) bool_expression -> . ID GEQ ID
    (42) bool_expression -> . ID GREATER ID
    (43) bool_expression -> . ID LESS ID
    (44) bool_expression -> . OPAREN bool_expression CPAREN
    (45) bool_expression -> . ID IN ID

    NOT             shift and go to state 68
    ID              shift and go to state 69
    OPAREN          shift and go to state 65

    bool_expression                shift and go to state 144

state 105

    (36) bool_expression -> NOT bool_expression .
    (37) bool_expression -> bool_expression . AND bool_expression
    (38) bool_expression -> bool_expression . OR bool_expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    CPAREN          reduce using rule 36 (bool_expression -> NOT bool_expression .)
    AND             shift and go to state 103
    OR              shift and go to state 104

  ! AND             [ reduce using rule 36 (bool_expression -> NOT bool_expression .) ]
  ! OR              [ reduce using rule 36 (bool_expression -> NOT bool_expression .) ]


state 106

    (39) bool_expression -> ID EQUAL . ID

    ID              shift and go to state 145


state 107

    (40) bool_expression -> ID LEQ . ID

    ID              shift and go to state 146


state 108

    (41) bool_expression -> ID GEQ . ID

    ID              shift and go to state 147


state 109

    (42) bool_expression -> ID GREATER . ID

    ID              shift and go to state 148


state 110

    (43) bool_expression -> ID LESS . ID

    ID              shift and go to state 149


state 111

    (45) bool_expression -> ID IN . ID

    ID              shift and go to state 150


state 112

    (34) IfStatement -> IF OPAREN condition CPAREN . OBRACE ListInst CBRACE

    OBRACE          shift and go to state 151


state 113

    (10) Instruction -> ID ACTION SALE ID PRICE . DPOINT NUMBER AMOUNT DPOINT NUMBER
    (11) Instruction -> ID ACTION SALE ID PRICE . DPOINT ID AMOUNT DPOINT ID
    (12) Instruction -> ID ACTION SALE ID PRICE . DPOINT operation AMOUNT DPOINT operation

    DPOINT          shift and go to state 152


state 114

    (13) Instruction -> ID ACTION INVESTS ID COST . DPOINT NUMBER AMOUNT DPOINT NUMBER
    (14) Instruction -> ID ACTION INVESTS ID COST . DPOINT ID AMOUNT DPOINT ID
    (15) Instruction -> ID ACTION INVESTS ID COST . DPOINT operation AMOUNT DPOINT operation

    DPOINT          shift and go to state 153


state 115

    (19) Instruction -> ID ADD BILL OBRACE ID . COMMA DESCRIP CBRACE
    (53) operation -> ID .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 154
    PLUS            reduce using rule 53 (operation -> ID .)
    MINUS           reduce using rule 53 (operation -> ID .)
    DIV             reduce using rule 53 (operation -> ID .)
    MULT            reduce using rule 53 (operation -> ID .)

  ! COMMA           [ reduce using rule 53 (operation -> ID .) ]


state 116

    (17) Instruction -> ID ADD BILL OBRACE NUMBER . COMMA DESCRIP CBRACE
    (54) operation -> NUMBER .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 155
    PLUS            reduce using rule 54 (operation -> NUMBER .)
    MINUS           reduce using rule 54 (operation -> NUMBER .)
    DIV             reduce using rule 54 (operation -> NUMBER .)
    MULT            reduce using rule 54 (operation -> NUMBER .)

  ! COMMA           [ reduce using rule 54 (operation -> NUMBER .) ]


state 117

    (18) Instruction -> ID ADD BILL OBRACE operation . COMMA DESCRIP CBRACE
    (49) operation -> operation . PLUS operation
    (50) operation -> operation . MINUS operation
    (51) operation -> operation . DIV operation
    (52) operation -> operation . MULT operation

    COMMA           shift and go to state 156
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    DIV             shift and go to state 86
    MULT            shift and go to state 87


state 118

    (70) subType -> OBRACE bus CBRACE .

    END             reduce using rule 70 (subType -> OBRACE bus CBRACE .)
    COMMA           reduce using rule 70 (subType -> OBRACE bus CBRACE .)
    CPAREN          reduce using rule 70 (subType -> OBRACE bus CBRACE .)
    CBR             reduce using rule 70 (subType -> OBRACE bus CBRACE .)


state 119

    (71) subType -> OBRACE emp CBRACE .

    END             reduce using rule 71 (subType -> OBRACE emp CBRACE .)
    COMMA           reduce using rule 71 (subType -> OBRACE emp CBRACE .)
    CPAREN          reduce using rule 71 (subType -> OBRACE emp CBRACE .)
    CBR             reduce using rule 71 (subType -> OBRACE emp CBRACE .)


state 120

    (72) subType -> OBRACE prod CBRACE .

    END             reduce using rule 72 (subType -> OBRACE prod CBRACE .)
    COMMA           reduce using rule 72 (subType -> OBRACE prod CBRACE .)
    CPAREN          reduce using rule 72 (subType -> OBRACE prod CBRACE .)
    CBR             reduce using rule 72 (subType -> OBRACE prod CBRACE .)


state 121

    (79) bus -> NAME COMMA . collection COMMA collection
    (80) bus -> NAME COMMA . ID COMMA ID
    (81) emp -> NAME COMMA . SALARY DPOINT NUMBER
    (82) emp -> NAME COMMA . SALARY DPOINT ID
    (83) emp -> NAME COMMA . SALARY DPOINT operation
    (84) prod -> NAME COMMA . AMOUNT DPOINT NUMBER
    (86) prod -> NAME COMMA . AMOUNT DPOINT ID
    (87) prod -> NAME COMMA . AMOUNT DPOINT operation
    (73) collection -> . OBR collection_body CBR

    ID              shift and go to state 158
    SALARY          shift and go to state 159
    AMOUNT          shift and go to state 160
    OBR             shift and go to state 54

    collection                     shift and go to state 157

state 122

    (58) Assignable -> GET NAME FROM . ID

    ID              shift and go to state 161


state 123

    (66) Assignable -> GET STAFF FROM . ID

    ID              shift and go to state 162


state 124

    (67) Assignable -> GET CATALOG FROM . ID

    ID              shift and go to state 163


state 125

    (68) Assignable -> GET AMOUNT FROM . ID

    ID              shift and go to state 164


state 126

    (49) operation -> operation PLUS operation .
    (49) operation -> operation . PLUS operation
    (50) operation -> operation . MINUS operation
    (51) operation -> operation . DIV operation
    (52) operation -> operation . MULT operation

    PLUS            reduce using rule 49 (operation -> operation PLUS operation .)
    MINUS           reduce using rule 49 (operation -> operation PLUS operation .)
    END             reduce using rule 49 (operation -> operation PLUS operation .)
    COMMA           reduce using rule 49 (operation -> operation PLUS operation .)
    CPAREN          reduce using rule 49 (operation -> operation PLUS operation .)
    AMOUNT          reduce using rule 49 (operation -> operation PLUS operation .)
    CBRACE          reduce using rule 49 (operation -> operation PLUS operation .)
    DIV             shift and go to state 86
    MULT            shift and go to state 87

  ! DIV             [ reduce using rule 49 (operation -> operation PLUS operation .) ]
  ! MULT            [ reduce using rule 49 (operation -> operation PLUS operation .) ]
  ! PLUS            [ shift and go to state 84 ]
  ! MINUS           [ shift and go to state 85 ]


state 127

    (50) operation -> operation MINUS operation .
    (49) operation -> operation . PLUS operation
    (50) operation -> operation . MINUS operation
    (51) operation -> operation . DIV operation
    (52) operation -> operation . MULT operation

    PLUS            reduce using rule 50 (operation -> operation MINUS operation .)
    MINUS           reduce using rule 50 (operation -> operation MINUS operation .)
    END             reduce using rule 50 (operation -> operation MINUS operation .)
    COMMA           reduce using rule 50 (operation -> operation MINUS operation .)
    CPAREN          reduce using rule 50 (operation -> operation MINUS operation .)
    AMOUNT          reduce using rule 50 (operation -> operation MINUS operation .)
    CBRACE          reduce using rule 50 (operation -> operation MINUS operation .)
    DIV             shift and go to state 86
    MULT            shift and go to state 87

  ! DIV             [ reduce using rule 50 (operation -> operation MINUS operation .) ]
  ! MULT            [ reduce using rule 50 (operation -> operation MINUS operation .) ]
  ! PLUS            [ shift and go to state 84 ]
  ! MINUS           [ shift and go to state 85 ]


state 128

    (51) operation -> operation DIV operation .
    (49) operation -> operation . PLUS operation
    (50) operation -> operation . MINUS operation
    (51) operation -> operation . DIV operation
    (52) operation -> operation . MULT operation

    PLUS            reduce using rule 51 (operation -> operation DIV operation .)
    MINUS           reduce using rule 51 (operation -> operation DIV operation .)
    DIV             reduce using rule 51 (operation -> operation DIV operation .)
    MULT            reduce using rule 51 (operation -> operation DIV operation .)
    END             reduce using rule 51 (operation -> operation DIV operation .)
    COMMA           reduce using rule 51 (operation -> operation DIV operation .)
    CPAREN          reduce using rule 51 (operation -> operation DIV operation .)
    AMOUNT          reduce using rule 51 (operation -> operation DIV operation .)
    CBRACE          reduce using rule 51 (operation -> operation DIV operation .)

  ! PLUS            [ shift and go to state 84 ]
  ! MINUS           [ shift and go to state 85 ]
  ! DIV             [ shift and go to state 86 ]
  ! MULT            [ shift and go to state 87 ]


state 129

    (52) operation -> operation MULT operation .
    (49) operation -> operation . PLUS operation
    (50) operation -> operation . MINUS operation
    (51) operation -> operation . DIV operation
    (52) operation -> operation . MULT operation

    PLUS            reduce using rule 52 (operation -> operation MULT operation .)
    MINUS           reduce using rule 52 (operation -> operation MULT operation .)
    DIV             reduce using rule 52 (operation -> operation MULT operation .)
    MULT            reduce using rule 52 (operation -> operation MULT operation .)
    END             reduce using rule 52 (operation -> operation MULT operation .)
    COMMA           reduce using rule 52 (operation -> operation MULT operation .)
    CPAREN          reduce using rule 52 (operation -> operation MULT operation .)
    AMOUNT          reduce using rule 52 (operation -> operation MULT operation .)
    CBRACE          reduce using rule 52 (operation -> operation MULT operation .)

  ! PLUS            [ shift and go to state 84 ]
  ! MINUS           [ shift and go to state 85 ]
  ! DIV             [ shift and go to state 86 ]
  ! MULT            [ shift and go to state 87 ]


state 130

    (73) collection -> OBR collection_body CBR .

    END             reduce using rule 73 (collection -> OBR collection_body CBR .)
    COMMA           reduce using rule 73 (collection -> OBR collection_body CBR .)
    CPAREN          reduce using rule 73 (collection -> OBR collection_body CBR .)
    CBRACE          reduce using rule 73 (collection -> OBR collection_body CBR .)


state 131

    (74) collection_body -> subType COMMA . collection_body
    (74) collection_body -> . subType COMMA collection_body
    (75) collection_body -> . subType
    (76) collection_body -> . empty
    (77) collection_body -> . ID COMMA collection_body
    (78) collection_body -> . ID
    (70) subType -> . OBRACE bus CBRACE
    (71) subType -> . OBRACE emp CBRACE
    (72) subType -> . OBRACE prod CBRACE
    (88) empty -> .

    ID              shift and go to state 91
    OBRACE          shift and go to state 40
    CBR             reduce using rule 88 (empty -> .)

    subType                        shift and go to state 89
    collection_body                shift and go to state 165
    empty                          shift and go to state 90

state 132

    (77) collection_body -> ID COMMA . collection_body
    (74) collection_body -> . subType COMMA collection_body
    (75) collection_body -> . subType
    (76) collection_body -> . empty
    (77) collection_body -> . ID COMMA collection_body
    (78) collection_body -> . ID
    (70) subType -> . OBRACE bus CBRACE
    (71) subType -> . OBRACE emp CBRACE
    (72) subType -> . OBRACE prod CBRACE
    (88) empty -> .

    ID              shift and go to state 91
    OBRACE          shift and go to state 40
    CBR             reduce using rule 88 (empty -> .)

    collection_body                shift and go to state 166
    subType                        shift and go to state 89
    empty                          shift and go to state 90

state 133

    (55) operation -> OPAREN operation CPAREN .

    PLUS            reduce using rule 55 (operation -> OPAREN operation CPAREN .)
    MINUS           reduce using rule 55 (operation -> OPAREN operation CPAREN .)
    DIV             reduce using rule 55 (operation -> OPAREN operation CPAREN .)
    MULT            reduce using rule 55 (operation -> OPAREN operation CPAREN .)
    END             reduce using rule 55 (operation -> OPAREN operation CPAREN .)
    COMMA           reduce using rule 55 (operation -> OPAREN operation CPAREN .)
    CPAREN          reduce using rule 55 (operation -> OPAREN operation CPAREN .)
    AMOUNT          reduce using rule 55 (operation -> OPAREN operation CPAREN .)
    CBRACE          reduce using rule 55 (operation -> OPAREN operation CPAREN .)


state 134

    (63) Argument -> Assignable COMMA Argument .

    CPAREN          reduce using rule 63 (Argument -> Assignable COMMA Argument .)


state 135

    (9) Instruction -> IfStatement ELSE OBRACE ListInst CBRACE .

    END             reduce using rule 9 (Instruction -> IfStatement ELSE OBRACE ListInst CBRACE .)


state 136

    (29) Params -> TYPE . ID COMMA Params
    (30) Params -> TYPE . ID

    ID              shift and go to state 167


state 137

    (27) Instruction -> DEF TYPE ID OPAREN Params . CPAREN OBRACE ListInst CBRACE

    CPAREN          shift and go to state 168


state 138

    (31) Params -> empty .

    CPAREN          reduce using rule 31 (Params -> empty .)


state 139

    (28) Instruction -> DEF VOID ID OPAREN Params . CPAREN OBRACE ListInst CBRACE

    CPAREN          shift and go to state 169


state 140

    (32) loop_statements -> FOREACH ID IN ID OBRACE . ListInst CBRACE
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . ID GET METRICS DATE
    (7) Instruction -> . loop_statements
    (8) Instruction -> . IfStatement
    (9) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (10) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (11) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (12) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (13) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (14) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (15) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (16) Instruction -> . ID ADD ID
    (17) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (18) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (20) Instruction -> . ID ADD subType
    (21) Instruction -> . ID DEL NAME
    (22) Instruction -> . ID DEL ID
    (23) Instruction -> . ID DISMISS NAME
    (24) Instruction -> . ID DISMISS ID
    (25) Instruction -> . PRINT DPOINT ID
    (26) Instruction -> . funct_call
    (27) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (28) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (46) instance -> . TYPE ID
    (47) instance -> . TYPE ID ASSIGN Assignable
    (48) instance -> . ID ASSIGN Assignable
    (32) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (33) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (34) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (62) funct_call -> . ID OPAREN Argument CPAREN
    (65) funct_call -> . empty
    (88) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 9
    DEF             shift and go to state 11
    TYPE            shift and go to state 12
    FOREACH         shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    END             reduce using rule 88 (empty -> .)

    ListInst                       shift and go to state 170
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    IfStatement                    shift and go to state 8
    funct_call                     shift and go to state 10
    empty                          shift and go to state 16

state 141

    (44) bool_expression -> OPAREN bool_expression CPAREN .

    AND             reduce using rule 44 (bool_expression -> OPAREN bool_expression CPAREN .)
    OR              reduce using rule 44 (bool_expression -> OPAREN bool_expression CPAREN .)
    CPAREN          reduce using rule 44 (bool_expression -> OPAREN bool_expression CPAREN .)


state 142

    (33) loop_statements -> WHILE OPAREN condition CPAREN OBRACE . ListInst CBRACE
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . ID GET METRICS DATE
    (7) Instruction -> . loop_statements
    (8) Instruction -> . IfStatement
    (9) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (10) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (11) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (12) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (13) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (14) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (15) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (16) Instruction -> . ID ADD ID
    (17) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (18) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (20) Instruction -> . ID ADD subType
    (21) Instruction -> . ID DEL NAME
    (22) Instruction -> . ID DEL ID
    (23) Instruction -> . ID DISMISS NAME
    (24) Instruction -> . ID DISMISS ID
    (25) Instruction -> . PRINT DPOINT ID
    (26) Instruction -> . funct_call
    (27) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (28) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (46) instance -> . TYPE ID
    (47) instance -> . TYPE ID ASSIGN Assignable
    (48) instance -> . ID ASSIGN Assignable
    (32) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (33) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (34) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (62) funct_call -> . ID OPAREN Argument CPAREN
    (65) funct_call -> . empty
    (88) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 9
    DEF             shift and go to state 11
    TYPE            shift and go to state 12
    FOREACH         shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    END             reduce using rule 88 (empty -> .)

    ListInst                       shift and go to state 171
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    IfStatement                    shift and go to state 8
    funct_call                     shift and go to state 10
    empty                          shift and go to state 16

state 143

    (37) bool_expression -> bool_expression AND bool_expression .
    (37) bool_expression -> bool_expression . AND bool_expression
    (38) bool_expression -> bool_expression . OR bool_expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    CPAREN          reduce using rule 37 (bool_expression -> bool_expression AND bool_expression .)
    AND             shift and go to state 103
    OR              shift and go to state 104

  ! AND             [ reduce using rule 37 (bool_expression -> bool_expression AND bool_expression .) ]
  ! OR              [ reduce using rule 37 (bool_expression -> bool_expression AND bool_expression .) ]


state 144

    (38) bool_expression -> bool_expression OR bool_expression .
    (37) bool_expression -> bool_expression . AND bool_expression
    (38) bool_expression -> bool_expression . OR bool_expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    CPAREN          reduce using rule 38 (bool_expression -> bool_expression OR bool_expression .)
    AND             shift and go to state 103
    OR              shift and go to state 104

  ! AND             [ reduce using rule 38 (bool_expression -> bool_expression OR bool_expression .) ]
  ! OR              [ reduce using rule 38 (bool_expression -> bool_expression OR bool_expression .) ]


state 145

    (39) bool_expression -> ID EQUAL ID .

    AND             reduce using rule 39 (bool_expression -> ID EQUAL ID .)
    OR              reduce using rule 39 (bool_expression -> ID EQUAL ID .)
    CPAREN          reduce using rule 39 (bool_expression -> ID EQUAL ID .)


state 146

    (40) bool_expression -> ID LEQ ID .

    AND             reduce using rule 40 (bool_expression -> ID LEQ ID .)
    OR              reduce using rule 40 (bool_expression -> ID LEQ ID .)
    CPAREN          reduce using rule 40 (bool_expression -> ID LEQ ID .)


state 147

    (41) bool_expression -> ID GEQ ID .

    AND             reduce using rule 41 (bool_expression -> ID GEQ ID .)
    OR              reduce using rule 41 (bool_expression -> ID GEQ ID .)
    CPAREN          reduce using rule 41 (bool_expression -> ID GEQ ID .)


state 148

    (42) bool_expression -> ID GREATER ID .

    AND             reduce using rule 42 (bool_expression -> ID GREATER ID .)
    OR              reduce using rule 42 (bool_expression -> ID GREATER ID .)
    CPAREN          reduce using rule 42 (bool_expression -> ID GREATER ID .)


state 149

    (43) bool_expression -> ID LESS ID .

    AND             reduce using rule 43 (bool_expression -> ID LESS ID .)
    OR              reduce using rule 43 (bool_expression -> ID LESS ID .)
    CPAREN          reduce using rule 43 (bool_expression -> ID LESS ID .)


state 150

    (45) bool_expression -> ID IN ID .

    AND             reduce using rule 45 (bool_expression -> ID IN ID .)
    OR              reduce using rule 45 (bool_expression -> ID IN ID .)
    CPAREN          reduce using rule 45 (bool_expression -> ID IN ID .)


state 151

    (34) IfStatement -> IF OPAREN condition CPAREN OBRACE . ListInst CBRACE
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . ID GET METRICS DATE
    (7) Instruction -> . loop_statements
    (8) Instruction -> . IfStatement
    (9) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (10) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (11) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (12) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (13) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (14) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (15) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (16) Instruction -> . ID ADD ID
    (17) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (18) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (20) Instruction -> . ID ADD subType
    (21) Instruction -> . ID DEL NAME
    (22) Instruction -> . ID DEL ID
    (23) Instruction -> . ID DISMISS NAME
    (24) Instruction -> . ID DISMISS ID
    (25) Instruction -> . PRINT DPOINT ID
    (26) Instruction -> . funct_call
    (27) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (28) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (46) instance -> . TYPE ID
    (47) instance -> . TYPE ID ASSIGN Assignable
    (48) instance -> . ID ASSIGN Assignable
    (32) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (33) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (34) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (62) funct_call -> . ID OPAREN Argument CPAREN
    (65) funct_call -> . empty
    (88) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 9
    DEF             shift and go to state 11
    TYPE            shift and go to state 12
    FOREACH         shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    END             reduce using rule 88 (empty -> .)

    ListInst                       shift and go to state 172
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    IfStatement                    shift and go to state 8
    funct_call                     shift and go to state 10
    empty                          shift and go to state 16

state 152

    (10) Instruction -> ID ACTION SALE ID PRICE DPOINT . NUMBER AMOUNT DPOINT NUMBER
    (11) Instruction -> ID ACTION SALE ID PRICE DPOINT . ID AMOUNT DPOINT ID
    (12) Instruction -> ID ACTION SALE ID PRICE DPOINT . operation AMOUNT DPOINT operation
    (49) operation -> . operation PLUS operation
    (50) operation -> . operation MINUS operation
    (51) operation -> . operation DIV operation
    (52) operation -> . operation MULT operation
    (53) operation -> . ID
    (54) operation -> . NUMBER
    (55) operation -> . OPAREN operation CPAREN

    NUMBER          shift and go to state 174
    ID              shift and go to state 173
    OPAREN          shift and go to state 56

    operation                      shift and go to state 175

state 153

    (13) Instruction -> ID ACTION INVESTS ID COST DPOINT . NUMBER AMOUNT DPOINT NUMBER
    (14) Instruction -> ID ACTION INVESTS ID COST DPOINT . ID AMOUNT DPOINT ID
    (15) Instruction -> ID ACTION INVESTS ID COST DPOINT . operation AMOUNT DPOINT operation
    (49) operation -> . operation PLUS operation
    (50) operation -> . operation MINUS operation
    (51) operation -> . operation DIV operation
    (52) operation -> . operation MULT operation
    (53) operation -> . ID
    (54) operation -> . NUMBER
    (55) operation -> . OPAREN operation CPAREN

    NUMBER          shift and go to state 177
    ID              shift and go to state 176
    OPAREN          shift and go to state 56

    operation                      shift and go to state 178

state 154

    (19) Instruction -> ID ADD BILL OBRACE ID COMMA . DESCRIP CBRACE

    DESCRIP         shift and go to state 179


state 155

    (17) Instruction -> ID ADD BILL OBRACE NUMBER COMMA . DESCRIP CBRACE

    DESCRIP         shift and go to state 180


state 156

    (18) Instruction -> ID ADD BILL OBRACE operation COMMA . DESCRIP CBRACE

    DESCRIP         shift and go to state 181


state 157

    (79) bus -> NAME COMMA collection . COMMA collection

    COMMA           shift and go to state 182


state 158

    (80) bus -> NAME COMMA ID . COMMA ID

    COMMA           shift and go to state 183


state 159

    (81) emp -> NAME COMMA SALARY . DPOINT NUMBER
    (82) emp -> NAME COMMA SALARY . DPOINT ID
    (83) emp -> NAME COMMA SALARY . DPOINT operation

    DPOINT          shift and go to state 184


state 160

    (84) prod -> NAME COMMA AMOUNT . DPOINT NUMBER
    (86) prod -> NAME COMMA AMOUNT . DPOINT ID
    (87) prod -> NAME COMMA AMOUNT . DPOINT operation

    DPOINT          shift and go to state 185


state 161

    (58) Assignable -> GET NAME FROM ID .

    END             reduce using rule 58 (Assignable -> GET NAME FROM ID .)
    COMMA           reduce using rule 58 (Assignable -> GET NAME FROM ID .)
    CPAREN          reduce using rule 58 (Assignable -> GET NAME FROM ID .)


state 162

    (66) Assignable -> GET STAFF FROM ID .

    END             reduce using rule 66 (Assignable -> GET STAFF FROM ID .)
    COMMA           reduce using rule 66 (Assignable -> GET STAFF FROM ID .)
    CPAREN          reduce using rule 66 (Assignable -> GET STAFF FROM ID .)


state 163

    (67) Assignable -> GET CATALOG FROM ID .

    END             reduce using rule 67 (Assignable -> GET CATALOG FROM ID .)
    COMMA           reduce using rule 67 (Assignable -> GET CATALOG FROM ID .)
    CPAREN          reduce using rule 67 (Assignable -> GET CATALOG FROM ID .)


state 164

    (68) Assignable -> GET AMOUNT FROM ID .

    END             reduce using rule 68 (Assignable -> GET AMOUNT FROM ID .)
    COMMA           reduce using rule 68 (Assignable -> GET AMOUNT FROM ID .)
    CPAREN          reduce using rule 68 (Assignable -> GET AMOUNT FROM ID .)


state 165

    (74) collection_body -> subType COMMA collection_body .

    CBR             reduce using rule 74 (collection_body -> subType COMMA collection_body .)


state 166

    (77) collection_body -> ID COMMA collection_body .

    CBR             reduce using rule 77 (collection_body -> ID COMMA collection_body .)


state 167

    (29) Params -> TYPE ID . COMMA Params
    (30) Params -> TYPE ID .

    COMMA           shift and go to state 186
    CPAREN          reduce using rule 30 (Params -> TYPE ID .)


state 168

    (27) Instruction -> DEF TYPE ID OPAREN Params CPAREN . OBRACE ListInst CBRACE

    OBRACE          shift and go to state 187


state 169

    (28) Instruction -> DEF VOID ID OPAREN Params CPAREN . OBRACE ListInst CBRACE

    OBRACE          shift and go to state 188


state 170

    (32) loop_statements -> FOREACH ID IN ID OBRACE ListInst . CBRACE

    CBRACE          shift and go to state 189


state 171

    (33) loop_statements -> WHILE OPAREN condition CPAREN OBRACE ListInst . CBRACE

    CBRACE          shift and go to state 190


state 172

    (34) IfStatement -> IF OPAREN condition CPAREN OBRACE ListInst . CBRACE

    CBRACE          shift and go to state 191


state 173

    (11) Instruction -> ID ACTION SALE ID PRICE DPOINT ID . AMOUNT DPOINT ID
    (53) operation -> ID .

  ! shift/reduce conflict for AMOUNT resolved as shift
    AMOUNT          shift and go to state 192
    PLUS            reduce using rule 53 (operation -> ID .)
    MINUS           reduce using rule 53 (operation -> ID .)
    DIV             reduce using rule 53 (operation -> ID .)
    MULT            reduce using rule 53 (operation -> ID .)

  ! AMOUNT          [ reduce using rule 53 (operation -> ID .) ]


state 174

    (10) Instruction -> ID ACTION SALE ID PRICE DPOINT NUMBER . AMOUNT DPOINT NUMBER
    (54) operation -> NUMBER .

  ! shift/reduce conflict for AMOUNT resolved as shift
    AMOUNT          shift and go to state 193
    PLUS            reduce using rule 54 (operation -> NUMBER .)
    MINUS           reduce using rule 54 (operation -> NUMBER .)
    DIV             reduce using rule 54 (operation -> NUMBER .)
    MULT            reduce using rule 54 (operation -> NUMBER .)

  ! AMOUNT          [ reduce using rule 54 (operation -> NUMBER .) ]


state 175

    (12) Instruction -> ID ACTION SALE ID PRICE DPOINT operation . AMOUNT DPOINT operation
    (49) operation -> operation . PLUS operation
    (50) operation -> operation . MINUS operation
    (51) operation -> operation . DIV operation
    (52) operation -> operation . MULT operation

    AMOUNT          shift and go to state 194
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    DIV             shift and go to state 86
    MULT            shift and go to state 87


state 176

    (14) Instruction -> ID ACTION INVESTS ID COST DPOINT ID . AMOUNT DPOINT ID
    (53) operation -> ID .

  ! shift/reduce conflict for AMOUNT resolved as shift
    AMOUNT          shift and go to state 195
    PLUS            reduce using rule 53 (operation -> ID .)
    MINUS           reduce using rule 53 (operation -> ID .)
    DIV             reduce using rule 53 (operation -> ID .)
    MULT            reduce using rule 53 (operation -> ID .)

  ! AMOUNT          [ reduce using rule 53 (operation -> ID .) ]


state 177

    (13) Instruction -> ID ACTION INVESTS ID COST DPOINT NUMBER . AMOUNT DPOINT NUMBER
    (54) operation -> NUMBER .

  ! shift/reduce conflict for AMOUNT resolved as shift
    AMOUNT          shift and go to state 196
    PLUS            reduce using rule 54 (operation -> NUMBER .)
    MINUS           reduce using rule 54 (operation -> NUMBER .)
    DIV             reduce using rule 54 (operation -> NUMBER .)
    MULT            reduce using rule 54 (operation -> NUMBER .)

  ! AMOUNT          [ reduce using rule 54 (operation -> NUMBER .) ]


state 178

    (15) Instruction -> ID ACTION INVESTS ID COST DPOINT operation . AMOUNT DPOINT operation
    (49) operation -> operation . PLUS operation
    (50) operation -> operation . MINUS operation
    (51) operation -> operation . DIV operation
    (52) operation -> operation . MULT operation

    AMOUNT          shift and go to state 197
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    DIV             shift and go to state 86
    MULT            shift and go to state 87


state 179

    (19) Instruction -> ID ADD BILL OBRACE ID COMMA DESCRIP . CBRACE

    CBRACE          shift and go to state 198


state 180

    (17) Instruction -> ID ADD BILL OBRACE NUMBER COMMA DESCRIP . CBRACE

    CBRACE          shift and go to state 199


state 181

    (18) Instruction -> ID ADD BILL OBRACE operation COMMA DESCRIP . CBRACE

    CBRACE          shift and go to state 200


state 182

    (79) bus -> NAME COMMA collection COMMA . collection
    (73) collection -> . OBR collection_body CBR

    OBR             shift and go to state 54

    collection                     shift and go to state 201

state 183

    (80) bus -> NAME COMMA ID COMMA . ID

    ID              shift and go to state 202


state 184

    (81) emp -> NAME COMMA SALARY DPOINT . NUMBER
    (82) emp -> NAME COMMA SALARY DPOINT . ID
    (83) emp -> NAME COMMA SALARY DPOINT . operation
    (49) operation -> . operation PLUS operation
    (50) operation -> . operation MINUS operation
    (51) operation -> . operation DIV operation
    (52) operation -> . operation MULT operation
    (53) operation -> . ID
    (54) operation -> . NUMBER
    (55) operation -> . OPAREN operation CPAREN

    NUMBER          shift and go to state 203
    ID              shift and go to state 204
    OPAREN          shift and go to state 56

    operation                      shift and go to state 205

state 185

    (84) prod -> NAME COMMA AMOUNT DPOINT . NUMBER
    (86) prod -> NAME COMMA AMOUNT DPOINT . ID
    (87) prod -> NAME COMMA AMOUNT DPOINT . operation
    (49) operation -> . operation PLUS operation
    (50) operation -> . operation MINUS operation
    (51) operation -> . operation DIV operation
    (52) operation -> . operation MULT operation
    (53) operation -> . ID
    (54) operation -> . NUMBER
    (55) operation -> . OPAREN operation CPAREN

    NUMBER          shift and go to state 206
    ID              shift and go to state 207
    OPAREN          shift and go to state 56

    operation                      shift and go to state 208

state 186

    (29) Params -> TYPE ID COMMA . Params
    (29) Params -> . TYPE ID COMMA Params
    (30) Params -> . TYPE ID
    (31) Params -> . empty
    (88) empty -> .

    TYPE            shift and go to state 136
    CPAREN          reduce using rule 88 (empty -> .)

    Params                         shift and go to state 209
    empty                          shift and go to state 138

state 187

    (27) Instruction -> DEF TYPE ID OPAREN Params CPAREN OBRACE . ListInst CBRACE
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . ID GET METRICS DATE
    (7) Instruction -> . loop_statements
    (8) Instruction -> . IfStatement
    (9) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (10) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (11) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (12) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (13) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (14) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (15) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (16) Instruction -> . ID ADD ID
    (17) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (18) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (20) Instruction -> . ID ADD subType
    (21) Instruction -> . ID DEL NAME
    (22) Instruction -> . ID DEL ID
    (23) Instruction -> . ID DISMISS NAME
    (24) Instruction -> . ID DISMISS ID
    (25) Instruction -> . PRINT DPOINT ID
    (26) Instruction -> . funct_call
    (27) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (28) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (46) instance -> . TYPE ID
    (47) instance -> . TYPE ID ASSIGN Assignable
    (48) instance -> . ID ASSIGN Assignable
    (32) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (33) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (34) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (62) funct_call -> . ID OPAREN Argument CPAREN
    (65) funct_call -> . empty
    (88) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 9
    DEF             shift and go to state 11
    TYPE            shift and go to state 12
    FOREACH         shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    END             reduce using rule 88 (empty -> .)

    ListInst                       shift and go to state 210
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    IfStatement                    shift and go to state 8
    funct_call                     shift and go to state 10
    empty                          shift and go to state 16

state 188

    (28) Instruction -> DEF VOID ID OPAREN Params CPAREN OBRACE . ListInst CBRACE
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . ID GET METRICS DATE
    (7) Instruction -> . loop_statements
    (8) Instruction -> . IfStatement
    (9) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (10) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (11) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (12) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (13) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (14) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (15) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (16) Instruction -> . ID ADD ID
    (17) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (18) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (20) Instruction -> . ID ADD subType
    (21) Instruction -> . ID DEL NAME
    (22) Instruction -> . ID DEL ID
    (23) Instruction -> . ID DISMISS NAME
    (24) Instruction -> . ID DISMISS ID
    (25) Instruction -> . PRINT DPOINT ID
    (26) Instruction -> . funct_call
    (27) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (28) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (46) instance -> . TYPE ID
    (47) instance -> . TYPE ID ASSIGN Assignable
    (48) instance -> . ID ASSIGN Assignable
    (32) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (33) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (34) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (62) funct_call -> . ID OPAREN Argument CPAREN
    (65) funct_call -> . empty
    (88) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 9
    DEF             shift and go to state 11
    TYPE            shift and go to state 12
    FOREACH         shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    END             reduce using rule 88 (empty -> .)

    ListInst                       shift and go to state 211
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    IfStatement                    shift and go to state 8
    funct_call                     shift and go to state 10
    empty                          shift and go to state 16

state 189

    (32) loop_statements -> FOREACH ID IN ID OBRACE ListInst CBRACE .

    END             reduce using rule 32 (loop_statements -> FOREACH ID IN ID OBRACE ListInst CBRACE .)


state 190

    (33) loop_statements -> WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE .

    END             reduce using rule 33 (loop_statements -> WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE .)


state 191

    (34) IfStatement -> IF OPAREN condition CPAREN OBRACE ListInst CBRACE .

    ELSE            reduce using rule 34 (IfStatement -> IF OPAREN condition CPAREN OBRACE ListInst CBRACE .)
    END             reduce using rule 34 (IfStatement -> IF OPAREN condition CPAREN OBRACE ListInst CBRACE .)


state 192

    (11) Instruction -> ID ACTION SALE ID PRICE DPOINT ID AMOUNT . DPOINT ID

    DPOINT          shift and go to state 212


state 193

    (10) Instruction -> ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT . DPOINT NUMBER

    DPOINT          shift and go to state 213


state 194

    (12) Instruction -> ID ACTION SALE ID PRICE DPOINT operation AMOUNT . DPOINT operation

    DPOINT          shift and go to state 214


state 195

    (14) Instruction -> ID ACTION INVESTS ID COST DPOINT ID AMOUNT . DPOINT ID

    DPOINT          shift and go to state 215


state 196

    (13) Instruction -> ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT . DPOINT NUMBER

    DPOINT          shift and go to state 216


state 197

    (15) Instruction -> ID ACTION INVESTS ID COST DPOINT operation AMOUNT . DPOINT operation

    DPOINT          shift and go to state 217


state 198

    (19) Instruction -> ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE .

    END             reduce using rule 19 (Instruction -> ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE .)


state 199

    (17) Instruction -> ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE .

    END             reduce using rule 17 (Instruction -> ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE .)


state 200

    (18) Instruction -> ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE .

    END             reduce using rule 18 (Instruction -> ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE .)


state 201

    (79) bus -> NAME COMMA collection COMMA collection .

    CBRACE          reduce using rule 79 (bus -> NAME COMMA collection COMMA collection .)


state 202

    (80) bus -> NAME COMMA ID COMMA ID .

    CBRACE          reduce using rule 80 (bus -> NAME COMMA ID COMMA ID .)


state 203

    (81) emp -> NAME COMMA SALARY DPOINT NUMBER .
    (54) operation -> NUMBER .

  ! reduce/reduce conflict for CBRACE resolved using rule 54 (operation -> NUMBER .)
    PLUS            reduce using rule 54 (operation -> NUMBER .)
    MINUS           reduce using rule 54 (operation -> NUMBER .)
    DIV             reduce using rule 54 (operation -> NUMBER .)
    MULT            reduce using rule 54 (operation -> NUMBER .)
    CBRACE          reduce using rule 54 (operation -> NUMBER .)

  ! CBRACE          [ reduce using rule 81 (emp -> NAME COMMA SALARY DPOINT NUMBER .) ]


state 204

    (82) emp -> NAME COMMA SALARY DPOINT ID .
    (53) operation -> ID .

  ! reduce/reduce conflict for CBRACE resolved using rule 53 (operation -> ID .)
    PLUS            reduce using rule 53 (operation -> ID .)
    MINUS           reduce using rule 53 (operation -> ID .)
    DIV             reduce using rule 53 (operation -> ID .)
    MULT            reduce using rule 53 (operation -> ID .)
    CBRACE          reduce using rule 53 (operation -> ID .)

  ! CBRACE          [ reduce using rule 82 (emp -> NAME COMMA SALARY DPOINT ID .) ]


state 205

    (83) emp -> NAME COMMA SALARY DPOINT operation .
    (49) operation -> operation . PLUS operation
    (50) operation -> operation . MINUS operation
    (51) operation -> operation . DIV operation
    (52) operation -> operation . MULT operation

    CBRACE          reduce using rule 83 (emp -> NAME COMMA SALARY DPOINT operation .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    DIV             shift and go to state 86
    MULT            shift and go to state 87


state 206

    (84) prod -> NAME COMMA AMOUNT DPOINT NUMBER .
    (54) operation -> NUMBER .

  ! reduce/reduce conflict for CBRACE resolved using rule 54 (operation -> NUMBER .)
    PLUS            reduce using rule 54 (operation -> NUMBER .)
    MINUS           reduce using rule 54 (operation -> NUMBER .)
    DIV             reduce using rule 54 (operation -> NUMBER .)
    MULT            reduce using rule 54 (operation -> NUMBER .)
    CBRACE          reduce using rule 54 (operation -> NUMBER .)

  ! CBRACE          [ reduce using rule 84 (prod -> NAME COMMA AMOUNT DPOINT NUMBER .) ]


state 207

    (86) prod -> NAME COMMA AMOUNT DPOINT ID .
    (53) operation -> ID .

  ! reduce/reduce conflict for CBRACE resolved using rule 53 (operation -> ID .)
    PLUS            reduce using rule 53 (operation -> ID .)
    MINUS           reduce using rule 53 (operation -> ID .)
    DIV             reduce using rule 53 (operation -> ID .)
    MULT            reduce using rule 53 (operation -> ID .)
    CBRACE          reduce using rule 53 (operation -> ID .)

  ! CBRACE          [ reduce using rule 86 (prod -> NAME COMMA AMOUNT DPOINT ID .) ]


state 208

    (87) prod -> NAME COMMA AMOUNT DPOINT operation .
    (49) operation -> operation . PLUS operation
    (50) operation -> operation . MINUS operation
    (51) operation -> operation . DIV operation
    (52) operation -> operation . MULT operation

    CBRACE          reduce using rule 87 (prod -> NAME COMMA AMOUNT DPOINT operation .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    DIV             shift and go to state 86
    MULT            shift and go to state 87


state 209

    (29) Params -> TYPE ID COMMA Params .

    CPAREN          reduce using rule 29 (Params -> TYPE ID COMMA Params .)


state 210

    (27) Instruction -> DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst . CBRACE

    CBRACE          shift and go to state 218


state 211

    (28) Instruction -> DEF VOID ID OPAREN Params CPAREN OBRACE ListInst . CBRACE

    CBRACE          shift and go to state 219


state 212

    (11) Instruction -> ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT . ID

    ID              shift and go to state 220


state 213

    (10) Instruction -> ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT . NUMBER

    NUMBER          shift and go to state 221


state 214

    (12) Instruction -> ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT . operation
    (49) operation -> . operation PLUS operation
    (50) operation -> . operation MINUS operation
    (51) operation -> . operation DIV operation
    (52) operation -> . operation MULT operation
    (53) operation -> . ID
    (54) operation -> . NUMBER
    (55) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 93
    NUMBER          shift and go to state 55
    OPAREN          shift and go to state 56

    operation                      shift and go to state 222

state 215

    (14) Instruction -> ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT . ID

    ID              shift and go to state 223


state 216

    (13) Instruction -> ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT . NUMBER

    NUMBER          shift and go to state 224


state 217

    (15) Instruction -> ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT . operation
    (49) operation -> . operation PLUS operation
    (50) operation -> . operation MINUS operation
    (51) operation -> . operation DIV operation
    (52) operation -> . operation MULT operation
    (53) operation -> . ID
    (54) operation -> . NUMBER
    (55) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 93
    NUMBER          shift and go to state 55
    OPAREN          shift and go to state 56

    operation                      shift and go to state 225

state 218

    (27) Instruction -> DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE .

    END             reduce using rule 27 (Instruction -> DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE .)


state 219

    (28) Instruction -> DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE .

    END             reduce using rule 28 (Instruction -> DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE .)


state 220

    (11) Instruction -> ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID .

    END             reduce using rule 11 (Instruction -> ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID .)


state 221

    (10) Instruction -> ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER .

    END             reduce using rule 10 (Instruction -> ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER .)


state 222

    (12) Instruction -> ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation .
    (49) operation -> operation . PLUS operation
    (50) operation -> operation . MINUS operation
    (51) operation -> operation . DIV operation
    (52) operation -> operation . MULT operation

    END             reduce using rule 12 (Instruction -> ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    DIV             shift and go to state 86
    MULT            shift and go to state 87


state 223

    (14) Instruction -> ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID .

    END             reduce using rule 14 (Instruction -> ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID .)


state 224

    (13) Instruction -> ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER .

    END             reduce using rule 13 (Instruction -> ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER .)


state 225

    (15) Instruction -> ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation .
    (49) operation -> operation . PLUS operation
    (50) operation -> operation . MINUS operation
    (51) operation -> operation . DIV operation
    (52) operation -> operation . MULT operation

    END             reduce using rule 15 (Instruction -> ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    DIV             shift and go to state 86
    MULT            shift and go to state 87

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 105 resolved as shift
WARNING: shift/reduce conflict for OR in state 105 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 115 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 116 resolved as shift
WARNING: shift/reduce conflict for AND in state 143 resolved as shift
WARNING: shift/reduce conflict for OR in state 143 resolved as shift
WARNING: shift/reduce conflict for AND in state 144 resolved as shift
WARNING: shift/reduce conflict for OR in state 144 resolved as shift
WARNING: shift/reduce conflict for AMOUNT in state 173 resolved as shift
WARNING: shift/reduce conflict for AMOUNT in state 174 resolved as shift
WARNING: shift/reduce conflict for AMOUNT in state 176 resolved as shift
WARNING: shift/reduce conflict for AMOUNT in state 177 resolved as shift
WARNING: reduce/reduce conflict in state 46 resolved using rule (operation -> ID)
WARNING: rejected rule (Assignable -> ID) in state 46
WARNING: reduce/reduce conflict in state 203 resolved using rule (operation -> NUMBER)
WARNING: rejected rule (emp -> NAME COMMA SALARY DPOINT NUMBER) in state 203
WARNING: reduce/reduce conflict in state 204 resolved using rule (operation -> ID)
WARNING: rejected rule (emp -> NAME COMMA SALARY DPOINT ID) in state 204
WARNING: reduce/reduce conflict in state 206 resolved using rule (operation -> NUMBER)
WARNING: rejected rule (prod -> NAME COMMA AMOUNT DPOINT NUMBER) in state 206
WARNING: reduce/reduce conflict in state 207 resolved using rule (operation -> ID)
WARNING: rejected rule (prod -> NAME COMMA AMOUNT DPOINT ID) in state 207
WARNING: Rule (Assignable -> ID) is never reduced
WARNING: Rule (emp -> NAME COMMA SALARY DPOINT NUMBER) is never reduced
WARNING: Rule (emp -> NAME COMMA SALARY DPOINT ID) is never reduced
WARNING: Rule (prod -> NAME COMMA AMOUNT DPOINT NUMBER) is never reduced
WARNING: Rule (prod -> NAME COMMA AMOUNT DPOINT ID) is never reduced
