Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    POINT

Grammar

Rule 0     S' -> Program
Rule 1     Program -> ListInst
Rule 2     ListInst -> Instruction END ListInst
Rule 3     ListInst -> Instruction END
Rule 4     Instruction -> instance
Rule 5     Instruction -> SAVE ID
Rule 6     Instruction -> loop_statements
Rule 7     Instruction -> IfStatement
Rule 8     Instruction -> IfStatement ELSE OBRACE ListInst CBRACE
Rule 9     Instruction -> ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
Rule 10    Instruction -> ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
Rule 11    Instruction -> ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
Rule 12    Instruction -> ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
Rule 13    Instruction -> ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
Rule 14    Instruction -> ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
Rule 15    Instruction -> ID ADD ID
Rule 16    Instruction -> ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
Rule 17    Instruction -> ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE
Rule 18    Instruction -> ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
Rule 19    Instruction -> ID ADD BILL OBRACE operation COMMA NAME CBRACE
Rule 20    Instruction -> ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
Rule 21    Instruction -> ID ADD BILL OBRACE ID COMMA NAME CBRACE
Rule 22    Instruction -> ID ADD subType
Rule 23    Instruction -> ID DEL NAME
Rule 24    Instruction -> ID DEL ID
Rule 25    Instruction -> ID DISMISS NAME
Rule 26    Instruction -> ID DISMISS ID
Rule 27    Instruction -> PRINT DPOINT ID
Rule 28    Instruction -> funct_call
Rule 29    Instruction -> DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
Rule 30    Instruction -> DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
Rule 31    Params -> TYPE ID COMMA Params
Rule 32    Params -> TYPE ID
Rule 33    Params -> empty
Rule 34    loop_statements -> FOREACH ID IN ID OBRACE ListInst CBRACE
Rule 35    loop_statements -> WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
Rule 36    IfStatement -> IF OPAREN condition CPAREN OBRACE ListInst CBRACE
Rule 37    condition -> bool_expression
Rule 38    bool_expression -> NOT bool_expression
Rule 39    bool_expression -> bool_expression AND bool_expression
Rule 40    bool_expression -> bool_expression OR bool_expression
Rule 41    bool_expression -> ID EQUAL ID
Rule 42    bool_expression -> ID LEQ ID
Rule 43    bool_expression -> ID GEQ ID
Rule 44    bool_expression -> ID GREATER ID
Rule 45    bool_expression -> ID LESS ID
Rule 46    bool_expression -> OPAREN bool_expression CPAREN
Rule 47    bool_expression -> ID IN ID
Rule 48    instance -> TYPE ID
Rule 49    instance -> TYPE ID ASSIGN Assignable
Rule 50    instance -> ID ASSIGN Assignable
Rule 51    operation -> operation PLUS operation
Rule 52    operation -> operation MINUS operation
Rule 53    operation -> operation DIV operation
Rule 54    operation -> operation MULT operation
Rule 55    operation -> ID
Rule 56    operation -> NUMBER
Rule 57    operation -> OPAREN operation CPAREN
Rule 58    Assignable -> subType
Rule 59    Assignable -> collection
Rule 60    Assignable -> GET NAME FROM ID
Rule 61    Assignable -> ID GET METRICS DATE
Rule 62    Assignable -> LOAD NAME
Rule 63    Assignable -> operation
Rule 64    Assignable -> funct_call
Rule 65    funct_call -> ID OPAREN Argument CPAREN
Rule 66    Argument -> Assignable COMMA Argument
Rule 67    Argument -> Assignable
Rule 68    funct_call -> empty
Rule 69    Assignable -> GET STAFF FROM ID
Rule 70    Assignable -> GET CATALOG FROM ID
Rule 71    Assignable -> GET AMOUNT FROM ID
Rule 72    Assignable -> ID
Rule 73    subType -> OBRACE bus CBRACE
Rule 74    subType -> OBRACE emp CBRACE
Rule 75    subType -> OBRACE prod CBRACE
Rule 76    collection -> OBR collection_body CBR
Rule 77    collection_body -> subType COMMA collection_body
Rule 78    collection_body -> subType
Rule 79    collection_body -> empty
Rule 80    collection_body -> ID COMMA collection_body
Rule 81    collection_body -> ID
Rule 82    bus -> NAME COMMA collection COMMA collection
Rule 83    bus -> NAME COMMA ID COMMA ID
Rule 84    emp -> NAME COMMA SALARY DPOINT NUMBER
Rule 85    emp -> NAME COMMA SALARY DPOINT ID
Rule 86    emp -> NAME COMMA SALARY DPOINT operation
Rule 87    prod -> NAME COMMA AMOUNT DPOINT NUMBER
Rule 88    prod -> NAME
Rule 89    prod -> NAME COMMA AMOUNT DPOINT ID
Rule 90    prod -> NAME COMMA AMOUNT DPOINT operation
Rule 91    empty -> <empty>

Terminals, with rules where they appear

ACTION               : 9 10 11 12 13 14
ADD                  : 15 16 17 18 19 20 21 22
AMOUNT               : 9 10 11 12 13 14 71 87 89 90
AND                  : 39
ASSIGN               : 49 50
BILL                 : 16 17 18 19 20 21
CATALOG              : 70
CBR                  : 76
CBRACE               : 8 16 17 18 19 20 21 29 30 34 35 36 73 74 75
COMMA                : 16 17 18 19 20 21 31 66 77 80 82 82 83 83 84 85 86 87 89 90
COST                 : 12 13 14
CPAREN               : 29 30 35 36 46 57 65
DATE                 : 61
DEF                  : 29 30
DEL                  : 23 24
DESCRIP              : 16 18 20
DISMISS              : 25 26
DIV                  : 53
DPOINT               : 9 9 10 10 11 11 12 12 13 13 14 14 27 84 85 86 87 89 90
ELSE                 : 8
END                  : 2 3
EQUAL                : 41
FOREACH              : 34
FROM                 : 60 69 70 71
GEQ                  : 43
GET                  : 60 61 69 70 71
GREATER              : 44
ID                   : 5 9 9 10 10 10 10 11 11 12 12 13 13 13 13 14 14 15 15 16 17 18 19 20 20 21 21 22 23 24 24 25 26 26 27 29 30 31 32 34 34 41 41 42 42 43 43 44 44 45 45 47 47 48 49 50 55 60 61 65 69 70 71 72 80 81 83 83 85 89
IF                   : 36
IN                   : 34 47
INVESTS              : 12 13 14
LEQ                  : 42
LESS                 : 45
LOAD                 : 62
METRICS              : 61
MINUS                : 52
MULT                 : 54
NAME                 : 17 19 21 23 25 60 62 82 83 84 85 86 87 88 89 90
NOT                  : 38
NUMBER               : 9 9 12 12 16 17 56 84 87
OBR                  : 76
OBRACE               : 8 16 17 18 19 20 21 29 30 34 35 36 73 74 75
OPAREN               : 29 30 35 36 46 57 65
OR                   : 40
PLUS                 : 51
POINT                : 
PRICE                : 9 10 11
PRINT                : 27
SALARY               : 84 85 86
SALE                 : 9 10 11
SAVE                 : 5
STAFF                : 69
TYPE                 : 29 31 32 48 49
VOID                 : 30
WHILE                : 35
error                : 

Nonterminals, with rules where they appear

Argument             : 65 66
Assignable           : 49 50 66 67
IfStatement          : 7 8
Instruction          : 2 3
ListInst             : 1 2 8 29 30 34 35 36
Params               : 29 30 31
Program              : 0
bool_expression      : 37 38 39 39 40 40 46
bus                  : 73
collection           : 59 82 82
collection_body      : 76 77 80
condition            : 35 36
emp                  : 74
empty                : 33 68 79
funct_call           : 28 64
instance             : 4
loop_statements      : 6
operation            : 11 11 14 14 18 19 51 51 52 52 53 53 54 54 57 63 86 90
prod                 : 75
subType              : 22 58 77 78

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . ListInst
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . loop_statements
    (7) Instruction -> . IfStatement
    (8) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (9) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (10) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (11) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (12) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (15) Instruction -> . ID ADD ID
    (16) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (17) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE
    (18) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> . ID ADD BILL OBRACE operation COMMA NAME CBRACE
    (20) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (21) Instruction -> . ID ADD BILL OBRACE ID COMMA NAME CBRACE
    (22) Instruction -> . ID ADD subType
    (23) Instruction -> . ID DEL NAME
    (24) Instruction -> . ID DEL ID
    (25) Instruction -> . ID DISMISS NAME
    (26) Instruction -> . ID DISMISS ID
    (27) Instruction -> . PRINT DPOINT ID
    (28) Instruction -> . funct_call
    (29) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (30) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (48) instance -> . TYPE ID
    (49) instance -> . TYPE ID ASSIGN Assignable
    (50) instance -> . ID ASSIGN Assignable
    (34) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (35) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (36) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (65) funct_call -> . ID OPAREN Argument CPAREN
    (68) funct_call -> . empty
    (91) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 9
    DEF             shift and go to state 11
    TYPE            shift and go to state 12
    FOREACH         shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    END             reduce using rule 91 (empty -> .)

    Program                        shift and go to state 1
    ListInst                       shift and go to state 2
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    IfStatement                    shift and go to state 8
    funct_call                     shift and go to state 10
    empty                          shift and go to state 16

state 1

    (0) S' -> Program .



state 2

    (1) Program -> ListInst .

    $end            reduce using rule 1 (Program -> ListInst .)


state 3

    (2) ListInst -> Instruction . END ListInst
    (3) ListInst -> Instruction . END

    END             shift and go to state 17


state 4

    (4) Instruction -> instance .

    END             reduce using rule 4 (Instruction -> instance .)


state 5

    (5) Instruction -> SAVE . ID

    ID              shift and go to state 18


state 6

    (9) Instruction -> ID . ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (10) Instruction -> ID . ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (11) Instruction -> ID . ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (12) Instruction -> ID . ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> ID . ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> ID . ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (15) Instruction -> ID . ADD ID
    (16) Instruction -> ID . ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (17) Instruction -> ID . ADD BILL OBRACE NUMBER COMMA NAME CBRACE
    (18) Instruction -> ID . ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> ID . ADD BILL OBRACE operation COMMA NAME CBRACE
    (20) Instruction -> ID . ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (21) Instruction -> ID . ADD BILL OBRACE ID COMMA NAME CBRACE
    (22) Instruction -> ID . ADD subType
    (23) Instruction -> ID . DEL NAME
    (24) Instruction -> ID . DEL ID
    (25) Instruction -> ID . DISMISS NAME
    (26) Instruction -> ID . DISMISS ID
    (50) instance -> ID . ASSIGN Assignable
    (65) funct_call -> ID . OPAREN Argument CPAREN

    ACTION          shift and go to state 19
    ADD             shift and go to state 20
    DEL             shift and go to state 21
    DISMISS         shift and go to state 22
    ASSIGN          shift and go to state 23
    OPAREN          shift and go to state 24


state 7

    (6) Instruction -> loop_statements .

    END             reduce using rule 6 (Instruction -> loop_statements .)


state 8

    (7) Instruction -> IfStatement .
    (8) Instruction -> IfStatement . ELSE OBRACE ListInst CBRACE

    END             reduce using rule 7 (Instruction -> IfStatement .)
    ELSE            shift and go to state 25


state 9

    (27) Instruction -> PRINT . DPOINT ID

    DPOINT          shift and go to state 26


state 10

    (28) Instruction -> funct_call .

    END             reduce using rule 28 (Instruction -> funct_call .)


state 11

    (29) Instruction -> DEF . TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (30) Instruction -> DEF . VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE

    TYPE            shift and go to state 27
    VOID            shift and go to state 28


state 12

    (48) instance -> TYPE . ID
    (49) instance -> TYPE . ID ASSIGN Assignable

    ID              shift and go to state 29


state 13

    (34) loop_statements -> FOREACH . ID IN ID OBRACE ListInst CBRACE

    ID              shift and go to state 30


state 14

    (35) loop_statements -> WHILE . OPAREN condition CPAREN OBRACE ListInst CBRACE

    OPAREN          shift and go to state 31


state 15

    (36) IfStatement -> IF . OPAREN condition CPAREN OBRACE ListInst CBRACE

    OPAREN          shift and go to state 32


state 16

    (68) funct_call -> empty .

    END             reduce using rule 68 (funct_call -> empty .)
    COMMA           reduce using rule 68 (funct_call -> empty .)
    CPAREN          reduce using rule 68 (funct_call -> empty .)


state 17

    (2) ListInst -> Instruction END . ListInst
    (3) ListInst -> Instruction END .
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . loop_statements
    (7) Instruction -> . IfStatement
    (8) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (9) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (10) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (11) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (12) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (15) Instruction -> . ID ADD ID
    (16) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (17) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE
    (18) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> . ID ADD BILL OBRACE operation COMMA NAME CBRACE
    (20) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (21) Instruction -> . ID ADD BILL OBRACE ID COMMA NAME CBRACE
    (22) Instruction -> . ID ADD subType
    (23) Instruction -> . ID DEL NAME
    (24) Instruction -> . ID DEL ID
    (25) Instruction -> . ID DISMISS NAME
    (26) Instruction -> . ID DISMISS ID
    (27) Instruction -> . PRINT DPOINT ID
    (28) Instruction -> . funct_call
    (29) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (30) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (48) instance -> . TYPE ID
    (49) instance -> . TYPE ID ASSIGN Assignable
    (50) instance -> . ID ASSIGN Assignable
    (34) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (35) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (36) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (65) funct_call -> . ID OPAREN Argument CPAREN
    (68) funct_call -> . empty
    (91) empty -> .

    $end            reduce using rule 3 (ListInst -> Instruction END .)
    CBRACE          reduce using rule 3 (ListInst -> Instruction END .)
    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 9
    DEF             shift and go to state 11
    TYPE            shift and go to state 12
    FOREACH         shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    END             reduce using rule 91 (empty -> .)

    Instruction                    shift and go to state 3
    ListInst                       shift and go to state 33
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    IfStatement                    shift and go to state 8
    funct_call                     shift and go to state 10
    empty                          shift and go to state 16

state 18

    (5) Instruction -> SAVE ID .

    END             reduce using rule 5 (Instruction -> SAVE ID .)


state 19

    (9) Instruction -> ID ACTION . SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (10) Instruction -> ID ACTION . SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (11) Instruction -> ID ACTION . SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (12) Instruction -> ID ACTION . INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> ID ACTION . INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> ID ACTION . INVESTS ID COST DPOINT operation AMOUNT DPOINT operation

    SALE            shift and go to state 34
    INVESTS         shift and go to state 35


state 20

    (15) Instruction -> ID ADD . ID
    (16) Instruction -> ID ADD . BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (17) Instruction -> ID ADD . BILL OBRACE NUMBER COMMA NAME CBRACE
    (18) Instruction -> ID ADD . BILL OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> ID ADD . BILL OBRACE operation COMMA NAME CBRACE
    (20) Instruction -> ID ADD . BILL OBRACE ID COMMA DESCRIP CBRACE
    (21) Instruction -> ID ADD . BILL OBRACE ID COMMA NAME CBRACE
    (22) Instruction -> ID ADD . subType
    (73) subType -> . OBRACE bus CBRACE
    (74) subType -> . OBRACE emp CBRACE
    (75) subType -> . OBRACE prod CBRACE

    ID              shift and go to state 36
    BILL            shift and go to state 37
    OBRACE          shift and go to state 38

    subType                        shift and go to state 39

state 21

    (23) Instruction -> ID DEL . NAME
    (24) Instruction -> ID DEL . ID

    NAME            shift and go to state 41
    ID              shift and go to state 40


state 22

    (25) Instruction -> ID DISMISS . NAME
    (26) Instruction -> ID DISMISS . ID

    NAME            shift and go to state 43
    ID              shift and go to state 42


state 23

    (50) instance -> ID ASSIGN . Assignable
    (58) Assignable -> . subType
    (59) Assignable -> . collection
    (60) Assignable -> . GET NAME FROM ID
    (61) Assignable -> . ID GET METRICS DATE
    (62) Assignable -> . LOAD NAME
    (63) Assignable -> . operation
    (64) Assignable -> . funct_call
    (69) Assignable -> . GET STAFF FROM ID
    (70) Assignable -> . GET CATALOG FROM ID
    (71) Assignable -> . GET AMOUNT FROM ID
    (72) Assignable -> . ID
    (73) subType -> . OBRACE bus CBRACE
    (74) subType -> . OBRACE emp CBRACE
    (75) subType -> . OBRACE prod CBRACE
    (76) collection -> . OBR collection_body CBR
    (51) operation -> . operation PLUS operation
    (52) operation -> . operation MINUS operation
    (53) operation -> . operation DIV operation
    (54) operation -> . operation MULT operation
    (55) operation -> . ID
    (56) operation -> . NUMBER
    (57) operation -> . OPAREN operation CPAREN
    (65) funct_call -> . ID OPAREN Argument CPAREN
    (68) funct_call -> . empty
    (91) empty -> .

    GET             shift and go to state 48
    ID              shift and go to state 44
    LOAD            shift and go to state 49
    OBRACE          shift and go to state 38
    OBR             shift and go to state 52
    NUMBER          shift and go to state 53
    OPAREN          shift and go to state 54
    END             reduce using rule 91 (empty -> .)

    Assignable                     shift and go to state 45
    subType                        shift and go to state 46
    collection                     shift and go to state 47
    operation                      shift and go to state 50
    funct_call                     shift and go to state 51
    empty                          shift and go to state 16

state 24

    (65) funct_call -> ID OPAREN . Argument CPAREN
    (66) Argument -> . Assignable COMMA Argument
    (67) Argument -> . Assignable
    (58) Assignable -> . subType
    (59) Assignable -> . collection
    (60) Assignable -> . GET NAME FROM ID
    (61) Assignable -> . ID GET METRICS DATE
    (62) Assignable -> . LOAD NAME
    (63) Assignable -> . operation
    (64) Assignable -> . funct_call
    (69) Assignable -> . GET STAFF FROM ID
    (70) Assignable -> . GET CATALOG FROM ID
    (71) Assignable -> . GET AMOUNT FROM ID
    (72) Assignable -> . ID
    (73) subType -> . OBRACE bus CBRACE
    (74) subType -> . OBRACE emp CBRACE
    (75) subType -> . OBRACE prod CBRACE
    (76) collection -> . OBR collection_body CBR
    (51) operation -> . operation PLUS operation
    (52) operation -> . operation MINUS operation
    (53) operation -> . operation DIV operation
    (54) operation -> . operation MULT operation
    (55) operation -> . ID
    (56) operation -> . NUMBER
    (57) operation -> . OPAREN operation CPAREN
    (65) funct_call -> . ID OPAREN Argument CPAREN
    (68) funct_call -> . empty
    (91) empty -> .

    GET             shift and go to state 48
    ID              shift and go to state 44
    LOAD            shift and go to state 49
    OBRACE          shift and go to state 38
    OBR             shift and go to state 52
    NUMBER          shift and go to state 53
    OPAREN          shift and go to state 54
    COMMA           reduce using rule 91 (empty -> .)
    CPAREN          reduce using rule 91 (empty -> .)

    Argument                       shift and go to state 55
    Assignable                     shift and go to state 56
    subType                        shift and go to state 46
    collection                     shift and go to state 47
    operation                      shift and go to state 50
    funct_call                     shift and go to state 51
    empty                          shift and go to state 16

state 25

    (8) Instruction -> IfStatement ELSE . OBRACE ListInst CBRACE

    OBRACE          shift and go to state 57


state 26

    (27) Instruction -> PRINT DPOINT . ID

    ID              shift and go to state 58


state 27

    (29) Instruction -> DEF TYPE . ID OPAREN Params CPAREN OBRACE ListInst CBRACE

    ID              shift and go to state 59


state 28

    (30) Instruction -> DEF VOID . ID OPAREN Params CPAREN OBRACE ListInst CBRACE

    ID              shift and go to state 60


state 29

    (48) instance -> TYPE ID .
    (49) instance -> TYPE ID . ASSIGN Assignable

    END             reduce using rule 48 (instance -> TYPE ID .)
    ASSIGN          shift and go to state 61


state 30

    (34) loop_statements -> FOREACH ID . IN ID OBRACE ListInst CBRACE

    IN              shift and go to state 62


state 31

    (35) loop_statements -> WHILE OPAREN . condition CPAREN OBRACE ListInst CBRACE
    (37) condition -> . bool_expression
    (38) bool_expression -> . NOT bool_expression
    (39) bool_expression -> . bool_expression AND bool_expression
    (40) bool_expression -> . bool_expression OR bool_expression
    (41) bool_expression -> . ID EQUAL ID
    (42) bool_expression -> . ID LEQ ID
    (43) bool_expression -> . ID GEQ ID
    (44) bool_expression -> . ID GREATER ID
    (45) bool_expression -> . ID LESS ID
    (46) bool_expression -> . OPAREN bool_expression CPAREN
    (47) bool_expression -> . ID IN ID

    NOT             shift and go to state 66
    ID              shift and go to state 67
    OPAREN          shift and go to state 63

    condition                      shift and go to state 64
    bool_expression                shift and go to state 65

state 32

    (36) IfStatement -> IF OPAREN . condition CPAREN OBRACE ListInst CBRACE
    (37) condition -> . bool_expression
    (38) bool_expression -> . NOT bool_expression
    (39) bool_expression -> . bool_expression AND bool_expression
    (40) bool_expression -> . bool_expression OR bool_expression
    (41) bool_expression -> . ID EQUAL ID
    (42) bool_expression -> . ID LEQ ID
    (43) bool_expression -> . ID GEQ ID
    (44) bool_expression -> . ID GREATER ID
    (45) bool_expression -> . ID LESS ID
    (46) bool_expression -> . OPAREN bool_expression CPAREN
    (47) bool_expression -> . ID IN ID

    NOT             shift and go to state 66
    ID              shift and go to state 67
    OPAREN          shift and go to state 63

    condition                      shift and go to state 68
    bool_expression                shift and go to state 65

state 33

    (2) ListInst -> Instruction END ListInst .

    $end            reduce using rule 2 (ListInst -> Instruction END ListInst .)
    CBRACE          reduce using rule 2 (ListInst -> Instruction END ListInst .)


state 34

    (9) Instruction -> ID ACTION SALE . ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (10) Instruction -> ID ACTION SALE . ID PRICE DPOINT ID AMOUNT DPOINT ID
    (11) Instruction -> ID ACTION SALE . ID PRICE DPOINT operation AMOUNT DPOINT operation

    ID              shift and go to state 69


state 35

    (12) Instruction -> ID ACTION INVESTS . ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> ID ACTION INVESTS . ID COST DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> ID ACTION INVESTS . ID COST DPOINT operation AMOUNT DPOINT operation

    ID              shift and go to state 70


state 36

    (15) Instruction -> ID ADD ID .

    END             reduce using rule 15 (Instruction -> ID ADD ID .)


state 37

    (16) Instruction -> ID ADD BILL . OBRACE NUMBER COMMA DESCRIP CBRACE
    (17) Instruction -> ID ADD BILL . OBRACE NUMBER COMMA NAME CBRACE
    (18) Instruction -> ID ADD BILL . OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> ID ADD BILL . OBRACE operation COMMA NAME CBRACE
    (20) Instruction -> ID ADD BILL . OBRACE ID COMMA DESCRIP CBRACE
    (21) Instruction -> ID ADD BILL . OBRACE ID COMMA NAME CBRACE

    OBRACE          shift and go to state 71


state 38

    (73) subType -> OBRACE . bus CBRACE
    (74) subType -> OBRACE . emp CBRACE
    (75) subType -> OBRACE . prod CBRACE
    (82) bus -> . NAME COMMA collection COMMA collection
    (83) bus -> . NAME COMMA ID COMMA ID
    (84) emp -> . NAME COMMA SALARY DPOINT NUMBER
    (85) emp -> . NAME COMMA SALARY DPOINT ID
    (86) emp -> . NAME COMMA SALARY DPOINT operation
    (87) prod -> . NAME COMMA AMOUNT DPOINT NUMBER
    (88) prod -> . NAME
    (89) prod -> . NAME COMMA AMOUNT DPOINT ID
    (90) prod -> . NAME COMMA AMOUNT DPOINT operation

    NAME            shift and go to state 75

    bus                            shift and go to state 72
    emp                            shift and go to state 73
    prod                           shift and go to state 74

state 39

    (22) Instruction -> ID ADD subType .

    END             reduce using rule 22 (Instruction -> ID ADD subType .)


state 40

    (24) Instruction -> ID DEL ID .

    END             reduce using rule 24 (Instruction -> ID DEL ID .)


state 41

    (23) Instruction -> ID DEL NAME .

    END             reduce using rule 23 (Instruction -> ID DEL NAME .)


state 42

    (26) Instruction -> ID DISMISS ID .

    END             reduce using rule 26 (Instruction -> ID DISMISS ID .)


state 43

    (25) Instruction -> ID DISMISS NAME .

    END             reduce using rule 25 (Instruction -> ID DISMISS NAME .)


state 44

    (61) Assignable -> ID . GET METRICS DATE
    (72) Assignable -> ID .
    (55) operation -> ID .
    (65) funct_call -> ID . OPAREN Argument CPAREN

  ! reduce/reduce conflict for END resolved using rule 55 (operation -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 55 (operation -> ID .)
  ! reduce/reduce conflict for CPAREN resolved using rule 55 (operation -> ID .)
    GET             shift and go to state 76
    PLUS            reduce using rule 55 (operation -> ID .)
    MINUS           reduce using rule 55 (operation -> ID .)
    DIV             reduce using rule 55 (operation -> ID .)
    MULT            reduce using rule 55 (operation -> ID .)
    END             reduce using rule 55 (operation -> ID .)
    COMMA           reduce using rule 55 (operation -> ID .)
    CPAREN          reduce using rule 55 (operation -> ID .)
    OPAREN          shift and go to state 24

  ! END             [ reduce using rule 72 (Assignable -> ID .) ]
  ! COMMA           [ reduce using rule 72 (Assignable -> ID .) ]
  ! CPAREN          [ reduce using rule 72 (Assignable -> ID .) ]


state 45

    (50) instance -> ID ASSIGN Assignable .

    END             reduce using rule 50 (instance -> ID ASSIGN Assignable .)


state 46

    (58) Assignable -> subType .

    END             reduce using rule 58 (Assignable -> subType .)
    COMMA           reduce using rule 58 (Assignable -> subType .)
    CPAREN          reduce using rule 58 (Assignable -> subType .)


state 47

    (59) Assignable -> collection .

    END             reduce using rule 59 (Assignable -> collection .)
    COMMA           reduce using rule 59 (Assignable -> collection .)
    CPAREN          reduce using rule 59 (Assignable -> collection .)


state 48

    (60) Assignable -> GET . NAME FROM ID
    (69) Assignable -> GET . STAFF FROM ID
    (70) Assignable -> GET . CATALOG FROM ID
    (71) Assignable -> GET . AMOUNT FROM ID

    NAME            shift and go to state 77
    STAFF           shift and go to state 78
    CATALOG         shift and go to state 79
    AMOUNT          shift and go to state 80


state 49

    (62) Assignable -> LOAD . NAME

    NAME            shift and go to state 81


state 50

    (63) Assignable -> operation .
    (51) operation -> operation . PLUS operation
    (52) operation -> operation . MINUS operation
    (53) operation -> operation . DIV operation
    (54) operation -> operation . MULT operation

    END             reduce using rule 63 (Assignable -> operation .)
    COMMA           reduce using rule 63 (Assignable -> operation .)
    CPAREN          reduce using rule 63 (Assignable -> operation .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    DIV             shift and go to state 84
    MULT            shift and go to state 85


state 51

    (64) Assignable -> funct_call .

    END             reduce using rule 64 (Assignable -> funct_call .)
    COMMA           reduce using rule 64 (Assignable -> funct_call .)
    CPAREN          reduce using rule 64 (Assignable -> funct_call .)


state 52

    (76) collection -> OBR . collection_body CBR
    (77) collection_body -> . subType COMMA collection_body
    (78) collection_body -> . subType
    (79) collection_body -> . empty
    (80) collection_body -> . ID COMMA collection_body
    (81) collection_body -> . ID
    (73) subType -> . OBRACE bus CBRACE
    (74) subType -> . OBRACE emp CBRACE
    (75) subType -> . OBRACE prod CBRACE
    (91) empty -> .

    ID              shift and go to state 89
    OBRACE          shift and go to state 38
    CBR             reduce using rule 91 (empty -> .)

    collection_body                shift and go to state 86
    subType                        shift and go to state 87
    empty                          shift and go to state 88

state 53

    (56) operation -> NUMBER .

    PLUS            reduce using rule 56 (operation -> NUMBER .)
    MINUS           reduce using rule 56 (operation -> NUMBER .)
    DIV             reduce using rule 56 (operation -> NUMBER .)
    MULT            reduce using rule 56 (operation -> NUMBER .)
    END             reduce using rule 56 (operation -> NUMBER .)
    COMMA           reduce using rule 56 (operation -> NUMBER .)
    CPAREN          reduce using rule 56 (operation -> NUMBER .)
    AMOUNT          reduce using rule 56 (operation -> NUMBER .)
    CBRACE          reduce using rule 56 (operation -> NUMBER .)


state 54

    (57) operation -> OPAREN . operation CPAREN
    (51) operation -> . operation PLUS operation
    (52) operation -> . operation MINUS operation
    (53) operation -> . operation DIV operation
    (54) operation -> . operation MULT operation
    (55) operation -> . ID
    (56) operation -> . NUMBER
    (57) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 91
    NUMBER          shift and go to state 53
    OPAREN          shift and go to state 54

    operation                      shift and go to state 90

state 55

    (65) funct_call -> ID OPAREN Argument . CPAREN

    CPAREN          shift and go to state 92


state 56

    (66) Argument -> Assignable . COMMA Argument
    (67) Argument -> Assignable .

    COMMA           shift and go to state 93
    CPAREN          reduce using rule 67 (Argument -> Assignable .)


state 57

    (8) Instruction -> IfStatement ELSE OBRACE . ListInst CBRACE
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . loop_statements
    (7) Instruction -> . IfStatement
    (8) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (9) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (10) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (11) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (12) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (15) Instruction -> . ID ADD ID
    (16) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (17) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE
    (18) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> . ID ADD BILL OBRACE operation COMMA NAME CBRACE
    (20) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (21) Instruction -> . ID ADD BILL OBRACE ID COMMA NAME CBRACE
    (22) Instruction -> . ID ADD subType
    (23) Instruction -> . ID DEL NAME
    (24) Instruction -> . ID DEL ID
    (25) Instruction -> . ID DISMISS NAME
    (26) Instruction -> . ID DISMISS ID
    (27) Instruction -> . PRINT DPOINT ID
    (28) Instruction -> . funct_call
    (29) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (30) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (48) instance -> . TYPE ID
    (49) instance -> . TYPE ID ASSIGN Assignable
    (50) instance -> . ID ASSIGN Assignable
    (34) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (35) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (36) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (65) funct_call -> . ID OPAREN Argument CPAREN
    (68) funct_call -> . empty
    (91) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 9
    DEF             shift and go to state 11
    TYPE            shift and go to state 12
    FOREACH         shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    END             reduce using rule 91 (empty -> .)

    IfStatement                    shift and go to state 8
    ListInst                       shift and go to state 94
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    funct_call                     shift and go to state 10
    empty                          shift and go to state 16

state 58

    (27) Instruction -> PRINT DPOINT ID .

    END             reduce using rule 27 (Instruction -> PRINT DPOINT ID .)


state 59

    (29) Instruction -> DEF TYPE ID . OPAREN Params CPAREN OBRACE ListInst CBRACE

    OPAREN          shift and go to state 95


state 60

    (30) Instruction -> DEF VOID ID . OPAREN Params CPAREN OBRACE ListInst CBRACE

    OPAREN          shift and go to state 96


state 61

    (49) instance -> TYPE ID ASSIGN . Assignable
    (58) Assignable -> . subType
    (59) Assignable -> . collection
    (60) Assignable -> . GET NAME FROM ID
    (61) Assignable -> . ID GET METRICS DATE
    (62) Assignable -> . LOAD NAME
    (63) Assignable -> . operation
    (64) Assignable -> . funct_call
    (69) Assignable -> . GET STAFF FROM ID
    (70) Assignable -> . GET CATALOG FROM ID
    (71) Assignable -> . GET AMOUNT FROM ID
    (72) Assignable -> . ID
    (73) subType -> . OBRACE bus CBRACE
    (74) subType -> . OBRACE emp CBRACE
    (75) subType -> . OBRACE prod CBRACE
    (76) collection -> . OBR collection_body CBR
    (51) operation -> . operation PLUS operation
    (52) operation -> . operation MINUS operation
    (53) operation -> . operation DIV operation
    (54) operation -> . operation MULT operation
    (55) operation -> . ID
    (56) operation -> . NUMBER
    (57) operation -> . OPAREN operation CPAREN
    (65) funct_call -> . ID OPAREN Argument CPAREN
    (68) funct_call -> . empty
    (91) empty -> .

    GET             shift and go to state 48
    ID              shift and go to state 44
    LOAD            shift and go to state 49
    OBRACE          shift and go to state 38
    OBR             shift and go to state 52
    NUMBER          shift and go to state 53
    OPAREN          shift and go to state 54
    END             reduce using rule 91 (empty -> .)

    Assignable                     shift and go to state 97
    subType                        shift and go to state 46
    collection                     shift and go to state 47
    operation                      shift and go to state 50
    funct_call                     shift and go to state 51
    empty                          shift and go to state 16

state 62

    (34) loop_statements -> FOREACH ID IN . ID OBRACE ListInst CBRACE

    ID              shift and go to state 98


state 63

    (46) bool_expression -> OPAREN . bool_expression CPAREN
    (38) bool_expression -> . NOT bool_expression
    (39) bool_expression -> . bool_expression AND bool_expression
    (40) bool_expression -> . bool_expression OR bool_expression
    (41) bool_expression -> . ID EQUAL ID
    (42) bool_expression -> . ID LEQ ID
    (43) bool_expression -> . ID GEQ ID
    (44) bool_expression -> . ID GREATER ID
    (45) bool_expression -> . ID LESS ID
    (46) bool_expression -> . OPAREN bool_expression CPAREN
    (47) bool_expression -> . ID IN ID

    NOT             shift and go to state 66
    ID              shift and go to state 67
    OPAREN          shift and go to state 63

    bool_expression                shift and go to state 99

state 64

    (35) loop_statements -> WHILE OPAREN condition . CPAREN OBRACE ListInst CBRACE

    CPAREN          shift and go to state 100


state 65

    (37) condition -> bool_expression .
    (39) bool_expression -> bool_expression . AND bool_expression
    (40) bool_expression -> bool_expression . OR bool_expression

    CPAREN          reduce using rule 37 (condition -> bool_expression .)
    AND             shift and go to state 101
    OR              shift and go to state 102


state 66

    (38) bool_expression -> NOT . bool_expression
    (38) bool_expression -> . NOT bool_expression
    (39) bool_expression -> . bool_expression AND bool_expression
    (40) bool_expression -> . bool_expression OR bool_expression
    (41) bool_expression -> . ID EQUAL ID
    (42) bool_expression -> . ID LEQ ID
    (43) bool_expression -> . ID GEQ ID
    (44) bool_expression -> . ID GREATER ID
    (45) bool_expression -> . ID LESS ID
    (46) bool_expression -> . OPAREN bool_expression CPAREN
    (47) bool_expression -> . ID IN ID

    NOT             shift and go to state 66
    ID              shift and go to state 67
    OPAREN          shift and go to state 63

    bool_expression                shift and go to state 103

state 67

    (41) bool_expression -> ID . EQUAL ID
    (42) bool_expression -> ID . LEQ ID
    (43) bool_expression -> ID . GEQ ID
    (44) bool_expression -> ID . GREATER ID
    (45) bool_expression -> ID . LESS ID
    (47) bool_expression -> ID . IN ID

    EQUAL           shift and go to state 104
    LEQ             shift and go to state 105
    GEQ             shift and go to state 106
    GREATER         shift and go to state 107
    LESS            shift and go to state 108
    IN              shift and go to state 109


state 68

    (36) IfStatement -> IF OPAREN condition . CPAREN OBRACE ListInst CBRACE

    CPAREN          shift and go to state 110


state 69

    (9) Instruction -> ID ACTION SALE ID . PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (10) Instruction -> ID ACTION SALE ID . PRICE DPOINT ID AMOUNT DPOINT ID
    (11) Instruction -> ID ACTION SALE ID . PRICE DPOINT operation AMOUNT DPOINT operation

    PRICE           shift and go to state 111


state 70

    (12) Instruction -> ID ACTION INVESTS ID . COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> ID ACTION INVESTS ID . COST DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> ID ACTION INVESTS ID . COST DPOINT operation AMOUNT DPOINT operation

    COST            shift and go to state 112


state 71

    (16) Instruction -> ID ADD BILL OBRACE . NUMBER COMMA DESCRIP CBRACE
    (17) Instruction -> ID ADD BILL OBRACE . NUMBER COMMA NAME CBRACE
    (18) Instruction -> ID ADD BILL OBRACE . operation COMMA DESCRIP CBRACE
    (19) Instruction -> ID ADD BILL OBRACE . operation COMMA NAME CBRACE
    (20) Instruction -> ID ADD BILL OBRACE . ID COMMA DESCRIP CBRACE
    (21) Instruction -> ID ADD BILL OBRACE . ID COMMA NAME CBRACE
    (51) operation -> . operation PLUS operation
    (52) operation -> . operation MINUS operation
    (53) operation -> . operation DIV operation
    (54) operation -> . operation MULT operation
    (55) operation -> . ID
    (56) operation -> . NUMBER
    (57) operation -> . OPAREN operation CPAREN

    NUMBER          shift and go to state 114
    ID              shift and go to state 113
    OPAREN          shift and go to state 54

    operation                      shift and go to state 115

state 72

    (73) subType -> OBRACE bus . CBRACE

    CBRACE          shift and go to state 116


state 73

    (74) subType -> OBRACE emp . CBRACE

    CBRACE          shift and go to state 117


state 74

    (75) subType -> OBRACE prod . CBRACE

    CBRACE          shift and go to state 118


state 75

    (82) bus -> NAME . COMMA collection COMMA collection
    (83) bus -> NAME . COMMA ID COMMA ID
    (84) emp -> NAME . COMMA SALARY DPOINT NUMBER
    (85) emp -> NAME . COMMA SALARY DPOINT ID
    (86) emp -> NAME . COMMA SALARY DPOINT operation
    (87) prod -> NAME . COMMA AMOUNT DPOINT NUMBER
    (88) prod -> NAME .
    (89) prod -> NAME . COMMA AMOUNT DPOINT ID
    (90) prod -> NAME . COMMA AMOUNT DPOINT operation

    COMMA           shift and go to state 119
    CBRACE          reduce using rule 88 (prod -> NAME .)


state 76

    (61) Assignable -> ID GET . METRICS DATE

    METRICS         shift and go to state 120


state 77

    (60) Assignable -> GET NAME . FROM ID

    FROM            shift and go to state 121


state 78

    (69) Assignable -> GET STAFF . FROM ID

    FROM            shift and go to state 122


state 79

    (70) Assignable -> GET CATALOG . FROM ID

    FROM            shift and go to state 123


state 80

    (71) Assignable -> GET AMOUNT . FROM ID

    FROM            shift and go to state 124


state 81

    (62) Assignable -> LOAD NAME .

    END             reduce using rule 62 (Assignable -> LOAD NAME .)
    COMMA           reduce using rule 62 (Assignable -> LOAD NAME .)
    CPAREN          reduce using rule 62 (Assignable -> LOAD NAME .)


state 82

    (51) operation -> operation PLUS . operation
    (51) operation -> . operation PLUS operation
    (52) operation -> . operation MINUS operation
    (53) operation -> . operation DIV operation
    (54) operation -> . operation MULT operation
    (55) operation -> . ID
    (56) operation -> . NUMBER
    (57) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 91
    NUMBER          shift and go to state 53
    OPAREN          shift and go to state 54

    operation                      shift and go to state 125

state 83

    (52) operation -> operation MINUS . operation
    (51) operation -> . operation PLUS operation
    (52) operation -> . operation MINUS operation
    (53) operation -> . operation DIV operation
    (54) operation -> . operation MULT operation
    (55) operation -> . ID
    (56) operation -> . NUMBER
    (57) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 91
    NUMBER          shift and go to state 53
    OPAREN          shift and go to state 54

    operation                      shift and go to state 126

state 84

    (53) operation -> operation DIV . operation
    (51) operation -> . operation PLUS operation
    (52) operation -> . operation MINUS operation
    (53) operation -> . operation DIV operation
    (54) operation -> . operation MULT operation
    (55) operation -> . ID
    (56) operation -> . NUMBER
    (57) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 91
    NUMBER          shift and go to state 53
    OPAREN          shift and go to state 54

    operation                      shift and go to state 127

state 85

    (54) operation -> operation MULT . operation
    (51) operation -> . operation PLUS operation
    (52) operation -> . operation MINUS operation
    (53) operation -> . operation DIV operation
    (54) operation -> . operation MULT operation
    (55) operation -> . ID
    (56) operation -> . NUMBER
    (57) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 91
    NUMBER          shift and go to state 53
    OPAREN          shift and go to state 54

    operation                      shift and go to state 128

state 86

    (76) collection -> OBR collection_body . CBR

    CBR             shift and go to state 129


state 87

    (77) collection_body -> subType . COMMA collection_body
    (78) collection_body -> subType .

    COMMA           shift and go to state 130
    CBR             reduce using rule 78 (collection_body -> subType .)


state 88

    (79) collection_body -> empty .

    CBR             reduce using rule 79 (collection_body -> empty .)


state 89

    (80) collection_body -> ID . COMMA collection_body
    (81) collection_body -> ID .

    COMMA           shift and go to state 131
    CBR             reduce using rule 81 (collection_body -> ID .)


state 90

    (57) operation -> OPAREN operation . CPAREN
    (51) operation -> operation . PLUS operation
    (52) operation -> operation . MINUS operation
    (53) operation -> operation . DIV operation
    (54) operation -> operation . MULT operation

    CPAREN          shift and go to state 132
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    DIV             shift and go to state 84
    MULT            shift and go to state 85


state 91

    (55) operation -> ID .

    CPAREN          reduce using rule 55 (operation -> ID .)
    PLUS            reduce using rule 55 (operation -> ID .)
    MINUS           reduce using rule 55 (operation -> ID .)
    DIV             reduce using rule 55 (operation -> ID .)
    MULT            reduce using rule 55 (operation -> ID .)
    END             reduce using rule 55 (operation -> ID .)
    COMMA           reduce using rule 55 (operation -> ID .)
    AMOUNT          reduce using rule 55 (operation -> ID .)
    CBRACE          reduce using rule 55 (operation -> ID .)


state 92

    (65) funct_call -> ID OPAREN Argument CPAREN .

    END             reduce using rule 65 (funct_call -> ID OPAREN Argument CPAREN .)
    COMMA           reduce using rule 65 (funct_call -> ID OPAREN Argument CPAREN .)
    CPAREN          reduce using rule 65 (funct_call -> ID OPAREN Argument CPAREN .)


state 93

    (66) Argument -> Assignable COMMA . Argument
    (66) Argument -> . Assignable COMMA Argument
    (67) Argument -> . Assignable
    (58) Assignable -> . subType
    (59) Assignable -> . collection
    (60) Assignable -> . GET NAME FROM ID
    (61) Assignable -> . ID GET METRICS DATE
    (62) Assignable -> . LOAD NAME
    (63) Assignable -> . operation
    (64) Assignable -> . funct_call
    (69) Assignable -> . GET STAFF FROM ID
    (70) Assignable -> . GET CATALOG FROM ID
    (71) Assignable -> . GET AMOUNT FROM ID
    (72) Assignable -> . ID
    (73) subType -> . OBRACE bus CBRACE
    (74) subType -> . OBRACE emp CBRACE
    (75) subType -> . OBRACE prod CBRACE
    (76) collection -> . OBR collection_body CBR
    (51) operation -> . operation PLUS operation
    (52) operation -> . operation MINUS operation
    (53) operation -> . operation DIV operation
    (54) operation -> . operation MULT operation
    (55) operation -> . ID
    (56) operation -> . NUMBER
    (57) operation -> . OPAREN operation CPAREN
    (65) funct_call -> . ID OPAREN Argument CPAREN
    (68) funct_call -> . empty
    (91) empty -> .

    GET             shift and go to state 48
    ID              shift and go to state 44
    LOAD            shift and go to state 49
    OBRACE          shift and go to state 38
    OBR             shift and go to state 52
    NUMBER          shift and go to state 53
    OPAREN          shift and go to state 54
    COMMA           reduce using rule 91 (empty -> .)
    CPAREN          reduce using rule 91 (empty -> .)

    Assignable                     shift and go to state 56
    Argument                       shift and go to state 133
    subType                        shift and go to state 46
    collection                     shift and go to state 47
    operation                      shift and go to state 50
    funct_call                     shift and go to state 51
    empty                          shift and go to state 16

state 94

    (8) Instruction -> IfStatement ELSE OBRACE ListInst . CBRACE

    CBRACE          shift and go to state 134


state 95

    (29) Instruction -> DEF TYPE ID OPAREN . Params CPAREN OBRACE ListInst CBRACE
    (31) Params -> . TYPE ID COMMA Params
    (32) Params -> . TYPE ID
    (33) Params -> . empty
    (91) empty -> .

    TYPE            shift and go to state 135
    CPAREN          reduce using rule 91 (empty -> .)

    Params                         shift and go to state 136
    empty                          shift and go to state 137

state 96

    (30) Instruction -> DEF VOID ID OPAREN . Params CPAREN OBRACE ListInst CBRACE
    (31) Params -> . TYPE ID COMMA Params
    (32) Params -> . TYPE ID
    (33) Params -> . empty
    (91) empty -> .

    TYPE            shift and go to state 135
    CPAREN          reduce using rule 91 (empty -> .)

    Params                         shift and go to state 138
    empty                          shift and go to state 137

state 97

    (49) instance -> TYPE ID ASSIGN Assignable .

    END             reduce using rule 49 (instance -> TYPE ID ASSIGN Assignable .)


state 98

    (34) loop_statements -> FOREACH ID IN ID . OBRACE ListInst CBRACE

    OBRACE          shift and go to state 139


state 99

    (46) bool_expression -> OPAREN bool_expression . CPAREN
    (39) bool_expression -> bool_expression . AND bool_expression
    (40) bool_expression -> bool_expression . OR bool_expression

    CPAREN          shift and go to state 140
    AND             shift and go to state 101
    OR              shift and go to state 102


state 100

    (35) loop_statements -> WHILE OPAREN condition CPAREN . OBRACE ListInst CBRACE

    OBRACE          shift and go to state 141


state 101

    (39) bool_expression -> bool_expression AND . bool_expression
    (38) bool_expression -> . NOT bool_expression
    (39) bool_expression -> . bool_expression AND bool_expression
    (40) bool_expression -> . bool_expression OR bool_expression
    (41) bool_expression -> . ID EQUAL ID
    (42) bool_expression -> . ID LEQ ID
    (43) bool_expression -> . ID GEQ ID
    (44) bool_expression -> . ID GREATER ID
    (45) bool_expression -> . ID LESS ID
    (46) bool_expression -> . OPAREN bool_expression CPAREN
    (47) bool_expression -> . ID IN ID

    NOT             shift and go to state 66
    ID              shift and go to state 67
    OPAREN          shift and go to state 63

    bool_expression                shift and go to state 142

state 102

    (40) bool_expression -> bool_expression OR . bool_expression
    (38) bool_expression -> . NOT bool_expression
    (39) bool_expression -> . bool_expression AND bool_expression
    (40) bool_expression -> . bool_expression OR bool_expression
    (41) bool_expression -> . ID EQUAL ID
    (42) bool_expression -> . ID LEQ ID
    (43) bool_expression -> . ID GEQ ID
    (44) bool_expression -> . ID GREATER ID
    (45) bool_expression -> . ID LESS ID
    (46) bool_expression -> . OPAREN bool_expression CPAREN
    (47) bool_expression -> . ID IN ID

    NOT             shift and go to state 66
    ID              shift and go to state 67
    OPAREN          shift and go to state 63

    bool_expression                shift and go to state 143

state 103

    (38) bool_expression -> NOT bool_expression .
    (39) bool_expression -> bool_expression . AND bool_expression
    (40) bool_expression -> bool_expression . OR bool_expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    CPAREN          reduce using rule 38 (bool_expression -> NOT bool_expression .)
    AND             shift and go to state 101
    OR              shift and go to state 102

  ! AND             [ reduce using rule 38 (bool_expression -> NOT bool_expression .) ]
  ! OR              [ reduce using rule 38 (bool_expression -> NOT bool_expression .) ]


state 104

    (41) bool_expression -> ID EQUAL . ID

    ID              shift and go to state 144


state 105

    (42) bool_expression -> ID LEQ . ID

    ID              shift and go to state 145


state 106

    (43) bool_expression -> ID GEQ . ID

    ID              shift and go to state 146


state 107

    (44) bool_expression -> ID GREATER . ID

    ID              shift and go to state 147


state 108

    (45) bool_expression -> ID LESS . ID

    ID              shift and go to state 148


state 109

    (47) bool_expression -> ID IN . ID

    ID              shift and go to state 149


state 110

    (36) IfStatement -> IF OPAREN condition CPAREN . OBRACE ListInst CBRACE

    OBRACE          shift and go to state 150


state 111

    (9) Instruction -> ID ACTION SALE ID PRICE . DPOINT NUMBER AMOUNT DPOINT NUMBER
    (10) Instruction -> ID ACTION SALE ID PRICE . DPOINT ID AMOUNT DPOINT ID
    (11) Instruction -> ID ACTION SALE ID PRICE . DPOINT operation AMOUNT DPOINT operation

    DPOINT          shift and go to state 151


state 112

    (12) Instruction -> ID ACTION INVESTS ID COST . DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> ID ACTION INVESTS ID COST . DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> ID ACTION INVESTS ID COST . DPOINT operation AMOUNT DPOINT operation

    DPOINT          shift and go to state 152


state 113

    (20) Instruction -> ID ADD BILL OBRACE ID . COMMA DESCRIP CBRACE
    (21) Instruction -> ID ADD BILL OBRACE ID . COMMA NAME CBRACE
    (55) operation -> ID .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 153
    PLUS            reduce using rule 55 (operation -> ID .)
    MINUS           reduce using rule 55 (operation -> ID .)
    DIV             reduce using rule 55 (operation -> ID .)
    MULT            reduce using rule 55 (operation -> ID .)

  ! COMMA           [ reduce using rule 55 (operation -> ID .) ]


state 114

    (16) Instruction -> ID ADD BILL OBRACE NUMBER . COMMA DESCRIP CBRACE
    (17) Instruction -> ID ADD BILL OBRACE NUMBER . COMMA NAME CBRACE
    (56) operation -> NUMBER .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 154
    PLUS            reduce using rule 56 (operation -> NUMBER .)
    MINUS           reduce using rule 56 (operation -> NUMBER .)
    DIV             reduce using rule 56 (operation -> NUMBER .)
    MULT            reduce using rule 56 (operation -> NUMBER .)

  ! COMMA           [ reduce using rule 56 (operation -> NUMBER .) ]


state 115

    (18) Instruction -> ID ADD BILL OBRACE operation . COMMA DESCRIP CBRACE
    (19) Instruction -> ID ADD BILL OBRACE operation . COMMA NAME CBRACE
    (51) operation -> operation . PLUS operation
    (52) operation -> operation . MINUS operation
    (53) operation -> operation . DIV operation
    (54) operation -> operation . MULT operation

    COMMA           shift and go to state 155
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    DIV             shift and go to state 84
    MULT            shift and go to state 85


state 116

    (73) subType -> OBRACE bus CBRACE .

    END             reduce using rule 73 (subType -> OBRACE bus CBRACE .)
    COMMA           reduce using rule 73 (subType -> OBRACE bus CBRACE .)
    CPAREN          reduce using rule 73 (subType -> OBRACE bus CBRACE .)
    CBR             reduce using rule 73 (subType -> OBRACE bus CBRACE .)


state 117

    (74) subType -> OBRACE emp CBRACE .

    END             reduce using rule 74 (subType -> OBRACE emp CBRACE .)
    COMMA           reduce using rule 74 (subType -> OBRACE emp CBRACE .)
    CPAREN          reduce using rule 74 (subType -> OBRACE emp CBRACE .)
    CBR             reduce using rule 74 (subType -> OBRACE emp CBRACE .)


state 118

    (75) subType -> OBRACE prod CBRACE .

    END             reduce using rule 75 (subType -> OBRACE prod CBRACE .)
    COMMA           reduce using rule 75 (subType -> OBRACE prod CBRACE .)
    CPAREN          reduce using rule 75 (subType -> OBRACE prod CBRACE .)
    CBR             reduce using rule 75 (subType -> OBRACE prod CBRACE .)


state 119

    (82) bus -> NAME COMMA . collection COMMA collection
    (83) bus -> NAME COMMA . ID COMMA ID
    (84) emp -> NAME COMMA . SALARY DPOINT NUMBER
    (85) emp -> NAME COMMA . SALARY DPOINT ID
    (86) emp -> NAME COMMA . SALARY DPOINT operation
    (87) prod -> NAME COMMA . AMOUNT DPOINT NUMBER
    (89) prod -> NAME COMMA . AMOUNT DPOINT ID
    (90) prod -> NAME COMMA . AMOUNT DPOINT operation
    (76) collection -> . OBR collection_body CBR

    ID              shift and go to state 157
    SALARY          shift and go to state 158
    AMOUNT          shift and go to state 159
    OBR             shift and go to state 52

    collection                     shift and go to state 156

state 120

    (61) Assignable -> ID GET METRICS . DATE

    DATE            shift and go to state 160


state 121

    (60) Assignable -> GET NAME FROM . ID

    ID              shift and go to state 161


state 122

    (69) Assignable -> GET STAFF FROM . ID

    ID              shift and go to state 162


state 123

    (70) Assignable -> GET CATALOG FROM . ID

    ID              shift and go to state 163


state 124

    (71) Assignable -> GET AMOUNT FROM . ID

    ID              shift and go to state 164


state 125

    (51) operation -> operation PLUS operation .
    (51) operation -> operation . PLUS operation
    (52) operation -> operation . MINUS operation
    (53) operation -> operation . DIV operation
    (54) operation -> operation . MULT operation

    PLUS            reduce using rule 51 (operation -> operation PLUS operation .)
    MINUS           reduce using rule 51 (operation -> operation PLUS operation .)
    END             reduce using rule 51 (operation -> operation PLUS operation .)
    COMMA           reduce using rule 51 (operation -> operation PLUS operation .)
    CPAREN          reduce using rule 51 (operation -> operation PLUS operation .)
    AMOUNT          reduce using rule 51 (operation -> operation PLUS operation .)
    CBRACE          reduce using rule 51 (operation -> operation PLUS operation .)
    DIV             shift and go to state 84
    MULT            shift and go to state 85

  ! DIV             [ reduce using rule 51 (operation -> operation PLUS operation .) ]
  ! MULT            [ reduce using rule 51 (operation -> operation PLUS operation .) ]
  ! PLUS            [ shift and go to state 82 ]
  ! MINUS           [ shift and go to state 83 ]


state 126

    (52) operation -> operation MINUS operation .
    (51) operation -> operation . PLUS operation
    (52) operation -> operation . MINUS operation
    (53) operation -> operation . DIV operation
    (54) operation -> operation . MULT operation

    PLUS            reduce using rule 52 (operation -> operation MINUS operation .)
    MINUS           reduce using rule 52 (operation -> operation MINUS operation .)
    END             reduce using rule 52 (operation -> operation MINUS operation .)
    COMMA           reduce using rule 52 (operation -> operation MINUS operation .)
    CPAREN          reduce using rule 52 (operation -> operation MINUS operation .)
    AMOUNT          reduce using rule 52 (operation -> operation MINUS operation .)
    CBRACE          reduce using rule 52 (operation -> operation MINUS operation .)
    DIV             shift and go to state 84
    MULT            shift and go to state 85

  ! DIV             [ reduce using rule 52 (operation -> operation MINUS operation .) ]
  ! MULT            [ reduce using rule 52 (operation -> operation MINUS operation .) ]
  ! PLUS            [ shift and go to state 82 ]
  ! MINUS           [ shift and go to state 83 ]


state 127

    (53) operation -> operation DIV operation .
    (51) operation -> operation . PLUS operation
    (52) operation -> operation . MINUS operation
    (53) operation -> operation . DIV operation
    (54) operation -> operation . MULT operation

    PLUS            reduce using rule 53 (operation -> operation DIV operation .)
    MINUS           reduce using rule 53 (operation -> operation DIV operation .)
    DIV             reduce using rule 53 (operation -> operation DIV operation .)
    MULT            reduce using rule 53 (operation -> operation DIV operation .)
    END             reduce using rule 53 (operation -> operation DIV operation .)
    COMMA           reduce using rule 53 (operation -> operation DIV operation .)
    CPAREN          reduce using rule 53 (operation -> operation DIV operation .)
    AMOUNT          reduce using rule 53 (operation -> operation DIV operation .)
    CBRACE          reduce using rule 53 (operation -> operation DIV operation .)

  ! PLUS            [ shift and go to state 82 ]
  ! MINUS           [ shift and go to state 83 ]
  ! DIV             [ shift and go to state 84 ]
  ! MULT            [ shift and go to state 85 ]


state 128

    (54) operation -> operation MULT operation .
    (51) operation -> operation . PLUS operation
    (52) operation -> operation . MINUS operation
    (53) operation -> operation . DIV operation
    (54) operation -> operation . MULT operation

    PLUS            reduce using rule 54 (operation -> operation MULT operation .)
    MINUS           reduce using rule 54 (operation -> operation MULT operation .)
    DIV             reduce using rule 54 (operation -> operation MULT operation .)
    MULT            reduce using rule 54 (operation -> operation MULT operation .)
    END             reduce using rule 54 (operation -> operation MULT operation .)
    COMMA           reduce using rule 54 (operation -> operation MULT operation .)
    CPAREN          reduce using rule 54 (operation -> operation MULT operation .)
    AMOUNT          reduce using rule 54 (operation -> operation MULT operation .)
    CBRACE          reduce using rule 54 (operation -> operation MULT operation .)

  ! PLUS            [ shift and go to state 82 ]
  ! MINUS           [ shift and go to state 83 ]
  ! DIV             [ shift and go to state 84 ]
  ! MULT            [ shift and go to state 85 ]


state 129

    (76) collection -> OBR collection_body CBR .

    END             reduce using rule 76 (collection -> OBR collection_body CBR .)
    COMMA           reduce using rule 76 (collection -> OBR collection_body CBR .)
    CPAREN          reduce using rule 76 (collection -> OBR collection_body CBR .)
    CBRACE          reduce using rule 76 (collection -> OBR collection_body CBR .)


state 130

    (77) collection_body -> subType COMMA . collection_body
    (77) collection_body -> . subType COMMA collection_body
    (78) collection_body -> . subType
    (79) collection_body -> . empty
    (80) collection_body -> . ID COMMA collection_body
    (81) collection_body -> . ID
    (73) subType -> . OBRACE bus CBRACE
    (74) subType -> . OBRACE emp CBRACE
    (75) subType -> . OBRACE prod CBRACE
    (91) empty -> .

    ID              shift and go to state 89
    OBRACE          shift and go to state 38
    CBR             reduce using rule 91 (empty -> .)

    subType                        shift and go to state 87
    collection_body                shift and go to state 165
    empty                          shift and go to state 88

state 131

    (80) collection_body -> ID COMMA . collection_body
    (77) collection_body -> . subType COMMA collection_body
    (78) collection_body -> . subType
    (79) collection_body -> . empty
    (80) collection_body -> . ID COMMA collection_body
    (81) collection_body -> . ID
    (73) subType -> . OBRACE bus CBRACE
    (74) subType -> . OBRACE emp CBRACE
    (75) subType -> . OBRACE prod CBRACE
    (91) empty -> .

    ID              shift and go to state 89
    OBRACE          shift and go to state 38
    CBR             reduce using rule 91 (empty -> .)

    collection_body                shift and go to state 166
    subType                        shift and go to state 87
    empty                          shift and go to state 88

state 132

    (57) operation -> OPAREN operation CPAREN .

    PLUS            reduce using rule 57 (operation -> OPAREN operation CPAREN .)
    MINUS           reduce using rule 57 (operation -> OPAREN operation CPAREN .)
    DIV             reduce using rule 57 (operation -> OPAREN operation CPAREN .)
    MULT            reduce using rule 57 (operation -> OPAREN operation CPAREN .)
    END             reduce using rule 57 (operation -> OPAREN operation CPAREN .)
    COMMA           reduce using rule 57 (operation -> OPAREN operation CPAREN .)
    CPAREN          reduce using rule 57 (operation -> OPAREN operation CPAREN .)
    AMOUNT          reduce using rule 57 (operation -> OPAREN operation CPAREN .)
    CBRACE          reduce using rule 57 (operation -> OPAREN operation CPAREN .)


state 133

    (66) Argument -> Assignable COMMA Argument .

    CPAREN          reduce using rule 66 (Argument -> Assignable COMMA Argument .)


state 134

    (8) Instruction -> IfStatement ELSE OBRACE ListInst CBRACE .

    END             reduce using rule 8 (Instruction -> IfStatement ELSE OBRACE ListInst CBRACE .)


state 135

    (31) Params -> TYPE . ID COMMA Params
    (32) Params -> TYPE . ID

    ID              shift and go to state 167


state 136

    (29) Instruction -> DEF TYPE ID OPAREN Params . CPAREN OBRACE ListInst CBRACE

    CPAREN          shift and go to state 168


state 137

    (33) Params -> empty .

    CPAREN          reduce using rule 33 (Params -> empty .)


state 138

    (30) Instruction -> DEF VOID ID OPAREN Params . CPAREN OBRACE ListInst CBRACE

    CPAREN          shift and go to state 169


state 139

    (34) loop_statements -> FOREACH ID IN ID OBRACE . ListInst CBRACE
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . loop_statements
    (7) Instruction -> . IfStatement
    (8) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (9) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (10) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (11) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (12) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (15) Instruction -> . ID ADD ID
    (16) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (17) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE
    (18) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> . ID ADD BILL OBRACE operation COMMA NAME CBRACE
    (20) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (21) Instruction -> . ID ADD BILL OBRACE ID COMMA NAME CBRACE
    (22) Instruction -> . ID ADD subType
    (23) Instruction -> . ID DEL NAME
    (24) Instruction -> . ID DEL ID
    (25) Instruction -> . ID DISMISS NAME
    (26) Instruction -> . ID DISMISS ID
    (27) Instruction -> . PRINT DPOINT ID
    (28) Instruction -> . funct_call
    (29) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (30) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (48) instance -> . TYPE ID
    (49) instance -> . TYPE ID ASSIGN Assignable
    (50) instance -> . ID ASSIGN Assignable
    (34) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (35) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (36) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (65) funct_call -> . ID OPAREN Argument CPAREN
    (68) funct_call -> . empty
    (91) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 9
    DEF             shift and go to state 11
    TYPE            shift and go to state 12
    FOREACH         shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    END             reduce using rule 91 (empty -> .)

    ListInst                       shift and go to state 170
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    IfStatement                    shift and go to state 8
    funct_call                     shift and go to state 10
    empty                          shift and go to state 16

state 140

    (46) bool_expression -> OPAREN bool_expression CPAREN .

    AND             reduce using rule 46 (bool_expression -> OPAREN bool_expression CPAREN .)
    OR              reduce using rule 46 (bool_expression -> OPAREN bool_expression CPAREN .)
    CPAREN          reduce using rule 46 (bool_expression -> OPAREN bool_expression CPAREN .)


state 141

    (35) loop_statements -> WHILE OPAREN condition CPAREN OBRACE . ListInst CBRACE
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . loop_statements
    (7) Instruction -> . IfStatement
    (8) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (9) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (10) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (11) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (12) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (15) Instruction -> . ID ADD ID
    (16) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (17) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE
    (18) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> . ID ADD BILL OBRACE operation COMMA NAME CBRACE
    (20) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (21) Instruction -> . ID ADD BILL OBRACE ID COMMA NAME CBRACE
    (22) Instruction -> . ID ADD subType
    (23) Instruction -> . ID DEL NAME
    (24) Instruction -> . ID DEL ID
    (25) Instruction -> . ID DISMISS NAME
    (26) Instruction -> . ID DISMISS ID
    (27) Instruction -> . PRINT DPOINT ID
    (28) Instruction -> . funct_call
    (29) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (30) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (48) instance -> . TYPE ID
    (49) instance -> . TYPE ID ASSIGN Assignable
    (50) instance -> . ID ASSIGN Assignable
    (34) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (35) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (36) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (65) funct_call -> . ID OPAREN Argument CPAREN
    (68) funct_call -> . empty
    (91) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 9
    DEF             shift and go to state 11
    TYPE            shift and go to state 12
    FOREACH         shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    END             reduce using rule 91 (empty -> .)

    ListInst                       shift and go to state 171
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    IfStatement                    shift and go to state 8
    funct_call                     shift and go to state 10
    empty                          shift and go to state 16

state 142

    (39) bool_expression -> bool_expression AND bool_expression .
    (39) bool_expression -> bool_expression . AND bool_expression
    (40) bool_expression -> bool_expression . OR bool_expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    CPAREN          reduce using rule 39 (bool_expression -> bool_expression AND bool_expression .)
    AND             shift and go to state 101
    OR              shift and go to state 102

  ! AND             [ reduce using rule 39 (bool_expression -> bool_expression AND bool_expression .) ]
  ! OR              [ reduce using rule 39 (bool_expression -> bool_expression AND bool_expression .) ]


state 143

    (40) bool_expression -> bool_expression OR bool_expression .
    (39) bool_expression -> bool_expression . AND bool_expression
    (40) bool_expression -> bool_expression . OR bool_expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    CPAREN          reduce using rule 40 (bool_expression -> bool_expression OR bool_expression .)
    AND             shift and go to state 101
    OR              shift and go to state 102

  ! AND             [ reduce using rule 40 (bool_expression -> bool_expression OR bool_expression .) ]
  ! OR              [ reduce using rule 40 (bool_expression -> bool_expression OR bool_expression .) ]


state 144

    (41) bool_expression -> ID EQUAL ID .

    AND             reduce using rule 41 (bool_expression -> ID EQUAL ID .)
    OR              reduce using rule 41 (bool_expression -> ID EQUAL ID .)
    CPAREN          reduce using rule 41 (bool_expression -> ID EQUAL ID .)


state 145

    (42) bool_expression -> ID LEQ ID .

    AND             reduce using rule 42 (bool_expression -> ID LEQ ID .)
    OR              reduce using rule 42 (bool_expression -> ID LEQ ID .)
    CPAREN          reduce using rule 42 (bool_expression -> ID LEQ ID .)


state 146

    (43) bool_expression -> ID GEQ ID .

    AND             reduce using rule 43 (bool_expression -> ID GEQ ID .)
    OR              reduce using rule 43 (bool_expression -> ID GEQ ID .)
    CPAREN          reduce using rule 43 (bool_expression -> ID GEQ ID .)


state 147

    (44) bool_expression -> ID GREATER ID .

    AND             reduce using rule 44 (bool_expression -> ID GREATER ID .)
    OR              reduce using rule 44 (bool_expression -> ID GREATER ID .)
    CPAREN          reduce using rule 44 (bool_expression -> ID GREATER ID .)


state 148

    (45) bool_expression -> ID LESS ID .

    AND             reduce using rule 45 (bool_expression -> ID LESS ID .)
    OR              reduce using rule 45 (bool_expression -> ID LESS ID .)
    CPAREN          reduce using rule 45 (bool_expression -> ID LESS ID .)


state 149

    (47) bool_expression -> ID IN ID .

    AND             reduce using rule 47 (bool_expression -> ID IN ID .)
    OR              reduce using rule 47 (bool_expression -> ID IN ID .)
    CPAREN          reduce using rule 47 (bool_expression -> ID IN ID .)


state 150

    (36) IfStatement -> IF OPAREN condition CPAREN OBRACE . ListInst CBRACE
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . loop_statements
    (7) Instruction -> . IfStatement
    (8) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (9) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (10) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (11) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (12) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (15) Instruction -> . ID ADD ID
    (16) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (17) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE
    (18) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> . ID ADD BILL OBRACE operation COMMA NAME CBRACE
    (20) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (21) Instruction -> . ID ADD BILL OBRACE ID COMMA NAME CBRACE
    (22) Instruction -> . ID ADD subType
    (23) Instruction -> . ID DEL NAME
    (24) Instruction -> . ID DEL ID
    (25) Instruction -> . ID DISMISS NAME
    (26) Instruction -> . ID DISMISS ID
    (27) Instruction -> . PRINT DPOINT ID
    (28) Instruction -> . funct_call
    (29) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (30) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (48) instance -> . TYPE ID
    (49) instance -> . TYPE ID ASSIGN Assignable
    (50) instance -> . ID ASSIGN Assignable
    (34) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (35) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (36) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (65) funct_call -> . ID OPAREN Argument CPAREN
    (68) funct_call -> . empty
    (91) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 9
    DEF             shift and go to state 11
    TYPE            shift and go to state 12
    FOREACH         shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    END             reduce using rule 91 (empty -> .)

    ListInst                       shift and go to state 172
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    IfStatement                    shift and go to state 8
    funct_call                     shift and go to state 10
    empty                          shift and go to state 16

state 151

    (9) Instruction -> ID ACTION SALE ID PRICE DPOINT . NUMBER AMOUNT DPOINT NUMBER
    (10) Instruction -> ID ACTION SALE ID PRICE DPOINT . ID AMOUNT DPOINT ID
    (11) Instruction -> ID ACTION SALE ID PRICE DPOINT . operation AMOUNT DPOINT operation
    (51) operation -> . operation PLUS operation
    (52) operation -> . operation MINUS operation
    (53) operation -> . operation DIV operation
    (54) operation -> . operation MULT operation
    (55) operation -> . ID
    (56) operation -> . NUMBER
    (57) operation -> . OPAREN operation CPAREN

    NUMBER          shift and go to state 174
    ID              shift and go to state 173
    OPAREN          shift and go to state 54

    operation                      shift and go to state 175

state 152

    (12) Instruction -> ID ACTION INVESTS ID COST DPOINT . NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> ID ACTION INVESTS ID COST DPOINT . ID AMOUNT DPOINT ID
    (14) Instruction -> ID ACTION INVESTS ID COST DPOINT . operation AMOUNT DPOINT operation
    (51) operation -> . operation PLUS operation
    (52) operation -> . operation MINUS operation
    (53) operation -> . operation DIV operation
    (54) operation -> . operation MULT operation
    (55) operation -> . ID
    (56) operation -> . NUMBER
    (57) operation -> . OPAREN operation CPAREN

    NUMBER          shift and go to state 177
    ID              shift and go to state 176
    OPAREN          shift and go to state 54

    operation                      shift and go to state 178

state 153

    (20) Instruction -> ID ADD BILL OBRACE ID COMMA . DESCRIP CBRACE
    (21) Instruction -> ID ADD BILL OBRACE ID COMMA . NAME CBRACE

    DESCRIP         shift and go to state 179
    NAME            shift and go to state 180


state 154

    (16) Instruction -> ID ADD BILL OBRACE NUMBER COMMA . DESCRIP CBRACE
    (17) Instruction -> ID ADD BILL OBRACE NUMBER COMMA . NAME CBRACE

    DESCRIP         shift and go to state 181
    NAME            shift and go to state 182


state 155

    (18) Instruction -> ID ADD BILL OBRACE operation COMMA . DESCRIP CBRACE
    (19) Instruction -> ID ADD BILL OBRACE operation COMMA . NAME CBRACE

    DESCRIP         shift and go to state 183
    NAME            shift and go to state 184


state 156

    (82) bus -> NAME COMMA collection . COMMA collection

    COMMA           shift and go to state 185


state 157

    (83) bus -> NAME COMMA ID . COMMA ID

    COMMA           shift and go to state 186


state 158

    (84) emp -> NAME COMMA SALARY . DPOINT NUMBER
    (85) emp -> NAME COMMA SALARY . DPOINT ID
    (86) emp -> NAME COMMA SALARY . DPOINT operation

    DPOINT          shift and go to state 187


state 159

    (87) prod -> NAME COMMA AMOUNT . DPOINT NUMBER
    (89) prod -> NAME COMMA AMOUNT . DPOINT ID
    (90) prod -> NAME COMMA AMOUNT . DPOINT operation

    DPOINT          shift and go to state 188


state 160

    (61) Assignable -> ID GET METRICS DATE .

    END             reduce using rule 61 (Assignable -> ID GET METRICS DATE .)
    COMMA           reduce using rule 61 (Assignable -> ID GET METRICS DATE .)
    CPAREN          reduce using rule 61 (Assignable -> ID GET METRICS DATE .)


state 161

    (60) Assignable -> GET NAME FROM ID .

    END             reduce using rule 60 (Assignable -> GET NAME FROM ID .)
    COMMA           reduce using rule 60 (Assignable -> GET NAME FROM ID .)
    CPAREN          reduce using rule 60 (Assignable -> GET NAME FROM ID .)


state 162

    (69) Assignable -> GET STAFF FROM ID .

    END             reduce using rule 69 (Assignable -> GET STAFF FROM ID .)
    COMMA           reduce using rule 69 (Assignable -> GET STAFF FROM ID .)
    CPAREN          reduce using rule 69 (Assignable -> GET STAFF FROM ID .)


state 163

    (70) Assignable -> GET CATALOG FROM ID .

    END             reduce using rule 70 (Assignable -> GET CATALOG FROM ID .)
    COMMA           reduce using rule 70 (Assignable -> GET CATALOG FROM ID .)
    CPAREN          reduce using rule 70 (Assignable -> GET CATALOG FROM ID .)


state 164

    (71) Assignable -> GET AMOUNT FROM ID .

    END             reduce using rule 71 (Assignable -> GET AMOUNT FROM ID .)
    COMMA           reduce using rule 71 (Assignable -> GET AMOUNT FROM ID .)
    CPAREN          reduce using rule 71 (Assignable -> GET AMOUNT FROM ID .)


state 165

    (77) collection_body -> subType COMMA collection_body .

    CBR             reduce using rule 77 (collection_body -> subType COMMA collection_body .)


state 166

    (80) collection_body -> ID COMMA collection_body .

    CBR             reduce using rule 80 (collection_body -> ID COMMA collection_body .)


state 167

    (31) Params -> TYPE ID . COMMA Params
    (32) Params -> TYPE ID .

    COMMA           shift and go to state 189
    CPAREN          reduce using rule 32 (Params -> TYPE ID .)


state 168

    (29) Instruction -> DEF TYPE ID OPAREN Params CPAREN . OBRACE ListInst CBRACE

    OBRACE          shift and go to state 190


state 169

    (30) Instruction -> DEF VOID ID OPAREN Params CPAREN . OBRACE ListInst CBRACE

    OBRACE          shift and go to state 191


state 170

    (34) loop_statements -> FOREACH ID IN ID OBRACE ListInst . CBRACE

    CBRACE          shift and go to state 192


state 171

    (35) loop_statements -> WHILE OPAREN condition CPAREN OBRACE ListInst . CBRACE

    CBRACE          shift and go to state 193


state 172

    (36) IfStatement -> IF OPAREN condition CPAREN OBRACE ListInst . CBRACE

    CBRACE          shift and go to state 194


state 173

    (10) Instruction -> ID ACTION SALE ID PRICE DPOINT ID . AMOUNT DPOINT ID
    (55) operation -> ID .

  ! shift/reduce conflict for AMOUNT resolved as shift
    AMOUNT          shift and go to state 195
    PLUS            reduce using rule 55 (operation -> ID .)
    MINUS           reduce using rule 55 (operation -> ID .)
    DIV             reduce using rule 55 (operation -> ID .)
    MULT            reduce using rule 55 (operation -> ID .)

  ! AMOUNT          [ reduce using rule 55 (operation -> ID .) ]


state 174

    (9) Instruction -> ID ACTION SALE ID PRICE DPOINT NUMBER . AMOUNT DPOINT NUMBER
    (56) operation -> NUMBER .

  ! shift/reduce conflict for AMOUNT resolved as shift
    AMOUNT          shift and go to state 196
    PLUS            reduce using rule 56 (operation -> NUMBER .)
    MINUS           reduce using rule 56 (operation -> NUMBER .)
    DIV             reduce using rule 56 (operation -> NUMBER .)
    MULT            reduce using rule 56 (operation -> NUMBER .)

  ! AMOUNT          [ reduce using rule 56 (operation -> NUMBER .) ]


state 175

    (11) Instruction -> ID ACTION SALE ID PRICE DPOINT operation . AMOUNT DPOINT operation
    (51) operation -> operation . PLUS operation
    (52) operation -> operation . MINUS operation
    (53) operation -> operation . DIV operation
    (54) operation -> operation . MULT operation

    AMOUNT          shift and go to state 197
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    DIV             shift and go to state 84
    MULT            shift and go to state 85


state 176

    (13) Instruction -> ID ACTION INVESTS ID COST DPOINT ID . AMOUNT DPOINT ID
    (55) operation -> ID .

  ! shift/reduce conflict for AMOUNT resolved as shift
    AMOUNT          shift and go to state 198
    PLUS            reduce using rule 55 (operation -> ID .)
    MINUS           reduce using rule 55 (operation -> ID .)
    DIV             reduce using rule 55 (operation -> ID .)
    MULT            reduce using rule 55 (operation -> ID .)

  ! AMOUNT          [ reduce using rule 55 (operation -> ID .) ]


state 177

    (12) Instruction -> ID ACTION INVESTS ID COST DPOINT NUMBER . AMOUNT DPOINT NUMBER
    (56) operation -> NUMBER .

  ! shift/reduce conflict for AMOUNT resolved as shift
    AMOUNT          shift and go to state 199
    PLUS            reduce using rule 56 (operation -> NUMBER .)
    MINUS           reduce using rule 56 (operation -> NUMBER .)
    DIV             reduce using rule 56 (operation -> NUMBER .)
    MULT            reduce using rule 56 (operation -> NUMBER .)

  ! AMOUNT          [ reduce using rule 56 (operation -> NUMBER .) ]


state 178

    (14) Instruction -> ID ACTION INVESTS ID COST DPOINT operation . AMOUNT DPOINT operation
    (51) operation -> operation . PLUS operation
    (52) operation -> operation . MINUS operation
    (53) operation -> operation . DIV operation
    (54) operation -> operation . MULT operation

    AMOUNT          shift and go to state 200
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    DIV             shift and go to state 84
    MULT            shift and go to state 85


state 179

    (20) Instruction -> ID ADD BILL OBRACE ID COMMA DESCRIP . CBRACE

    CBRACE          shift and go to state 201


state 180

    (21) Instruction -> ID ADD BILL OBRACE ID COMMA NAME . CBRACE

    CBRACE          shift and go to state 202


state 181

    (16) Instruction -> ID ADD BILL OBRACE NUMBER COMMA DESCRIP . CBRACE

    CBRACE          shift and go to state 203


state 182

    (17) Instruction -> ID ADD BILL OBRACE NUMBER COMMA NAME . CBRACE

    CBRACE          shift and go to state 204


state 183

    (18) Instruction -> ID ADD BILL OBRACE operation COMMA DESCRIP . CBRACE

    CBRACE          shift and go to state 205


state 184

    (19) Instruction -> ID ADD BILL OBRACE operation COMMA NAME . CBRACE

    CBRACE          shift and go to state 206


state 185

    (82) bus -> NAME COMMA collection COMMA . collection
    (76) collection -> . OBR collection_body CBR

    OBR             shift and go to state 52

    collection                     shift and go to state 207

state 186

    (83) bus -> NAME COMMA ID COMMA . ID

    ID              shift and go to state 208


state 187

    (84) emp -> NAME COMMA SALARY DPOINT . NUMBER
    (85) emp -> NAME COMMA SALARY DPOINT . ID
    (86) emp -> NAME COMMA SALARY DPOINT . operation
    (51) operation -> . operation PLUS operation
    (52) operation -> . operation MINUS operation
    (53) operation -> . operation DIV operation
    (54) operation -> . operation MULT operation
    (55) operation -> . ID
    (56) operation -> . NUMBER
    (57) operation -> . OPAREN operation CPAREN

    NUMBER          shift and go to state 209
    ID              shift and go to state 210
    OPAREN          shift and go to state 54

    operation                      shift and go to state 211

state 188

    (87) prod -> NAME COMMA AMOUNT DPOINT . NUMBER
    (89) prod -> NAME COMMA AMOUNT DPOINT . ID
    (90) prod -> NAME COMMA AMOUNT DPOINT . operation
    (51) operation -> . operation PLUS operation
    (52) operation -> . operation MINUS operation
    (53) operation -> . operation DIV operation
    (54) operation -> . operation MULT operation
    (55) operation -> . ID
    (56) operation -> . NUMBER
    (57) operation -> . OPAREN operation CPAREN

    NUMBER          shift and go to state 212
    ID              shift and go to state 213
    OPAREN          shift and go to state 54

    operation                      shift and go to state 214

state 189

    (31) Params -> TYPE ID COMMA . Params
    (31) Params -> . TYPE ID COMMA Params
    (32) Params -> . TYPE ID
    (33) Params -> . empty
    (91) empty -> .

    TYPE            shift and go to state 135
    CPAREN          reduce using rule 91 (empty -> .)

    Params                         shift and go to state 215
    empty                          shift and go to state 137

state 190

    (29) Instruction -> DEF TYPE ID OPAREN Params CPAREN OBRACE . ListInst CBRACE
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . loop_statements
    (7) Instruction -> . IfStatement
    (8) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (9) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (10) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (11) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (12) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (15) Instruction -> . ID ADD ID
    (16) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (17) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE
    (18) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> . ID ADD BILL OBRACE operation COMMA NAME CBRACE
    (20) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (21) Instruction -> . ID ADD BILL OBRACE ID COMMA NAME CBRACE
    (22) Instruction -> . ID ADD subType
    (23) Instruction -> . ID DEL NAME
    (24) Instruction -> . ID DEL ID
    (25) Instruction -> . ID DISMISS NAME
    (26) Instruction -> . ID DISMISS ID
    (27) Instruction -> . PRINT DPOINT ID
    (28) Instruction -> . funct_call
    (29) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (30) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (48) instance -> . TYPE ID
    (49) instance -> . TYPE ID ASSIGN Assignable
    (50) instance -> . ID ASSIGN Assignable
    (34) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (35) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (36) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (65) funct_call -> . ID OPAREN Argument CPAREN
    (68) funct_call -> . empty
    (91) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 9
    DEF             shift and go to state 11
    TYPE            shift and go to state 12
    FOREACH         shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    END             reduce using rule 91 (empty -> .)

    ListInst                       shift and go to state 216
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    IfStatement                    shift and go to state 8
    funct_call                     shift and go to state 10
    empty                          shift and go to state 16

state 191

    (30) Instruction -> DEF VOID ID OPAREN Params CPAREN OBRACE . ListInst CBRACE
    (2) ListInst -> . Instruction END ListInst
    (3) ListInst -> . Instruction END
    (4) Instruction -> . instance
    (5) Instruction -> . SAVE ID
    (6) Instruction -> . loop_statements
    (7) Instruction -> . IfStatement
    (8) Instruction -> . IfStatement ELSE OBRACE ListInst CBRACE
    (9) Instruction -> . ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER
    (10) Instruction -> . ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID
    (11) Instruction -> . ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation
    (12) Instruction -> . ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER
    (13) Instruction -> . ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID
    (14) Instruction -> . ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation
    (15) Instruction -> . ID ADD ID
    (16) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE
    (17) Instruction -> . ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE
    (18) Instruction -> . ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE
    (19) Instruction -> . ID ADD BILL OBRACE operation COMMA NAME CBRACE
    (20) Instruction -> . ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE
    (21) Instruction -> . ID ADD BILL OBRACE ID COMMA NAME CBRACE
    (22) Instruction -> . ID ADD subType
    (23) Instruction -> . ID DEL NAME
    (24) Instruction -> . ID DEL ID
    (25) Instruction -> . ID DISMISS NAME
    (26) Instruction -> . ID DISMISS ID
    (27) Instruction -> . PRINT DPOINT ID
    (28) Instruction -> . funct_call
    (29) Instruction -> . DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (30) Instruction -> . DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE
    (48) instance -> . TYPE ID
    (49) instance -> . TYPE ID ASSIGN Assignable
    (50) instance -> . ID ASSIGN Assignable
    (34) loop_statements -> . FOREACH ID IN ID OBRACE ListInst CBRACE
    (35) loop_statements -> . WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE
    (36) IfStatement -> . IF OPAREN condition CPAREN OBRACE ListInst CBRACE
    (65) funct_call -> . ID OPAREN Argument CPAREN
    (68) funct_call -> . empty
    (91) empty -> .

    SAVE            shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 9
    DEF             shift and go to state 11
    TYPE            shift and go to state 12
    FOREACH         shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    END             reduce using rule 91 (empty -> .)

    ListInst                       shift and go to state 217
    Instruction                    shift and go to state 3
    instance                       shift and go to state 4
    loop_statements                shift and go to state 7
    IfStatement                    shift and go to state 8
    funct_call                     shift and go to state 10
    empty                          shift and go to state 16

state 192

    (34) loop_statements -> FOREACH ID IN ID OBRACE ListInst CBRACE .

    END             reduce using rule 34 (loop_statements -> FOREACH ID IN ID OBRACE ListInst CBRACE .)


state 193

    (35) loop_statements -> WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE .

    END             reduce using rule 35 (loop_statements -> WHILE OPAREN condition CPAREN OBRACE ListInst CBRACE .)


state 194

    (36) IfStatement -> IF OPAREN condition CPAREN OBRACE ListInst CBRACE .

    ELSE            reduce using rule 36 (IfStatement -> IF OPAREN condition CPAREN OBRACE ListInst CBRACE .)
    END             reduce using rule 36 (IfStatement -> IF OPAREN condition CPAREN OBRACE ListInst CBRACE .)


state 195

    (10) Instruction -> ID ACTION SALE ID PRICE DPOINT ID AMOUNT . DPOINT ID

    DPOINT          shift and go to state 218


state 196

    (9) Instruction -> ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT . DPOINT NUMBER

    DPOINT          shift and go to state 219


state 197

    (11) Instruction -> ID ACTION SALE ID PRICE DPOINT operation AMOUNT . DPOINT operation

    DPOINT          shift and go to state 220


state 198

    (13) Instruction -> ID ACTION INVESTS ID COST DPOINT ID AMOUNT . DPOINT ID

    DPOINT          shift and go to state 221


state 199

    (12) Instruction -> ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT . DPOINT NUMBER

    DPOINT          shift and go to state 222


state 200

    (14) Instruction -> ID ACTION INVESTS ID COST DPOINT operation AMOUNT . DPOINT operation

    DPOINT          shift and go to state 223


state 201

    (20) Instruction -> ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE .

    END             reduce using rule 20 (Instruction -> ID ADD BILL OBRACE ID COMMA DESCRIP CBRACE .)


state 202

    (21) Instruction -> ID ADD BILL OBRACE ID COMMA NAME CBRACE .

    END             reduce using rule 21 (Instruction -> ID ADD BILL OBRACE ID COMMA NAME CBRACE .)


state 203

    (16) Instruction -> ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE .

    END             reduce using rule 16 (Instruction -> ID ADD BILL OBRACE NUMBER COMMA DESCRIP CBRACE .)


state 204

    (17) Instruction -> ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE .

    END             reduce using rule 17 (Instruction -> ID ADD BILL OBRACE NUMBER COMMA NAME CBRACE .)


state 205

    (18) Instruction -> ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE .

    END             reduce using rule 18 (Instruction -> ID ADD BILL OBRACE operation COMMA DESCRIP CBRACE .)


state 206

    (19) Instruction -> ID ADD BILL OBRACE operation COMMA NAME CBRACE .

    END             reduce using rule 19 (Instruction -> ID ADD BILL OBRACE operation COMMA NAME CBRACE .)


state 207

    (82) bus -> NAME COMMA collection COMMA collection .

    CBRACE          reduce using rule 82 (bus -> NAME COMMA collection COMMA collection .)


state 208

    (83) bus -> NAME COMMA ID COMMA ID .

    CBRACE          reduce using rule 83 (bus -> NAME COMMA ID COMMA ID .)


state 209

    (84) emp -> NAME COMMA SALARY DPOINT NUMBER .
    (56) operation -> NUMBER .

  ! reduce/reduce conflict for CBRACE resolved using rule 56 (operation -> NUMBER .)
    PLUS            reduce using rule 56 (operation -> NUMBER .)
    MINUS           reduce using rule 56 (operation -> NUMBER .)
    DIV             reduce using rule 56 (operation -> NUMBER .)
    MULT            reduce using rule 56 (operation -> NUMBER .)
    CBRACE          reduce using rule 56 (operation -> NUMBER .)

  ! CBRACE          [ reduce using rule 84 (emp -> NAME COMMA SALARY DPOINT NUMBER .) ]


state 210

    (85) emp -> NAME COMMA SALARY DPOINT ID .
    (55) operation -> ID .

  ! reduce/reduce conflict for CBRACE resolved using rule 55 (operation -> ID .)
    PLUS            reduce using rule 55 (operation -> ID .)
    MINUS           reduce using rule 55 (operation -> ID .)
    DIV             reduce using rule 55 (operation -> ID .)
    MULT            reduce using rule 55 (operation -> ID .)
    CBRACE          reduce using rule 55 (operation -> ID .)

  ! CBRACE          [ reduce using rule 85 (emp -> NAME COMMA SALARY DPOINT ID .) ]


state 211

    (86) emp -> NAME COMMA SALARY DPOINT operation .
    (51) operation -> operation . PLUS operation
    (52) operation -> operation . MINUS operation
    (53) operation -> operation . DIV operation
    (54) operation -> operation . MULT operation

    CBRACE          reduce using rule 86 (emp -> NAME COMMA SALARY DPOINT operation .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    DIV             shift and go to state 84
    MULT            shift and go to state 85


state 212

    (87) prod -> NAME COMMA AMOUNT DPOINT NUMBER .
    (56) operation -> NUMBER .

  ! reduce/reduce conflict for CBRACE resolved using rule 56 (operation -> NUMBER .)
    PLUS            reduce using rule 56 (operation -> NUMBER .)
    MINUS           reduce using rule 56 (operation -> NUMBER .)
    DIV             reduce using rule 56 (operation -> NUMBER .)
    MULT            reduce using rule 56 (operation -> NUMBER .)
    CBRACE          reduce using rule 56 (operation -> NUMBER .)

  ! CBRACE          [ reduce using rule 87 (prod -> NAME COMMA AMOUNT DPOINT NUMBER .) ]


state 213

    (89) prod -> NAME COMMA AMOUNT DPOINT ID .
    (55) operation -> ID .

  ! reduce/reduce conflict for CBRACE resolved using rule 55 (operation -> ID .)
    PLUS            reduce using rule 55 (operation -> ID .)
    MINUS           reduce using rule 55 (operation -> ID .)
    DIV             reduce using rule 55 (operation -> ID .)
    MULT            reduce using rule 55 (operation -> ID .)
    CBRACE          reduce using rule 55 (operation -> ID .)

  ! CBRACE          [ reduce using rule 89 (prod -> NAME COMMA AMOUNT DPOINT ID .) ]


state 214

    (90) prod -> NAME COMMA AMOUNT DPOINT operation .
    (51) operation -> operation . PLUS operation
    (52) operation -> operation . MINUS operation
    (53) operation -> operation . DIV operation
    (54) operation -> operation . MULT operation

    CBRACE          reduce using rule 90 (prod -> NAME COMMA AMOUNT DPOINT operation .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    DIV             shift and go to state 84
    MULT            shift and go to state 85


state 215

    (31) Params -> TYPE ID COMMA Params .

    CPAREN          reduce using rule 31 (Params -> TYPE ID COMMA Params .)


state 216

    (29) Instruction -> DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst . CBRACE

    CBRACE          shift and go to state 224


state 217

    (30) Instruction -> DEF VOID ID OPAREN Params CPAREN OBRACE ListInst . CBRACE

    CBRACE          shift and go to state 225


state 218

    (10) Instruction -> ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT . ID

    ID              shift and go to state 226


state 219

    (9) Instruction -> ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT . NUMBER

    NUMBER          shift and go to state 227


state 220

    (11) Instruction -> ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT . operation
    (51) operation -> . operation PLUS operation
    (52) operation -> . operation MINUS operation
    (53) operation -> . operation DIV operation
    (54) operation -> . operation MULT operation
    (55) operation -> . ID
    (56) operation -> . NUMBER
    (57) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 91
    NUMBER          shift and go to state 53
    OPAREN          shift and go to state 54

    operation                      shift and go to state 228

state 221

    (13) Instruction -> ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT . ID

    ID              shift and go to state 229


state 222

    (12) Instruction -> ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT . NUMBER

    NUMBER          shift and go to state 230


state 223

    (14) Instruction -> ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT . operation
    (51) operation -> . operation PLUS operation
    (52) operation -> . operation MINUS operation
    (53) operation -> . operation DIV operation
    (54) operation -> . operation MULT operation
    (55) operation -> . ID
    (56) operation -> . NUMBER
    (57) operation -> . OPAREN operation CPAREN

    ID              shift and go to state 91
    NUMBER          shift and go to state 53
    OPAREN          shift and go to state 54

    operation                      shift and go to state 231

state 224

    (29) Instruction -> DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE .

    END             reduce using rule 29 (Instruction -> DEF TYPE ID OPAREN Params CPAREN OBRACE ListInst CBRACE .)


state 225

    (30) Instruction -> DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE .

    END             reduce using rule 30 (Instruction -> DEF VOID ID OPAREN Params CPAREN OBRACE ListInst CBRACE .)


state 226

    (10) Instruction -> ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID .

    END             reduce using rule 10 (Instruction -> ID ACTION SALE ID PRICE DPOINT ID AMOUNT DPOINT ID .)


state 227

    (9) Instruction -> ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER .

    END             reduce using rule 9 (Instruction -> ID ACTION SALE ID PRICE DPOINT NUMBER AMOUNT DPOINT NUMBER .)


state 228

    (11) Instruction -> ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation .
    (51) operation -> operation . PLUS operation
    (52) operation -> operation . MINUS operation
    (53) operation -> operation . DIV operation
    (54) operation -> operation . MULT operation

    END             reduce using rule 11 (Instruction -> ID ACTION SALE ID PRICE DPOINT operation AMOUNT DPOINT operation .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    DIV             shift and go to state 84
    MULT            shift and go to state 85


state 229

    (13) Instruction -> ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID .

    END             reduce using rule 13 (Instruction -> ID ACTION INVESTS ID COST DPOINT ID AMOUNT DPOINT ID .)


state 230

    (12) Instruction -> ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER .

    END             reduce using rule 12 (Instruction -> ID ACTION INVESTS ID COST DPOINT NUMBER AMOUNT DPOINT NUMBER .)


state 231

    (14) Instruction -> ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation .
    (51) operation -> operation . PLUS operation
    (52) operation -> operation . MINUS operation
    (53) operation -> operation . DIV operation
    (54) operation -> operation . MULT operation

    END             reduce using rule 14 (Instruction -> ID ACTION INVESTS ID COST DPOINT operation AMOUNT DPOINT operation .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    DIV             shift and go to state 84
    MULT            shift and go to state 85

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 103 resolved as shift
WARNING: shift/reduce conflict for OR in state 103 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 113 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 114 resolved as shift
WARNING: shift/reduce conflict for AND in state 142 resolved as shift
WARNING: shift/reduce conflict for OR in state 142 resolved as shift
WARNING: shift/reduce conflict for AND in state 143 resolved as shift
WARNING: shift/reduce conflict for OR in state 143 resolved as shift
WARNING: shift/reduce conflict for AMOUNT in state 173 resolved as shift
WARNING: shift/reduce conflict for AMOUNT in state 174 resolved as shift
WARNING: shift/reduce conflict for AMOUNT in state 176 resolved as shift
WARNING: shift/reduce conflict for AMOUNT in state 177 resolved as shift
WARNING: reduce/reduce conflict in state 44 resolved using rule (operation -> ID)
WARNING: rejected rule (Assignable -> ID) in state 44
WARNING: reduce/reduce conflict in state 209 resolved using rule (operation -> NUMBER)
WARNING: rejected rule (emp -> NAME COMMA SALARY DPOINT NUMBER) in state 209
WARNING: reduce/reduce conflict in state 210 resolved using rule (operation -> ID)
WARNING: rejected rule (emp -> NAME COMMA SALARY DPOINT ID) in state 210
WARNING: reduce/reduce conflict in state 212 resolved using rule (operation -> NUMBER)
WARNING: rejected rule (prod -> NAME COMMA AMOUNT DPOINT NUMBER) in state 212
WARNING: reduce/reduce conflict in state 213 resolved using rule (operation -> ID)
WARNING: rejected rule (prod -> NAME COMMA AMOUNT DPOINT ID) in state 213
WARNING: Rule (Assignable -> ID) is never reduced
WARNING: Rule (emp -> NAME COMMA SALARY DPOINT NUMBER) is never reduced
WARNING: Rule (emp -> NAME COMMA SALARY DPOINT ID) is never reduced
WARNING: Rule (prod -> NAME COMMA AMOUNT DPOINT NUMBER) is never reduced
WARNING: Rule (prod -> NAME COMMA AMOUNT DPOINT ID) is never reduced
