
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN CBR CBRACE COMMA END ID NAME NUMBER OBR OBRACE POINT TYPE TYPE TYPE TYPE TYPEProgram : ListInstListInst : Instruction END ListInst\n                | Instruction ENDInstruction : instanceinstance : TYPE ID ASSIGN Assignable\n                | ID ASSIGN AssignableAssignable : OBRACE subType CBRACE\n                  | OBR instance_list CBR\n                  | IDsubType : bus\n               | emp\n               | prodinstance_list : instance COMMA instance_list\n                     | ID COMMA instance_list\n                     | ID\n                     | instancebus : instance COMMA instanceemp : NAME COMMA NUMBERprod : NAME COMMA NUMBER COMMA NUMBER'
    
_lr_action_items = {'TYPE':([0,7,14,15,27,30,31,],[5,5,5,5,5,5,5,]),'ID':([0,5,7,9,11,14,15,27,30,31,],[6,8,6,12,12,6,25,6,25,25,]),'$end':([1,2,7,10,],[0,-1,-3,-2,]),'END':([3,4,12,13,16,26,29,],[7,-4,-9,-6,-5,-7,-8,]),'ASSIGN':([6,8,25,],[9,11,9,]),'OBRACE':([9,11,],[14,14,]),'OBR':([9,11,],[15,15,]),'COMMA':([12,13,16,21,22,24,25,26,29,33,],[-9,-6,-5,27,28,30,31,-7,-8,36,]),'CBR':([12,13,16,23,24,25,26,29,34,35,],[-9,-6,-5,29,-16,-15,-7,-8,-13,-14,]),'CBRACE':([12,13,16,17,18,19,20,26,29,32,33,37,],[-9,-6,-5,26,-10,-11,-12,-7,-8,-17,-18,-19,]),'NAME':([14,],[22,]),'NUMBER':([28,36,],[33,37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Program':([0,],[1,]),'ListInst':([0,7,],[2,10,]),'Instruction':([0,7,],[3,3,]),'instance':([0,7,14,15,27,30,31,],[4,4,21,24,32,24,24,]),'Assignable':([9,11,],[13,16,]),'subType':([14,],[17,]),'bus':([14,],[18,]),'emp':([14,],[19,]),'prod':([14,],[20,]),'instance_list':([15,30,31,],[23,34,35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Program","S'",1,None,None,None),
  ('Program -> ListInst','Program',1,'p_program','parser_rules.py',7),
  ('ListInst -> Instruction END ListInst','ListInst',3,'p_list_instructions','parser_rules.py',12),
  ('ListInst -> Instruction END','ListInst',2,'p_list_instructions','parser_rules.py',13),
  ('Instruction -> instance','Instruction',1,'p_instruction','parser_rules.py',21),
  ('instance -> TYPE ID ASSIGN Assignable','instance',4,'p_instance','parser_rules.py',25),
  ('instance -> ID ASSIGN Assignable','instance',3,'p_instance','parser_rules.py',26),
  ('Assignable -> OBRACE subType CBRACE','Assignable',3,'p_Assignable','parser_rules.py',34),
  ('Assignable -> OBR instance_list CBR','Assignable',3,'p_Assignable','parser_rules.py',35),
  ('Assignable -> ID','Assignable',1,'p_Assignable','parser_rules.py',36),
  ('subType -> bus','subType',1,'p_subType','parser_rules.py',45),
  ('subType -> emp','subType',1,'p_subType','parser_rules.py',46),
  ('subType -> prod','subType',1,'p_subType','parser_rules.py',47),
  ('instance_list -> instance COMMA instance_list','instance_list',3,'p_instance_list','parser_rules.py',52),
  ('instance_list -> ID COMMA instance_list','instance_list',3,'p_instance_list','parser_rules.py',53),
  ('instance_list -> ID','instance_list',1,'p_instance_list','parser_rules.py',54),
  ('instance_list -> instance','instance_list',1,'p_instance_list','parser_rules.py',55),
  ('bus -> instance COMMA instance','bus',3,'p_bus','parser_rules.py',62),
  ('emp -> NAME COMMA NUMBER','emp',3,'p_emp','parser_rules.py',66),
  ('prod -> NAME COMMA NUMBER COMMA NUMBER','prod',5,'p_prod','parser_rules.py',70),
]
